{
	"id": "1ac78819da8450d8b8a910635b7c7870",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/Test.sol": {
				"content": "pragma solidity ^0.8.7;\n\ncontract Owner {\n    \n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Test.sol": {
				"Owner": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":25:48  contract Owner {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":25:48  contract Owner {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122046b80f46829c5cf9a74b70e064326d68aed78af8a0c97de4ecde27f3cdb22b7064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122046b80f46829c5cf9a74b70e064326d68aed78af8a0c97de4ecde27f3cdb22b7064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB8 0xF CHAINID DUP3 SWAP13 0x5C 0xF9 0xA7 0x4B PUSH17 0xE064326D68AED78AF8A0C97DE4ECDE27F3 0xCD 0xB2 0x2B PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "25:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122046b80f46829c5cf9a74b70e064326d68aed78af8a0c97de4ecde27f3cdb22b7064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB8 0xF CHAINID DUP3 SWAP13 0x5C 0xF9 0xA7 0x4B PUSH17 0xE064326D68AED78AF8A0C97DE4ECDE27F3 0xCD 0xB2 0x2B PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "25:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 48,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046b80f46829c5cf9a74b70e064326d68aed78af8a0c97de4ecde27f3cdb22b7064736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 48,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 48,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 48,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Owner\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0x2be0a1c9f19cc55347f0e6ce3418fce06c823fec3841058c4a3def8d877a401e\",\"urls\":[\"bzz-raw://5bf4641c49878f56b386a6470924ebb414e438dfc2d81b7cbaee03921b724c3b\",\"dweb:/ipfs/QmcGXAv3hyJqhMgjfirccFsyD8CiK9eqLeQyRUCym7m4D1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Test.sol": {
				"ast": {
					"absolutePath": "contracts/Test.sol",
					"exportedSymbols": {
						"Owner": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Owner",
							"nameLocation": "34:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:23:0",
							"usedErrors": []
						}
					],
					"src": "0:48:0"
				},
				"id": 0
			}
		}
	}
}