{
	"id": "c9def482deb3c16012846bad2248d5b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/Test.sol": {
				"content": "//SPDX-License-Identifier: None\n\npragma solidity ^0.8.4;\n\ncontract Ownable {\n    address owner;\n\n    constructor () {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n}\n\ncontract Wallet is Ownable {\n\n    struct Payment {\n        uint amount;\n        uint timestamp;\n    }\n\n    struct Balance {\n        uint totalBalance;\n        uint numberPayment;\n        mapping(uint => Payment[]) payments;\n    }\n\n    mapping (address => Balance) wallets;\n\n    receive() external payable {\n        Payment memory payment = Payment(msg.value, block.timestamp);\n        wallets[msg.sender].totalBalance = msg.value;     \n        wallets[msg.sender].numberPayment++;     \n\n    }\n\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Test.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":58:253  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Test.sol\":101:151  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Test.sol\":126:131  owner */\n  0x00\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/Test.sol\":134:144  msg.sender */\n  caller\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Test.sol\":58:253  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":58:253  contract Ownable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017e1c66b77a105552dc7055a7e416a43a4ec3e15db8611af2ee26f6ae5165fbe64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060008054600160a060020a03191633179055603f80602f6000396000f3fe6080604052600080fdfea264697066735822122017e1c66b77a105552dc7055a7e416a43a4ec3e15db8611af2ee26f6ae5165fbe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3F DUP1 PUSH1 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xE1 0xC6 PUSH12 0x77A105552DC7055A7E416A43 LOG4 0xEC RETURNDATACOPY ISZERO 0xDB DUP7 GT 0xAF 0x2E 0xE2 PUSH16 0x6AE5165FBE64736F6C63430008070033 ",
							"sourceMap": "58:195:0:-:0;;;101:50;;;;;;;;;-1:-1:-1;126:5:0;:18;;-1:-1:-1;;;;;;126:18:0;134:10;126:18;;;58:195;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122017e1c66b77a105552dc7055a7e416a43a4ec3e15db8611af2ee26f6ae5165fbe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xE1 0xC6 PUSH12 0x77A105552DC7055A7E416A43 LOG4 0xEC RETURNDATACOPY ISZERO 0xDB DUP7 GT 0xAF 0x2E 0xE2 PUSH16 0x6AE5165FBE64736F6C63430008070033 ",
							"sourceMap": "58:195:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "20358",
								"totalCost": "32958"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 101,
									"end": 151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 101,
									"end": 151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 126,
									"end": 131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 126,
									"end": 144,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 134,
									"end": 144,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017e1c66b77a105552dc7055a7e416a43a4ec3e15db8611af2ee26f6ae5165fbe64736f6c63430008070033",
									".code": [
										{
											"begin": 58,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 253,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0x88280e1caac3a427322ca225c4031e7cc6a1fbdc5d1cc6906f5f8fd5ecb7ec83\",\"license\":\"None\",\"urls\":[\"bzz-raw://85d755e44efd59e361c6d70a33f547f379a681b7725e8d4575c173ac5309c443\",\"dweb:/ipfs/QmRjRNyceNNd4Td48pnG6n4CAHNNf5yQgwFfKfofB77DHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Test.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Wallet": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":255:750  contract Wallet is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Test.sol\":126:131  owner */\n  0x00\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/Test.sol\":134:144  msg.sender */\n  caller\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Test.sol\":255:750  contract Wallet is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":255:750  contract Wallet is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Test.sol\":595:630  Payment(msg.value, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \"contracts/Test.sol\":603:612  msg.value */\n      callvalue\n        /* \"contracts/Test.sol\":595:630  Payment(msg.value, block.timestamp) */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/Test.sol\":614:629  block.timestamp */\n      timestamp\n        /* \"contracts/Test.sol\":595:630  Payment(msg.value, block.timestamp) */\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Test.sol\":648:658  msg.sender */\n      caller\n        /* \"contracts/Test.sol\":570:592  Payment memory payment */\n      0x00\n        /* \"contracts/Test.sol\":640:659  wallets[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Test.sol\":640:647  wallets */\n      0x01\n        /* \"contracts/Test.sol\":640:659  wallets[msg.sender] */\n      swap2\n      dup3\n      swap1\n      mstore\n      swap4\n      dup5\n      keccak256\n        /* \"contracts/Test.sol\":640:684  wallets[msg.sender].totalBalance = msg.value */\n      swap2\n      dup3\n      sstore\n        /* \"contracts/Test.sol\":699:732  wallets[msg.sender].numberPayment */\n      add\n        /* \"contracts/Test.sol\":699:734  wallets[msg.sender].numberPayment++ */\n      dup1\n      sload\n        /* \"contracts/Test.sol\":595:630  Payment(msg.value, block.timestamp) */\n      swap2\n      swap3\n        /* \"contracts/Test.sol\":699:734  wallets[msg.sender].numberPayment++ */\n      tag_5\n      dup4\n      tag_6\n      jump\t// in\n    tag_5:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Test.sol\":560:747  {... */\n      pop\n        /* \"contracts/Test.sol\":255:750  contract Wallet is Ownable {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"#utility.yul\":14:303   */\n    tag_6:\n        /* \"#utility.yul\":53:56   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":74:91   */\n      dup3\n      eq\n        /* \"#utility.yul\":71:268   */\n      iszero\n      tag_9\n      jumpi\n        /* \"#utility.yul\":124:201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":121:122   */\n      0x00\n        /* \"#utility.yul\":114:202   */\n      mstore\n        /* \"#utility.yul\":225:229   */\n      0x11\n        /* \"#utility.yul\":222:223   */\n      0x04\n        /* \"#utility.yul\":215:230   */\n      mstore\n        /* \"#utility.yul\":253:257   */\n      0x24\n        /* \"#utility.yul\":250:251   */\n      0x00\n        /* \"#utility.yul\":243:258   */\n      revert\n        /* \"#utility.yul\":71:268   */\n    tag_9:\n      pop\n        /* \"#utility.yul\":295:296   */\n      0x01\n        /* \"#utility.yul\":284:297   */\n      add\n      swap1\n        /* \"#utility.yul\":14:303   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e78b3118110c3594defe6df9248c6575f09f84ef969910b79a9236209208eaef64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060008054600160a060020a0319163317905560c1806100316000396000f3fe60806040523660455760408051808201825234808252426020808401919091523360009081526001918290529384209182550180549192603d83604a565b919050555050005b600080fd5b60006000198214156084577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e78b3118110c3594defe6df9248c6575f09f84ef969910b79a9236209208eaef64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0xC1 DUP1 PUSH2 0x31 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x45 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE CALLVALUE DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 SWAP1 MSTORE SWAP4 DUP5 KECCAK256 SWAP2 DUP3 SSTORE ADD DUP1 SLOAD SWAP2 SWAP3 PUSH1 0x3D DUP4 PUSH1 0x4A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH1 0x84 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP12 BALANCE XOR GT 0xC CALLDATALOAD SWAP5 0xDE INVALID PUSH14 0xF9248C6575F09F84EF969910B79A SWAP3 CALLDATASIZE KECCAK256 SWAP3 ADDMOD 0xEA 0xEF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "255:495:0:-:0;;;;;;;;;;;;-1:-1:-1;126:5:0;:18;;-1:-1:-1;;;;;;126:18:0;134:10;126:18;;;255:495;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 74,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:305:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "61:242:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "100:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "121:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "124:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "114:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "114:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "114:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "222:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "225:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "215:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "215:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "215:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "250:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "253:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "243:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "243:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "243:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "88:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "84:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "84:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "74:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "74:17:1"
															},
															"nodeType": "YulIf",
															"src": "71:197:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "277:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "288:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "295:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "43:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"src": "14:289:1"
											}
										]
									},
									"contents": "{\n    { }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523660455760408051808201825234808252426020808401919091523360009081526001918290529384209182550180549192603d83604a565b919050555050005b600080fd5b60006000198214156084577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e78b3118110c3594defe6df9248c6575f09f84ef969910b79a9236209208eaef64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x45 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE CALLVALUE DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 SWAP1 MSTORE SWAP4 DUP5 KECCAK256 SWAP2 DUP3 SSTORE ADD DUP1 SLOAD SWAP2 SWAP3 PUSH1 0x3D DUP4 PUSH1 0x4A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH1 0x84 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP12 BALANCE XOR GT 0xC CALLDATALOAD SWAP5 0xDE INVALID PUSH14 0xF9248C6575F09F84EF969910B79A SWAP3 CALLDATASIZE KECCAK256 SWAP3 ADDMOD 0xEA 0xEF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "255:495:0:-:0;;;;;;595:35;;;;;;;;603:9;595:35;;;614:15;595:35;;;;;;;;648:10;570:22;640:19;;;:7;:19;;;;;;;:44;;;699:33;:35;;595;;699;;;:::i;:::-;;;;;;560:187;255:495;;;;;14:289:1;53:3;-1:-1:-1;;74:17:1;;71:197;;;124:77;121:1;114:88;225:4;222:1;215:15;253:4;250:1;243:15;71:197;-1:-1:-1;295:1:1;284:13;;14:289::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "38600",
								"executionCost": "20385",
								"totalCost": "58985"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 126,
									"end": 131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 126,
									"end": 144,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 134,
									"end": 144,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 255,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 750,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e78b3118110c3594defe6df9248c6575f09f84ef969910b79a9236209208eaef64736f6c63430008070033",
									".code": [
										{
											"begin": 255,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 255,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 750,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 603,
											"end": 612,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 629,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 648,
											"end": 658,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 570,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 640,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 640,
											"end": 659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 640,
											"end": 659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 640,
											"end": 684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 640,
											"end": 684,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 699,
											"end": 732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 699,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 699,
											"end": 734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 699,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 699,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 750,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 303,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 56,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 74,
											"end": 91,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 74,
											"end": 91,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 71,
											"end": 268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 71,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 124,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 121,
											"end": 122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 225,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 253,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 250,
											"end": 251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 258,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 71,
											"end": 268,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 284,
											"end": 297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Wallet\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0x88280e1caac3a427322ca225c4031e7cc6a1fbdc5d1cc6906f5f8fd5ecb7ec83\",\"license\":\"None\",\"urls\":[\"bzz-raw://85d755e44efd59e361c6d70a33f547f379a681b7725e8d4575c173ac5309c443\",\"dweb:/ipfs/QmRjRNyceNNd4Td48pnG6n4CAHNNf5yQgwFfKfofB77DHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Test.sol:Wallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 48,
								"contract": "contracts/Test.sol:Wallet",
								"label": "wallets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Balance)43_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Payment)32_storage)dyn_storage": {
								"base": "t_struct(Payment)32_storage",
								"encoding": "dynamic_array",
								"label": "struct Wallet.Payment[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Balance)43_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Wallet.Balance)",
								"numberOfBytes": "32",
								"value": "t_struct(Balance)43_storage"
							},
							"t_mapping(t_uint256,t_array(t_struct(Payment)32_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Wallet.Payment[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Payment)32_storage)dyn_storage"
							},
							"t_struct(Balance)43_storage": {
								"encoding": "inplace",
								"label": "struct Wallet.Balance",
								"members": [
									{
										"astId": 34,
										"contract": "contracts/Test.sol:Wallet",
										"label": "totalBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 36,
										"contract": "contracts/Test.sol:Wallet",
										"label": "numberPayment",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 42,
										"contract": "contracts/Test.sol:Wallet",
										"label": "payments",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_array(t_struct(Payment)32_storage)dyn_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Payment)32_storage": {
								"encoding": "inplace",
								"label": "struct Wallet.Payment",
								"members": [
									{
										"astId": 29,
										"contract": "contracts/Test.sol:Wallet",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 31,
										"contract": "contracts/Test.sol:Wallet",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/Test.sol:34:9:\n   |\n34 |         Payment memory payment = Payment(msg.value, block.timestamp);\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 592,
					"file": "contracts/Test.sol",
					"start": 570
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Test.sol": {
				"ast": {
					"absolutePath": "contracts/Test.sol",
					"exportedSymbols": {
						"Ownable": [
							25
						],
						"Wallet": [
							79
						]
					},
					"id": 80,
					"license": "None",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Ownable",
							"nameLocation": "67:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "89:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "81:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "81:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "116:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "126:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "134:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "134:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "126:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "126:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:0:0"
									},
									"scope": 25,
									"src": "101:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "178:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "196:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "196:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "196:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "217:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "188:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "188:45:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "243:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "166:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:0"
									},
									"src": "157:94:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "58:195:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 26,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 25,
										"src": "274:7:0"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79,
								25
							],
							"name": "Wallet",
							"nameLocation": "264:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Wallet.Payment",
									"id": 32,
									"members": [
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "319:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 32,
											"src": "314:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 28,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "314:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 31,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "340:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 32,
											"src": "335:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 30,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "335:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Payment",
									"nameLocation": "296:7:0",
									"nodeType": "StructDefinition",
									"scope": 79,
									"src": "289:67:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Wallet.Balance",
									"id": 43,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "totalBalance",
											"nameLocation": "392:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "387:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "387:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "numberPayment",
											"nameLocation": "419:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "414:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "414:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "payments",
											"nameLocation": "469:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "442:35:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Payment_$32_storage_$dyn_storage_$",
												"typeString": "mapping(uint256 => struct Wallet.Payment[])"
											},
											"typeName": {
												"id": 41,
												"keyType": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "442:26:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Payment_$32_storage_$dyn_storage_$",
													"typeString": "mapping(uint256 => struct Wallet.Payment[])"
												},
												"valueType": {
													"baseType": {
														"id": 39,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 38,
															"name": "Payment",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 32,
															"src": "458:7:0"
														},
														"referencedDeclaration": 32,
														"src": "458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$32_storage_ptr",
															"typeString": "struct Wallet.Payment"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "458:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Payment_$32_storage_$dyn_storage_ptr",
														"typeString": "struct Wallet.Payment[]"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nameLocation": "369:7:0",
									"nodeType": "StructDefinition",
									"scope": 79,
									"src": "362:122:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "wallets",
									"nameLocation": "519:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 79,
									"src": "490:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$43_storage_$",
										"typeString": "mapping(address => struct Wallet.Balance)"
									},
									"typeName": {
										"id": 47,
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "499:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "490:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$43_storage_$",
											"typeString": "mapping(address => struct Wallet.Balance)"
										},
										"valueType": {
											"id": 46,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 45,
												"name": "Balance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 43,
												"src": "510:7:0"
											},
											"referencedDeclaration": 43,
											"src": "510:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balance_$43_storage_ptr",
												"typeString": "struct Wallet.Balance"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "560:187:0",
										"statements": [
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "payment",
														"nameLocation": "585:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 77,
														"src": "570:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$32_memory_ptr",
															"typeString": "struct Wallet.Payment"
														},
														"typeName": {
															"id": 52,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 51,
																"name": "Payment",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 32,
																"src": "570:7:0"
															},
															"referencedDeclaration": 32,
															"src": "570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Payment_$32_storage_ptr",
																"typeString": "struct Wallet.Payment"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 55,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "603:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "603:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 57,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "614:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "614:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 54,
														"name": "Payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Payment_$32_storage_ptr_$",
															"typeString": "type(struct Wallet.Payment storage pointer)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "595:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$32_memory_ptr",
														"typeString": "struct Wallet.Payment memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "570:60:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 61,
																"name": "wallets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "640:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$43_storage_$",
																	"typeString": "mapping(address => struct Wallet.Balance storage ref)"
																}
															},
															"id": 64,
															"indexExpression": {
																"expression": {
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "648:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "648:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "640:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$43_storage",
																"typeString": "struct Wallet.Balance storage ref"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "640:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "675:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "675:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "640:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "640:44:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "699:35:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 70,
																"name": "wallets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$43_storage_$",
																	"typeString": "mapping(address => struct Wallet.Balance storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"expression": {
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "707:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "707:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "699:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$43_storage",
																"typeString": "struct Wallet.Balance storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numberPayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "699:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "699:35:0"
											}
										]
									},
									"id": 78,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:0:0"
									},
									"scope": 79,
									"src": "533:214:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 80,
							"src": "255:495:0",
							"usedErrors": []
						}
					],
					"src": "33:717:0"
				},
				"id": 0
			}
		}
	}
}