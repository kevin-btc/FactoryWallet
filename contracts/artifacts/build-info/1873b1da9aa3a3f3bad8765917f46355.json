{
	"id": "1873b1da9aa3a3f3bad8765917f46355",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/Test.sol": {
				"content": "//SPDX-License-Identifier: None\n\npragma solidity ^0.8.4;\n\ncontract Ownable {\n    address owner;\n\n    constructor () {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n}\n\ncontract Wallet is Ownable {\n\n    struct Payment {\n        uint amount;\n        uint timestamp;\n    }\n\n    struct Balance {\n        uint totalBalance;\n        uint numberPayment;\n        mapping(uint => Payment[]) payments;\n    }\n\n    receive() external payable {\n        Payment memory payment = Payment(msg.value, block.timestamp);\n        \n\n    }\n\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Test.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":58:253  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Test.sol\":101:151  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Test.sol\":126:131  owner */\n  0x00\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/Test.sol\":134:144  msg.sender */\n  caller\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Test.sol\":58:253  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":58:253  contract Ownable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203955fdb22ff65a7e0bd1251a5ae411bb986693fc95c0795f8030f72f258a629964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060008054600160a060020a03191633179055603f80602f6000396000f3fe6080604052600080fdfea26469706673582212203955fdb22ff65a7e0bd1251a5ae411bb986693fc95c0795f8030f72f258a629964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3F DUP1 PUSH1 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY SSTORE REVERT 0xB2 0x2F 0xF6 GAS PUSH31 0xBD1251A5AE411BB986693FC95C0795F8030F72F258A629964736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "58:195:0:-:0;;;101:50;;;;;;;;;-1:-1:-1;126:5:0;:18;;-1:-1:-1;;;;;;126:18:0;134:10;126:18;;;58:195;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203955fdb22ff65a7e0bd1251a5ae411bb986693fc95c0795f8030f72f258a629964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY SSTORE REVERT 0xB2 0x2F 0xF6 GAS PUSH31 0xBD1251A5AE411BB986693FC95C0795F8030F72F258A629964736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "58:195:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "20358",
								"totalCost": "32958"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 101,
									"end": 151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 101,
									"end": 151,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 101,
									"end": 151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 126,
									"end": 131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 126,
									"end": 144,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 134,
									"end": 144,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 253,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203955fdb22ff65a7e0bd1251a5ae411bb986693fc95c0795f8030f72f258a629964736f6c63430008070033",
									".code": [
										{
											"begin": 58,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 253,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0xf5922aae682961b0564a712446e41b835f75e98f556c5247584916abce4f51bd\",\"license\":\"None\",\"urls\":[\"bzz-raw://7c5754d94077a7f8ee660ddd5e998e17f361ea7ca456233c936128042cf765b6\",\"dweb:/ipfs/QmdMHCENvtXUdK7vpxG6G4UMNkahutUkLXkYyQ1eUJVDqY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Test.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Wallet": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Test.sol\":255:607  contract Wallet is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Test.sol\":126:131  owner */\n  0x00\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/Test.sol\":134:144  msg.sender */\n  caller\n    /* \"contracts/Test.sol\":126:144  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Test.sol\":255:607  contract Wallet is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Test.sol\":255:607  contract Wallet is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Test.sol\":552:587  Payment(msg.value, block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Test.sol\":560:569  msg.value */\n      callvalue\n        /* \"contracts/Test.sol\":552:587  Payment(msg.value, block.timestamp) */\n      dup2\n      mstore\n        /* \"contracts/Test.sol\":571:586  block.timestamp */\n      timestamp\n        /* \"contracts/Test.sol\":552:587  Payment(msg.value, block.timestamp) */\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n        /* \"contracts/Test.sol\":255:607  contract Wallet is Ownable {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b0d32c0ae913653a00de6c6adfd8e93e8adb42fe119ec79a2bd2d9b0c95059164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060008054600160a060020a03191633179055605980602f6000396000f3fe608060405236601e576040805180820190915234815242602090910152005b600080fdfea26469706673582212200b0d32c0ae913653a00de6c6adfd8e93e8adb42fe119ec79a2bd2d9b0c95059164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x59 DUP1 PUSH1 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x1E JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xD ORIGIN 0xC0 0xAE SWAP2 CALLDATASIZE MSTORE8 LOG0 0xD 0xE6 0xC6 0xAD REVERT DUP15 SWAP4 0xE8 0xAD 0xB4 0x2F 0xE1 NOT 0xEC PUSH26 0xA2BD2D9B0C95059164736F6C6343000807003300000000000000 ",
							"sourceMap": "255:352:0:-:0;;;;;;;;;;;;-1:-1:-1;126:5:0;:18;;-1:-1:-1;;;;;;126:18:0;134:10;126:18;;;255:352;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236601e576040805180820190915234815242602090910152005b600080fdfea26469706673582212200b0d32c0ae913653a00de6c6adfd8e93e8adb42fe119ec79a2bd2d9b0c95059164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x1E JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xD ORIGIN 0xC0 0xAE SWAP2 CALLDATASIZE MSTORE8 LOG0 0xD 0xE6 0xC6 0xAD REVERT DUP15 SWAP4 0xE8 0xAD 0xB4 0x2F 0xE1 NOT 0xEC PUSH26 0xA2BD2D9B0C95059164736F6C6343000807003300000000000000 ",
							"sourceMap": "255:352:0:-:0;;;;;;552:35;;;;;;;;;560:9;552:35;;571:15;552:35;;;;;255:352;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17800",
								"executionCost": "20361",
								"totalCost": "38161"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 126,
									"end": 131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 126,
									"end": 144,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 134,
									"end": 144,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 255,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 607,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b0d32c0ae913653a00de6c6adfd8e93e8adb42fe119ec79a2bd2d9b0c95059164736f6c63430008070033",
									".code": [
										{
											"begin": 255,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 255,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 560,
											"end": 569,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 586,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 607,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 607,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test.sol\":\"Wallet\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Test.sol\":{\"keccak256\":\"0xf5922aae682961b0564a712446e41b835f75e98f556c5247584916abce4f51bd\",\"license\":\"None\",\"urls\":[\"bzz-raw://7c5754d94077a7f8ee660ddd5e998e17f361ea7ca456233c936128042cf765b6\",\"dweb:/ipfs/QmdMHCENvtXUdK7vpxG6G4UMNkahutUkLXkYyQ1eUJVDqY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Test.sol:Wallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/Test.sol:32:9:\n   |\n32 |         Payment memory payment = Payment(msg.value, block.timestamp);\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 549,
					"file": "contracts/Test.sol",
					"start": 527
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Test.sol": {
				"ast": {
					"absolutePath": "contracts/Test.sol",
					"exportedSymbols": {
						"Ownable": [
							25
						],
						"Wallet": [
							58
						]
					},
					"id": 59,
					"license": "None",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Ownable",
							"nameLocation": "67:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "89:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "81:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "81:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "116:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "126:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "134:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "134:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "126:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "126:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:0:0"
									},
									"scope": 25,
									"src": "101:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "178:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "196:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "196:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "196:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "217:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "188:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "188:45:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "243:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "166:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:0"
									},
									"src": "157:94:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 59,
							"src": "58:195:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 26,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 25,
										"src": "274:7:0"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58,
								25
							],
							"name": "Wallet",
							"nameLocation": "264:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Wallet.Payment",
									"id": 32,
									"members": [
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "319:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 32,
											"src": "314:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 28,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "314:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 31,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "340:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 32,
											"src": "335:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 30,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "335:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Payment",
									"nameLocation": "296:7:0",
									"nodeType": "StructDefinition",
									"scope": 58,
									"src": "289:67:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Wallet.Balance",
									"id": 43,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "totalBalance",
											"nameLocation": "392:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "387:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "387:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "numberPayment",
											"nameLocation": "419:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "414:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "414:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "payments",
											"nameLocation": "469:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "442:35:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Payment_$32_storage_$dyn_storage_$",
												"typeString": "mapping(uint256 => struct Wallet.Payment[])"
											},
											"typeName": {
												"id": 41,
												"keyType": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "442:26:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Payment_$32_storage_$dyn_storage_$",
													"typeString": "mapping(uint256 => struct Wallet.Payment[])"
												},
												"valueType": {
													"baseType": {
														"id": 39,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 38,
															"name": "Payment",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 32,
															"src": "458:7:0"
														},
														"referencedDeclaration": 32,
														"src": "458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$32_storage_ptr",
															"typeString": "struct Wallet.Payment"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "458:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Payment_$32_storage_$dyn_storage_ptr",
														"typeString": "struct Wallet.Payment[]"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nameLocation": "369:7:0",
									"nodeType": "StructDefinition",
									"scope": 58,
									"src": "362:122:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "517:87:0",
										"statements": [
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "payment",
														"nameLocation": "542:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "527:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$32_memory_ptr",
															"typeString": "struct Wallet.Payment"
														},
														"typeName": {
															"id": 47,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 46,
																"name": "Payment",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 32,
																"src": "527:7:0"
															},
															"referencedDeclaration": 32,
															"src": "527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Payment_$32_storage_ptr",
																"typeString": "struct Wallet.Payment"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "560:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "560:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 52,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "571:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "571:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 49,
														"name": "Payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Payment_$32_storage_ptr_$",
															"typeString": "type(struct Wallet.Payment storage pointer)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "552:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$32_memory_ptr",
														"typeString": "struct Wallet.Payment memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "527:60:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:0"
									},
									"scope": 58,
									"src": "490:114:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 59,
							"src": "255:352:0",
							"usedErrors": []
						}
					],
					"src": "33:574:0"
				},
				"id": 0
			}
		}
	}
}