{
	"id": "7f5f06229c80f49cd67829678c3308cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Vote {\n  struct Voter {\n    bool voted;\n    uint8 vote;\n    uint32 weight;\n    address delegate;\n  }\n\n  struct Proposal {\n    bytes32 name;\n    uint256 voteCount;\n  }\n\n  mapping(address => Voter) private voters;\n\n  Proposal[] public proposals;\n\n  address public chairman;\n\n  bool public isOpenVote = true;\n\n  constructor(bytes32[] memory _proposalNames) {\n    chairman = msg.sender;\n    voters[chairman].weight = 1;\n\n    /** \n    [\"0x616c696365000000000000000000000000000000000000000000000000000000\",\"0x626f620000000000000000000000000000000000000000000000000000000000\"]\n    [\"alice\",\"bob\"]\n    **/\n\n    for (uint256 i = 0; i < _proposalNames.length; i++) {\n      proposals.push(Proposal({ name: _proposalNames[i], voteCount: 0 }));\n    }\n  }\n\n  modifier onlyChairman() {\n    require(chairman == msg.sender, \"Only chairperson can execute this function.\");\n    _;\n  }\n\n  modifier voteOpened() {\n    require(isOpenVote == true, \"Votes are closed.\");\n    _;\n  }\n\n  modifier notYetVoted(address _voter) {\n    require(!voters[_voter].voted, \"The voter already voted.\");\n    _;\n  }\n\n  modifier noRightToVote(address _voter) {\n    require(voters[_voter].weight == 0, \"You have already a right to vote.\");\n    _;\n  }\n\n  modifier rightToVote(address _voter) {\n    require(voters[_voter].weight != 0, \"You don't have the right to vote.\");\n    _;\n  }\n\n  modifier onlyVoter(address _voter) {\n    require(\n      _voter == msg.sender,\n      \"You are not allowed to vote with this address.\"\n    );\n    _;\n  }\n\n  function giveRightToVote(address _voter)\n    external\n    onlyChairman\n    voteOpened\n    notYetVoted(_voter)\n    noRightToVote(_voter)\n  {\n    voters[_voter].weight = 1;\n  }\n\n  function vote(uint8 _proposalId, address _voter)\n    external\n    voteOpened\n    onlyVoter(_voter)\n    rightToVote(_voter)\n    notYetVoted(_voter)\n  {\n    voters[_voter].voted = true;\n    voters[_voter].vote = _proposalId;\n\n    proposals[_proposalId].voteCount += 1;\n  }\n\n  function proposalWinnerName() public view returns (bytes32 _winnerName) {\n    uint256 _numberOfWinnerVotes = 0;\n\n    for (uint8 i = 0; i < proposals.length; i++) {\n      if (proposals[i].voteCount > _numberOfWinnerVotes) {\n        _winnerName = proposals[i].name;\n        _numberOfWinnerVotes = proposals[i].voteCount;\n      }\n    }\n  }\n\n  function stopVote()\n    external\n    onlyChairman\n    returns (bytes32 _winnerName)\n  {\n    _winnerName = proposalWinnerName();\n    isOpenVote = false;\n\n  }\n\n  function winnerName() public view returns (bytes32 _winnerName){\n        require(!isOpenVote, \"Votes are not yet closed\");\n        _winnerName = proposalWinnerName();\n  }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/3_Ballot.sol": {
				"Vote": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairman",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpenVote",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposalWinnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_winnerName",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVote",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_winnerName",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_proposalId",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_winnerName",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Ballot.sol\":354:383  bool public isOpenVote = true */\n  0x02\n  dup1\n  sload\n  not(mul(0xff, exp(0x02, 0xa0)))\n  and\n  0x010000000000000000000000000000000000000000\n  or\n  swap1\n  sstore\n    /* \"contracts/3_Ballot.sol\":388:820  constructor(bytes32[] memory _proposalNames) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Ballot.sol\":439:447  chairman */\n  0x02\n    /* \"contracts/3_Ballot.sol\":439:460  chairman = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/3_Ballot.sol\":450:460  msg.sender */\n  caller\n    /* \"contracts/3_Ballot.sol\":439:460  chairman = msg.sender */\n  or\n  swap1\n  dup2\n  swap1\n  sstore\n  sub(exp(0x02, 0xa0), 0x01)\n    /* \"contracts/3_Ballot.sol\":473:481  chairman */\n  and\n    /* \"contracts/3_Ballot.sol\":439:447  chairman */\n  0x00\n    /* \"contracts/3_Ballot.sol\":466:482  voters[chairman] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/3_Ballot.sol\":466:493  voters[chairman].weight = 1 */\n  dup1\n  sload\n  not(0xffffffff0000)\n  and\n  0x010000\n  or\n  swap1\n  sstore\n    /* \"contracts/3_Ballot.sol\":682:816  for (uint256 i = 0; i < _proposalNames.length; i++) {... */\ntag_6:\n    /* \"contracts/3_Ballot.sol\":706:720  _proposalNames */\n  dup2\n    /* \"contracts/3_Ballot.sol\":706:727  _proposalNames.length */\n  mload\n    /* \"contracts/3_Ballot.sol\":702:703  i */\n  dup2\n    /* \"contracts/3_Ballot.sol\":702:727  i < _proposalNames.length */\n  lt\n    /* \"contracts/3_Ballot.sol\":682:816  for (uint256 i = 0; i < _proposalNames.length; i++) {... */\n  iszero\n  tag_7\n  jumpi\n    /* \"contracts/3_Ballot.sol\":742:751  proposals */\n  0x01\n    /* \"contracts/3_Ballot.sol\":757:808  Proposal({ name: _proposalNames[i], voteCount: 0 }) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/3_Ballot.sol\":774:788  _proposalNames */\n  dup5\n    /* \"contracts/3_Ballot.sol\":789:790  i */\n  dup5\n    /* \"contracts/3_Ballot.sol\":774:791  _proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_9\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_9:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"contracts/3_Ballot.sol\":757:808  Proposal({ name: _proposalNames[i], voteCount: 0 }) */\n  dup3\n  mstore\n    /* \"contracts/3_Ballot.sol\":804:805  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":757:808  Proposal({ name: _proposalNames[i], voteCount: 0 }) */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"contracts/3_Ballot.sol\":742:809  proposals.push(Proposal({ name: _proposalNames[i], voteCount: 0 })) */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"contracts/3_Ballot.sol\":729:732  i++ */\n  dup1\n  tag_11\n  dup2\n  tag_12\n  jump\t// in\ntag_11:\n  swap2\n  pop\n  pop\n    /* \"contracts/3_Ballot.sol\":682:816  for (uint256 i = 0; i < _proposalNames.length; i++) {... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"contracts/3_Ballot.sol\":388:820  constructor(bytes32[] memory _proposalNames) {... */\n  pop\n    /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n  jump(tag_14)\n    /* \"#utility.yul\":14:1162   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:153   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":204:210   */\n  dup2\n    /* \"#utility.yul\":196:202   */\n  dup3\n    /* \"#utility.yul\":189:211   */\n  revert\n    /* \"#utility.yul\":151:153   */\ntag_16:\n    /* \"#utility.yul\":242:251   */\n  dup3\n    /* \"#utility.yul\":236:252   */\n  mload\n    /* \"#utility.yul\":271:289   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":312:314   */\n  dup1\n    /* \"#utility.yul\":304:310   */\n  dup3\n    /* \"#utility.yul\":301:315   */\n  gt\n    /* \"#utility.yul\":298:300   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":333:339   */\n  dup4\n    /* \"#utility.yul\":325:331   */\n  dup5\n    /* \"#utility.yul\":318:340   */\n  revert\n    /* \"#utility.yul\":298:300   */\ntag_17:\n    /* \"#utility.yul\":376:382   */\n  dup2\n    /* \"#utility.yul\":365:374   */\n  dup6\n    /* \"#utility.yul\":361:383   */\n  add\n    /* \"#utility.yul\":351:383   */\n  swap2\n  pop\n    /* \"#utility.yul\":421:428   */\n  dup6\n    /* \"#utility.yul\":414:418   */\n  0x1f\n    /* \"#utility.yul\":410:412   */\n  dup4\n    /* \"#utility.yul\":406:419   */\n  add\n    /* \"#utility.yul\":402:429   */\n  slt\n    /* \"#utility.yul\":392:394   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":448:454   */\n  dup4\n    /* \"#utility.yul\":440:446   */\n  dup5\n    /* \"#utility.yul\":433:455   */\n  revert\n    /* \"#utility.yul\":392:394   */\ntag_18:\n    /* \"#utility.yul\":482:484   */\n  dup2\n    /* \"#utility.yul\":476:485   */\n  mload\n    /* \"#utility.yul\":504:506   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  dup2\n    /* \"#utility.yul\":497:507   */\n  gt\n    /* \"#utility.yul\":494:496   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":510:528   */\n  tag_20\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":557:559   */\n  dup4\n    /* \"#utility.yul\":553:555   */\n  dup2\n    /* \"#utility.yul\":549:560   */\n  mul\n    /* \"#utility.yul\":589:591   */\n  0x40\n    /* \"#utility.yul\":583:592   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  dup6\n    /* \"#utility.yul\":635:637   */\n  dup3\n    /* \"#utility.yul\":627:633   */\n  dup3\n    /* \"#utility.yul\":623:638   */\n  add\n    /* \"#utility.yul\":619:643   */\n  add\n    /* \"#utility.yul\":693:699   */\n  dup2\n    /* \"#utility.yul\":681:691   */\n  dup2\n    /* \"#utility.yul\":678:700   */\n  lt\n    /* \"#utility.yul\":673:675   */\n  dup6\n    /* \"#utility.yul\":661:671   */\n  dup3\n    /* \"#utility.yul\":658:676   */\n  gt\n    /* \"#utility.yul\":655:701   */\n  or\n    /* \"#utility.yul\":652:654   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":704:722   */\n  tag_23\n  tag_21\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":740:742   */\n  0x40\n    /* \"#utility.yul\":733:755   */\n  mstore\n    /* \"#utility.yul\":790:808   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":824:839   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":859:870   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":889:900   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":885:905   */\n  dup8\n  add\n    /* \"#utility.yul\":882:915   */\n  dup11\n  lt\n    /* \"#utility.yul\":879:881   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":933:939   */\n  dup8\n    /* \"#utility.yul\":925:931   */\n  dup9\n    /* \"#utility.yul\":918:940   */\n  revert\n    /* \"#utility.yul\":879:881   */\ntag_24:\n    /* \"#utility.yul\":960:966   */\n  dup8\n    /* \"#utility.yul\":951:966   */\n  swap6\n  pop\n    /* \"#utility.yul\":975:1131   */\ntag_25:\n    /* \"#utility.yul\":989:991   */\n  dup4\n    /* \"#utility.yul\":986:987   */\n  dup7\n    /* \"#utility.yul\":983:992   */\n  lt\n    /* \"#utility.yul\":975:1131   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1046:1056   */\n  dup1\n  mload\n    /* \"#utility.yul\":1034:1057   */\n  dup6\n  mstore\n    /* \"#utility.yul\":1007:1008   */\n  0x01\n    /* \"#utility.yul\":1000:1009   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1077:1089   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1109:1121   */\n  dup7\n  add\n    /* \"#utility.yul\":975:1131   */\n  jump(tag_25)\ntag_27:\n  pop\n    /* \"#utility.yul\":1150:1156   */\n  swap9\n    /* \"#utility.yul\":120:1162   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1167:1460   */\ntag_12:\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1227:1244   */\n  dup3\n  eq\n    /* \"#utility.yul\":1224:1226   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1279:1356   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1274:1277   */\n  dup2\n    /* \"#utility.yul\":1267:1357   */\n  mstore\n    /* \"#utility.yul\":1380:1384   */\n  0x11\n    /* \"#utility.yul\":1377:1378   */\n  0x04\n    /* \"#utility.yul\":1370:1385   */\n  mstore\n    /* \"#utility.yul\":1410:1414   */\n  0x24\n    /* \"#utility.yul\":1405:1408   */\n  dup2\n    /* \"#utility.yul\":1398:1415   */\n  revert\n    /* \"#utility.yul\":1224:1226   */\ntag_29:\n  pop\n    /* \"#utility.yul\":1452:1453   */\n  0x01\n    /* \"#utility.yul\":1441:1454   */\n  add\n  swap1\n    /* \"#utility.yul\":1214:1460   */\n  jump\t// out\n    /* \"#utility.yul\":1465:1649   */\ntag_21:\n    /* \"#utility.yul\":1517:1594   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1514:1515   */\n  0x00\n    /* \"#utility.yul\":1507:1595   */\n  mstore\n    /* \"#utility.yul\":1614:1618   */\n  0x41\n    /* \"#utility.yul\":1611:1612   */\n  0x04\n    /* \"#utility.yul\":1604:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x24\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1628:1643   */\n  revert\n    /* \"#utility.yul\":1497:1649   */\ntag_14:\n    /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x9e7b8d61\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb61bfe5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb81c6453\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2ba53f0\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2495c0ce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72133c96\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x87f7b975\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_Ballot.sol\":294:321  Proposal[] public proposals */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":2027:2363  function proposalWinnerName() public view returns (bytes32 _winnerName) {... */\n    tag_5:\n      tag_18\n      tag_23\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":326:349  address public chairman */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":1575:1749  function giveRightToVote(address _voter)... */\n    tag_7:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/3_Ballot.sol\":354:383  bool public isOpenVote = true */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":1753:2023  function vote(uint8 _proposalId, address _voter)... */\n    tag_9:\n      tag_29\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":2527:2697  function winnerName() public view returns (bytes32 _winnerName){... */\n    tag_10:\n      tag_18\n      tag_42\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":294:321  Proposal[] public proposals */\n    tag_15:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n    tag_19:\n        /* \"contracts/3_Ballot.sol\":862:870  chairman */\n      sload(0x02)\n        /* \"contracts/3_Ballot.sol\":2430:2449  bytes32 _winnerName */\n      0x00\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":862:870  chairman */\n      and\n        /* \"contracts/3_Ballot.sol\":874:884  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":862:884  chairman == msg.sender */\n      eq\n        /* \"contracts/3_Ballot.sol\":854:932  require(chairman == msg.sender, \"Only chairperson can execute this function.\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/3_Ballot.sol\":2473:2493  proposalWinnerName() */\n      tag_51\n        /* \"contracts/3_Ballot.sol\":2473:2491  proposalWinnerName */\n      tag_23\n        /* \"contracts/3_Ballot.sol\":2473:2493  proposalWinnerName() */\n      jump\t// in\n    tag_51:\n        /* \"contracts/3_Ballot.sol\":2499:2509  isOpenVote */\n      0x02\n        /* \"contracts/3_Ballot.sol\":2499:2517  isOpenVote = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":2459:2493  _winnerName = proposalWinnerName() */\n      swap2\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2027:2363  function proposalWinnerName() public view returns (bytes32 _winnerName) {... */\n    tag_23:\n        /* \"contracts/3_Ballot.sol\":2078:2097  bytes32 _winnerName */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/3_Ballot.sol\":2144:2359  for (uint8 i = 0; i < proposals.length; i++) {... */\n    tag_53:\n        /* \"contracts/3_Ballot.sol\":2166:2175  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2166:2182  proposals.length */\n      sload\n        /* \"contracts/3_Ballot.sol\":2162:2182  i < proposals.length */\n      0xff\n      dup3\n      and\n      lt\n        /* \"contracts/3_Ballot.sol\":2144:2359  for (uint8 i = 0; i < proposals.length; i++) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2226:2246  _numberOfWinnerVotes */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2201:2210  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2211:2212  i */\n      dup3\n        /* \"contracts/3_Ballot.sol\":2201:2213  proposals[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_56\n      jumpi\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_56:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2201:2223  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2201:2246  proposals[i].voteCount > _numberOfWinnerVotes */\n      gt\n        /* \"contracts/3_Ballot.sol\":2197:2353  if (proposals[i].voteCount > _numberOfWinnerVotes) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2272:2281  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2282:2283  i */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2272:2284  proposals[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_59\n      jumpi\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_59:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2272:2289  proposals[i].name */\n      0x00\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2258:2289  _winnerName = proposals[i].name */\n      swap3\n      pop\n        /* \"contracts/3_Ballot.sol\":2322:2331  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2332:2333  i */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2322:2334  proposals[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_61\n      jumpi\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_61:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2322:2344  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2299:2344  _numberOfWinnerVotes = proposals[i].voteCount */\n      swap2\n      pop\n        /* \"contracts/3_Ballot.sol\":2197:2353  if (proposals[i].voteCount > _numberOfWinnerVotes) {... */\n    tag_58:\n        /* \"contracts/3_Ballot.sol\":2184:2187  i++ */\n      dup1\n      tag_63\n      dup2\n      tag_64\n      jump\t// in\n    tag_63:\n      swap2\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2144:2359  for (uint8 i = 0; i < proposals.length; i++) {... */\n      jump(tag_53)\n    tag_54:\n      pop\n        /* \"contracts/3_Ballot.sol\":2027:2363  function proposalWinnerName() public view returns (bytes32 _winnerName) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":326:349  address public chairman */\n    tag_26:\n      and(sub(exp(0x02, 0xa0), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1575:1749  function giveRightToVote(address _voter)... */\n    tag_32:\n        /* \"contracts/3_Ballot.sol\":862:870  chairman */\n      and(sub(exp(0x02, 0xa0), 0x01), sload(0x02))\n        /* \"contracts/3_Ballot.sol\":874:884  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":862:884  chairman == msg.sender */\n      eq\n        /* \"contracts/3_Ballot.sol\":854:932  require(chairman == msg.sender, \"Only chairperson can execute this function.\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_66:\n        /* \"contracts/3_Ballot.sol\":984:994  isOpenVote */\n      sload(0x02)\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      iszero\n      iszero\n        /* \"contracts/3_Ballot.sol\":998:1002  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      eq\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_71\n      jump\t// in\n    tag_69:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":1092:1098  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      sload\n        /* \"contracts/3_Ballot.sol\":1677:1683  _voter */\n      dup2\n      swap1\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1091:1112  !voters[_voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_75\n      jump\t// in\n    tag_73:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1210:1224  voters[_voter] */\n      dup3\n      and\n        /* \"contracts/3_Ballot.sol\":1210:1216  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1210:1224  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1210:1231  voters[_voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1210:1224  voters[_voter] */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":1210:1231  voters[_voter].weight */\n      0x010000\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":1210:1236  voters[_voter].weight == 0 */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1202:1274  require(voters[_voter].weight == 0, \"You have already a right to vote.\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_79\n      jump\t// in\n    tag_77:\n      pop\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1719:1733  voters[_voter] */\n      and\n        /* \"contracts/3_Ballot.sol\":1719:1725  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1719:1733  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1719:1744  voters[_voter].weight = 1 */\n      dup1\n      sload\n      not(0xffffffff0000)\n      and\n      0x010000\n      or\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":1575:1749  function giveRightToVote(address _voter)... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":354:383  bool public isOpenVote = true */\n    tag_34:\n      sload(0x02)\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1753:2023  function vote(uint8 _proposalId, address _voter)... */\n    tag_40:\n        /* \"contracts/3_Ballot.sol\":984:994  isOpenVote */\n      sload(0x02)\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      iszero\n      iszero\n        /* \"contracts/3_Ballot.sol\":998:1002  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      eq\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_71\n      jump\t// in\n    tag_82:\n        /* \"contracts/3_Ballot.sol\":1844:1850  _voter */\n      dup1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1477:1497  _voter == msg.sender */\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":1487:1497  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":1477:1497  _voter == msg.sender */\n      eq\n        /* \"contracts/3_Ballot.sol\":1462:1559  require(... */\n      tag_85\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_87\n      jump\t// in\n    tag_85:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1341:1355  voters[_voter] */\n      dup3\n      and\n        /* \"contracts/3_Ballot.sol\":1341:1347  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1341:1355  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1341:1362  voters[_voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1341:1355  voters[_voter] */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":1341:1362  voters[_voter].weight */\n      0x010000\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":1333:1405  require(voters[_voter].weight != 0, \"You don't have the right to vote.\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_91\n      jump\t// in\n    tag_89:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      dup4\n      and\n        /* \"contracts/3_Ballot.sol\":1092:1098  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      sload\n        /* \"contracts/3_Ballot.sol\":1892:1898  _voter */\n      dup4\n      swap1\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1091:1112  !voters[_voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_75\n      jump\t// in\n    tag_93:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1908:1922  voters[_voter] */\n      dup5\n      and\n        /* \"contracts/3_Ballot.sol\":1908:1914  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1908:1922  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1908:1935  voters[_voter].voted = true */\n      dup1\n      sload\n      0xff\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      dup8\n      and\n        /* \"contracts/3_Ballot.sol\":1908:1935  voters[_voter].voted = true */\n      0x0100\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      dup2\n      mul\n      not(0xff00)\n      not(0xff)\n        /* \"contracts/3_Ballot.sol\":1908:1935  voters[_voter].voted = true */\n      swap1\n      swap4\n      and\n        /* \"contracts/3_Ballot.sol\":1931:1935  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1908:1935  voters[_voter].voted = true */\n      swap1\n      dup2\n      or\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      swap4\n      swap1\n      swap4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/3_Ballot.sol\":1981:2003  proposals[_proposalId] */\n      dup1\n      sload\n        /* \"contracts/3_Ballot.sol\":1931:1935  true */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"contracts/3_Ballot.sol\":1981:2003  proposals[_proposalId] */\n      dup2\n      lt\n      tag_96\n      jumpi\n      mstore(0x00, mul(0x4e487b71, exp(0x02, 0xe0)))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_96:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":1981:2013  proposals[_proposalId].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":1981:2018  proposals[_proposalId].voteCount += 1 */\n      dup3\n      dup3\n      sload\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":1753:2023  function vote(uint8 _proposalId, address _voter)... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2527:2697  function winnerName() public view returns (bytes32 _winnerName){... */\n    tag_42:\n        /* \"contracts/3_Ballot.sol\":2609:2619  isOpenVote */\n      sload(0x02)\n        /* \"contracts/3_Ballot.sol\":2570:2589  bytes32 _winnerName */\n      0x00\n      swap1\n        /* \"contracts/3_Ballot.sol\":2609:2619  isOpenVote */\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":2608:2619  !isOpenVote */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2600:2648  require(!isOpenVote, \"Votes are not yet closed\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_103\n      jump\t// in\n    tag_101:\n        /* \"contracts/3_Ballot.sol\":2672:2692  proposalWinnerName() */\n      tag_104\n        /* \"contracts/3_Ballot.sol\":2672:2690  proposalWinnerName */\n      tag_23\n        /* \"contracts/3_Ballot.sol\":2672:2692  proposalWinnerName() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/3_Ballot.sol\":2658:2692  _winnerName = proposalWinnerName() */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":2527:2697  function winnerName() public view returns (bytes32 _winnerName){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:212   */\n    tag_106:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":133:187   */\n      dup2\n      and\n        /* \"#utility.yul\":123:188   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":202:203   */\n      0x00\n        /* \"#utility.yul\":199:200   */\n      dup1\n        /* \"#utility.yul\":192:204   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_108:\n        /* \"#utility.yul\":65:212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":217:415   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":329:331   */\n      0x20\n        /* \"#utility.yul\":317:326   */\n      dup3\n        /* \"#utility.yul\":308:315   */\n      dup5\n        /* \"#utility.yul\":304:327   */\n      sub\n        /* \"#utility.yul\":300:332   */\n      slt\n        /* \"#utility.yul\":297:299   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":350:356   */\n      dup1\n        /* \"#utility.yul\":342:348   */\n      dup2\n        /* \"#utility.yul\":335:357   */\n      revert\n        /* \"#utility.yul\":297:299   */\n    tag_110:\n        /* \"#utility.yul\":378:409   */\n      tag_111\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":378:409   */\n      tag_106\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":368:409   */\n      swap4\n        /* \"#utility.yul\":287:415   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:610   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":532:534   */\n      0x20\n        /* \"#utility.yul\":520:529   */\n      dup3\n        /* \"#utility.yul\":511:518   */\n      dup5\n        /* \"#utility.yul\":507:530   */\n      sub\n        /* \"#utility.yul\":503:535   */\n      slt\n        /* \"#utility.yul\":500:502   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":553:559   */\n      dup1\n        /* \"#utility.yul\":545:551   */\n      dup2\n        /* \"#utility.yul\":538:560   */\n      revert\n        /* \"#utility.yul\":500:502   */\n    tag_113:\n      pop\n        /* \"#utility.yul\":581:604   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":490:610   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:980   */\n    tag_39:\n      0x00\n      dup1\n        /* \"#utility.yul\":742:744   */\n      0x40\n        /* \"#utility.yul\":730:739   */\n      dup4\n        /* \"#utility.yul\":721:728   */\n      dup6\n        /* \"#utility.yul\":717:740   */\n      sub\n        /* \"#utility.yul\":713:745   */\n      slt\n        /* \"#utility.yul\":710:712   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":763:769   */\n      dup1\n        /* \"#utility.yul\":755:761   */\n      dup2\n        /* \"#utility.yul\":748:770   */\n      revert\n        /* \"#utility.yul\":710:712   */\n    tag_115:\n        /* \"#utility.yul\":807:816   */\n      dup3\n        /* \"#utility.yul\":794:817   */\n      calldataload\n        /* \"#utility.yul\":857:861   */\n      0xff\n        /* \"#utility.yul\":850:855   */\n      dup2\n        /* \"#utility.yul\":846:862   */\n      and\n        /* \"#utility.yul\":839:844   */\n      dup2\n        /* \"#utility.yul\":836:863   */\n      eq\n        /* \"#utility.yul\":826:828   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":874:880   */\n      dup3\n        /* \"#utility.yul\":867:889   */\n      revert\n        /* \"#utility.yul\":826:828   */\n    tag_116:\n        /* \"#utility.yul\":910:915   */\n      swap2\n      pop\n        /* \"#utility.yul\":934:974   */\n      tag_117\n        /* \"#utility.yul\":970:972   */\n      0x20\n        /* \"#utility.yul\":955:973   */\n      dup5\n      add\n        /* \"#utility.yul\":934:974   */\n      tag_106\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":924:974   */\n      swap1\n      pop\n        /* \"#utility.yul\":700:980   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":985:1211   */\n    tag_28:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":1149:1204   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1131:1205   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1119:1121   */\n      0x20\n        /* \"#utility.yul\":1104:1122   */\n      add\n      swap1\n        /* \"#utility.yul\":1086:1211   */\n      jump\t// out\n        /* \"#utility.yul\":1216:1403   */\n    tag_36:\n        /* \"#utility.yul\":1381:1395   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1374:1396   */\n      iszero\n        /* \"#utility.yul\":1356:1397   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1344:1346   */\n      0x20\n        /* \"#utility.yul\":1329:1347   */\n      add\n      swap1\n        /* \"#utility.yul\":1311:1403   */\n      jump\t// out\n        /* \"#utility.yul\":1408:1585   */\n    tag_21:\n        /* \"#utility.yul\":1554:1579   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1542:1544   */\n      0x20\n        /* \"#utility.yul\":1527:1545   */\n      add\n      swap1\n        /* \"#utility.yul\":1509:1585   */\n      jump\t// out\n        /* \"#utility.yul\":1590:1838   */\n    tag_17:\n        /* \"#utility.yul\":1764:1789   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1805:1823   */\n      dup3\n      add\n        /* \"#utility.yul\":1798:1832   */\n      mstore\n        /* \"#utility.yul\":1752:1754   */\n      0x40\n        /* \"#utility.yul\":1737:1755   */\n      add\n      swap1\n        /* \"#utility.yul\":1719:1838   */\n      jump\t// out\n        /* \"#utility.yul\":1843:2184   */\n    tag_71:\n        /* \"#utility.yul\":2045:2047   */\n      0x20\n        /* \"#utility.yul\":2027:2048   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2084:2086   */\n      0x11\n        /* \"#utility.yul\":2064:2082   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2057:2087   */\n      mstore\n        /* \"#utility.yul\":2123:2142   */\n      0x566f7465732061726520636c6f7365642e000000000000000000000000000000\n        /* \"#utility.yul\":2118:2120   */\n      0x40\n        /* \"#utility.yul\":2103:2121   */\n      dup3\n      add\n        /* \"#utility.yul\":2096:2143   */\n      mstore\n        /* \"#utility.yul\":2175:2177   */\n      0x60\n        /* \"#utility.yul\":2160:2178   */\n      add\n      swap1\n        /* \"#utility.yul\":2017:2184   */\n      jump\t// out\n        /* \"#utility.yul\":2189:2586   */\n    tag_79:\n        /* \"#utility.yul\":2391:2393   */\n      0x20\n        /* \"#utility.yul\":2373:2394   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2430:2432   */\n      0x21\n        /* \"#utility.yul\":2410:2428   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2403:2433   */\n      mstore\n        /* \"#utility.yul\":2469:2503   */\n      0x596f75206861766520616c7265616479206120726967687420746f20766f7465\n        /* \"#utility.yul\":2464:2466   */\n      0x40\n        /* \"#utility.yul\":2449:2467   */\n      dup3\n      add\n        /* \"#utility.yul\":2442:2504   */\n      mstore\n        /* \"#utility.yul\":2540:2543   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2535:2537   */\n      0x60\n        /* \"#utility.yul\":2520:2538   */\n      dup3\n      add\n        /* \"#utility.yul\":2513:2544   */\n      mstore\n        /* \"#utility.yul\":2576:2579   */\n      0x80\n        /* \"#utility.yul\":2561:2580   */\n      add\n      swap1\n        /* \"#utility.yul\":2363:2586   */\n      jump\t// out\n        /* \"#utility.yul\":2591:2939   */\n    tag_103:\n        /* \"#utility.yul\":2793:2795   */\n      0x20\n        /* \"#utility.yul\":2775:2796   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2832:2834   */\n      0x18\n        /* \"#utility.yul\":2812:2830   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2805:2835   */\n      mstore\n        /* \"#utility.yul\":2871:2897   */\n      0x566f74657320617265206e6f742079657420636c6f7365640000000000000000\n        /* \"#utility.yul\":2866:2868   */\n      0x40\n        /* \"#utility.yul\":2851:2869   */\n      dup3\n      add\n        /* \"#utility.yul\":2844:2898   */\n      mstore\n        /* \"#utility.yul\":2930:2932   */\n      0x60\n        /* \"#utility.yul\":2915:2933   */\n      add\n      swap1\n        /* \"#utility.yul\":2765:2939   */\n      jump\t// out\n        /* \"#utility.yul\":2944:3341   */\n    tag_91:\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"#utility.yul\":3128:3149   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3185:3187   */\n      0x21\n        /* \"#utility.yul\":3165:3183   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3158:3188   */\n      mstore\n        /* \"#utility.yul\":3224:3258   */\n      0x596f7520646f6e277420686176652074686520726967687420746f20766f7465\n        /* \"#utility.yul\":3219:3221   */\n      0x40\n        /* \"#utility.yul\":3204:3222   */\n      dup3\n      add\n        /* \"#utility.yul\":3197:3259   */\n      mstore\n        /* \"#utility.yul\":3295:3298   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3290:3292   */\n      0x60\n        /* \"#utility.yul\":3275:3293   */\n      dup3\n      add\n        /* \"#utility.yul\":3268:3299   */\n      mstore\n        /* \"#utility.yul\":3331:3334   */\n      0x80\n        /* \"#utility.yul\":3316:3335   */\n      add\n      swap1\n        /* \"#utility.yul\":3118:3341   */\n      jump\t// out\n        /* \"#utility.yul\":3346:3753   */\n    tag_49:\n        /* \"#utility.yul\":3548:3550   */\n      0x20\n        /* \"#utility.yul\":3530:3551   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3587:3589   */\n      0x2b\n        /* \"#utility.yul\":3567:3585   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3560:3590   */\n      mstore\n        /* \"#utility.yul\":3626:3660   */\n      0x4f6e6c79206368616972706572736f6e2063616e206578656375746520746869\n        /* \"#utility.yul\":3621:3623   */\n      0x40\n        /* \"#utility.yul\":3606:3624   */\n      dup3\n      add\n        /* \"#utility.yul\":3599:3661   */\n      mstore\n        /* \"#utility.yul\":3697:3710   */\n      0x732066756e6374696f6e2e000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3692:3694   */\n      0x60\n        /* \"#utility.yul\":3677:3695   */\n      dup3\n      add\n        /* \"#utility.yul\":3670:3711   */\n      mstore\n        /* \"#utility.yul\":3743:3746   */\n      0x80\n        /* \"#utility.yul\":3728:3747   */\n      add\n      swap1\n        /* \"#utility.yul\":3520:3753   */\n      jump\t// out\n        /* \"#utility.yul\":3758:4168   */\n    tag_87:\n        /* \"#utility.yul\":3960:3962   */\n      0x20\n        /* \"#utility.yul\":3942:3963   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3999:4001   */\n      0x2e\n        /* \"#utility.yul\":3979:3997   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3972:4002   */\n      mstore\n        /* \"#utility.yul\":4038:4072   */\n      0x596f7520617265206e6f7420616c6c6f77656420746f20766f74652077697468\n        /* \"#utility.yul\":4033:4035   */\n      0x40\n        /* \"#utility.yul\":4018:4036   */\n      dup3\n      add\n        /* \"#utility.yul\":4011:4073   */\n      mstore\n        /* \"#utility.yul\":4109:4125   */\n      0x207468697320616464726573732e000000000000000000000000000000000000\n        /* \"#utility.yul\":4104:4106   */\n      0x60\n        /* \"#utility.yul\":4089:4107   */\n      dup3\n      add\n        /* \"#utility.yul\":4082:4126   */\n      mstore\n        /* \"#utility.yul\":4158:4161   */\n      0x80\n        /* \"#utility.yul\":4143:4162   */\n      add\n      swap1\n        /* \"#utility.yul\":3932:4168   */\n      jump\t// out\n        /* \"#utility.yul\":4173:4521   */\n    tag_75:\n        /* \"#utility.yul\":4375:4377   */\n      0x20\n        /* \"#utility.yul\":4357:4378   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4414:4416   */\n      0x18\n        /* \"#utility.yul\":4394:4412   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4387:4417   */\n      mstore\n        /* \"#utility.yul\":4453:4479   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":4448:4450   */\n      0x40\n        /* \"#utility.yul\":4433:4451   */\n      dup3\n      add\n        /* \"#utility.yul\":4426:4480   */\n      mstore\n        /* \"#utility.yul\":4512:4514   */\n      0x60\n        /* \"#utility.yul\":4497:4515   */\n      add\n      swap1\n        /* \"#utility.yul\":4347:4521   */\n      jump\t// out\n        /* \"#utility.yul\":4526:4654   */\n    tag_99:\n      0x00\n        /* \"#utility.yul\":4597:4598   */\n      dup3\n        /* \"#utility.yul\":4593:4599   */\n      not\n        /* \"#utility.yul\":4590:4591   */\n      dup3\n        /* \"#utility.yul\":4587:4600   */\n      gt\n        /* \"#utility.yul\":4584:4586   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4603:4621   */\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      pop\n        /* \"#utility.yul\":4639:4648   */\n      add\n      swap1\n        /* \"#utility.yul\":4574:4654   */\n      jump\t// out\n        /* \"#utility.yul\":4659:4834   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":4740:4744   */\n      0xff\n        /* \"#utility.yul\":4733:4738   */\n      dup3\n        /* \"#utility.yul\":4729:4745   */\n      and\n        /* \"#utility.yul\":4769:4773   */\n      0xff\n        /* \"#utility.yul\":4760:4767   */\n      dup2\n        /* \"#utility.yul\":4757:4774   */\n      eq\n        /* \"#utility.yul\":4754:4756   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4777:4795   */\n      tag_135\n      tag_132\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4826:4827   */\n      0x01\n        /* \"#utility.yul\":4813:4828   */\n      add\n      swap3\n        /* \"#utility.yul\":4704:4834   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4839:5023   */\n    tag_132:\n      mul(0x4e487b71, exp(0x02, 0xe0))\n        /* \"#utility.yul\":4888:4889   */\n      0x00\n        /* \"#utility.yul\":4881:4969   */\n      mstore\n        /* \"#utility.yul\":4988:4992   */\n      0x11\n        /* \"#utility.yul\":4985:4986   */\n      0x04\n        /* \"#utility.yul\":4978:4993   */\n      mstore\n        /* \"#utility.yul\":5012:5016   */\n      0x24\n        /* \"#utility.yul\":5009:5010   */\n      0x00\n        /* \"#utility.yul\":5002:5017   */\n      revert\n\n    auxdata: 0xa26469706673582212200082f84ec05d638ae390b0a4c4680ca9d364d73a65af3075e4a6007fc058b47364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1651:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1042:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "196:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "204:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "222:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "242:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "236:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "226:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "261:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "271:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "265:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "316:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "333:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "318:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "318:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "312:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "301:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:14:1"
															},
															"nodeType": "YulIf",
															"src": "298:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "351:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "365:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "361:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "355:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "440:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "448:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "410:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "414:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "421:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:35:1"
															},
															"nodeType": "YulIf",
															"src": "392:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "466:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "482:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "476:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "470:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "508:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "510:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "510:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "510:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "500:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "504:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "497:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:10:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "539:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "553:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "557:2:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:11:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "543:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "569:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "589:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "583:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "573:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "601:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "635:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:15:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "640:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:24:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "605:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "702:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "704:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "704:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "673:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "681:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "693:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "678:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "678:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:46:1"
															},
															"nodeType": "YulIf",
															"src": "652:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "744:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "733:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "764:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "775:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "768:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "797:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "805:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "790:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "790:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "817:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "836:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "817:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "848:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "863:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "867:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "859:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "859:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "852:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "916:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "925:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "933:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "918:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "918:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "918:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "893:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "897:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "889:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "889:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "902:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "885:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "907:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "882:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "882:33:1"
															},
															"nodeType": "YulIf",
															"src": "879:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "951:15:1",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "960:6:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "955:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1041:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1052:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1046:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1046:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1034:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1034:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1034:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1070:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1081:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1086:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1077:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1077:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1102:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1113:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1118:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1109:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1109:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1102:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "986:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "989:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "983:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "993:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "995:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1004:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1007:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1000:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1000:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "995:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "979:3:1",
																"statements": []
															},
															"src": "975:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1140:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1150:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1214:246:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:172:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "1274:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1279:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1267:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1267:90:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1267:90:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1377:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1380:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1370:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1370:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1370:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1230:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1237:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1227:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:17:1"
															},
															"nodeType": "YulIf",
															"src": "1224:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1434:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1441:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1434:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1196:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1206:3:1",
														"type": ""
													}
												],
												"src": "1167:293:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1517:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1614:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1604:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1465:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526002805460a060020a60ff0219167401000000000000000000000000000000000000000017905534801561003757600080fd5b50604051610baa380380610baa83398101604081905261005691610135565b60028054600160a060020a031916331790819055600160a060020a03166000908152602081905260408120805465ffffffff00001916620100001790555b815181101561012e57600160405180604001604052808484815181106100e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015182526000918101829052835460018181018655948352918190208351600290930201918255919091015191015580610126816101ef565b915050610094565b505061025e565b60006020808385031215610147578182fd5b825167ffffffffffffffff8082111561015e578384fd5b818501915085601f830112610171578384fd5b8151818111156101835761018361022f565b838102604051858282010181811085821117156101a2576101a261022f565b604052828152858101935084860182860187018a10156101c0578788fd5b8795505b838610156101e25780518552600195909501949386019386016101c4565b5098975050505050505050565b6000600019821415610228577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61093d8061026d6000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c0100000000000000000000000000000000000000000000000000000000900480639e7b8d61116100785780639e7b8d6114610106578063b61bfe5b1461011b578063b81c645314610130578063e2ba53f014610143576100a5565b8063013cf08b146100aa5780632495c0ce146100d457806372133c96146100e957806387f7b975146100f1575b600080fd5b6100bd6100b8366004610616565b61014b565b6040516100cb92919061068f565b60405180910390f35b6100dc610179565b6040516100cb9190610686565b6100dc6101dd565b6100f96102bd565b6040516100cb9190610667565b6101196101143660046105f5565b6102cc565b005b6101236103ed565b6040516100cb919061067b565b61011961013e36600461062e565b61040e565b6100dc61058b565b6001818154811061015b57600080fd5b60009182526020909120600290910201805460019091015490915082565b600254600090600160a060020a031633146101b25760405160e560020a62461bcd0281526004016101a9906107c5565b60405180910390fd5b6101ba6101dd565b6002805474ff000000000000000000000000000000000000000019169055919050565b600080805b60015460ff821610156102b8578160018260ff16815481106102175760e060020a634e487b7102600052603260045260246000fd5b90600052602060002090600202016001015411156102a65760018160ff16815481106102565760e060020a634e487b7102600052603260045260246000fd5b906000526020600020906002020160000154925060018160ff16815481106102915760e060020a634e487b7102600052603260045260246000fd5b90600052602060002090600202016001015491505b806102b0816108ce565b9150506101e2565b505090565b600254600160a060020a031681565b600254600160a060020a031633146102f95760405160e560020a62461bcd0281526004016101a9906107c5565b60025474010000000000000000000000000000000000000000900460ff16151560011461033b5760405160e560020a62461bcd0281526004016101a99061069d565b600160a060020a038116600090815260208190526040902054819060ff16156103795760405160e560020a62461bcd0281526004016101a99061087f565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff16156103c05760405160e560020a62461bcd0281526004016101a9906106d4565b5050600160a060020a03166000908152602081905260409020805465ffffffff0000191662010000179055565b60025474010000000000000000000000000000000000000000900460ff1681565b60025474010000000000000000000000000000000000000000900460ff1615156001146104505760405160e560020a62461bcd0281526004016101a99061069d565b80600160a060020a038116331461047c5760405160e560020a62461bcd0281526004016101a990610822565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff166104c25760405160e560020a62461bcd0281526004016101a990610768565b600160a060020a038316600090815260208190526040902054839060ff16156105005760405160e560020a62461bcd0281526004016101a99061087f565b600160a060020a0384166000908152602081905260409020805460ff8716610100810261ff001960ff1990931660019081179390931617909255805490918291811061055f5760e060020a634e487b7102600052603260045260246000fd5b9060005260206000209060020201600101600082825461057f91906108b6565b90915550505050505050565b60025460009074010000000000000000000000000000000000000000900460ff16156105cc5760405160e560020a62461bcd0281526004016101a990610731565b6105d46101dd565b905090565b8035600160a060020a03811681146105f057600080fd5b919050565b600060208284031215610606578081fd5b61060f826105d9565b9392505050565b600060208284031215610627578081fd5b5035919050565b60008060408385031215610640578081fd5b823560ff81168114610650578182fd5b915061065e602084016105d9565b90509250929050565b600160a060020a0391909116815260200190565b901515815260200190565b90815260200190565b918252602082015260400190565b60208082526011908201527f566f7465732061726520636c6f7365642e000000000000000000000000000000604082015260600190565b60208082526021908201527f596f75206861766520616c7265616479206120726967687420746f20766f746560408201527f2e00000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526018908201527f566f74657320617265206e6f742079657420636c6f7365640000000000000000604082015260600190565b60208082526021908201527f596f7520646f6e277420686176652074686520726967687420746f20766f746560408201527f2e00000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4f6e6c79206368616972706572736f6e2063616e20657865637574652074686960408201527f732066756e6374696f6e2e000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f596f7520617265206e6f7420616c6c6f77656420746f20766f7465207769746860408201527f207468697320616464726573732e000000000000000000000000000000000000606082015260800190565b60208082526018908201527f54686520766f74657220616c726561647920766f7465642e0000000000000000604082015260600190565b600082198211156108c9576108c96108ee565b500190565b600060ff821660ff8114156108e5576108e56108ee565b60010192915050565b60e060020a634e487b7102600052601160045260246000fdfea26469706673582212200082f84ec05d638ae390b0a4c4680ca9d364d73a65af3075e4a6007fc058b47364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBAA CODESIZE SUB DUP1 PUSH2 0xBAA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x56 SWAP2 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x12E JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x126 DUP2 PUSH2 0x1EF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x94 JUMP JUMPDEST POP POP PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x171 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH2 0x183 PUSH2 0x22F JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x1A2 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x1C0 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1E2 JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x1C4 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x228 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x93D DUP1 PUSH2 0x26D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x9E7B8D61 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xB61BFE5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xB81C6453 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x143 JUMPI PUSH2 0xA5 JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x2495C0CE EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x72133C96 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x87F7B975 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP3 SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x1DD JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x667 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x119 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0xDC PUSH2 0x58B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1B2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x2B8 JUMPI DUP2 PUSH1 0x1 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x217 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x256 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP3 POP PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x291 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x2B0 DUP2 PUSH2 0x8CE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E2 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x6D4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x69D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND CALLER EQ PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP8 AND PUSH2 0x100 DUP2 MUL PUSH2 0xFF00 NOT PUSH1 0xFF NOT SWAP1 SWAP4 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP4 SWAP1 SWAP4 AND OR SWAP1 SWAP3 SSTORE DUP1 SLOAD SWAP1 SWAP2 DUP3 SWAP2 DUP2 LT PUSH2 0x55F JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x606 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x60F DUP3 PUSH2 0x5D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x627 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x640 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x650 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP2 POP PUSH2 0x65E PUSH1 0x20 DUP5 ADD PUSH2 0x5D9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x566F7465732061726520636C6F7365642E000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206120726967687420746F20766F7465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x566F74657320617265206E6F742079657420636C6F7365640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652074686520726967687420746F20766F7465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206578656375746520746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E2E000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420616C6C6F77656420746F20766F74652077697468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207468697320616464726573732E000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C9 PUSH2 0x8EE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E5 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP3 0xF8 0x4E 0xC0 0x5D PUSH4 0x8AE390B0 LOG4 0xC4 PUSH9 0xCA9D364D73A65AF30 PUSH22 0xE4A6007FC058B47364736F6C63430008000033000000 ",
							"sourceMap": "70:2629:0:-:0;;;354:29;;;-1:-1:-1;;;;;;354:29:0;;;;;388:432;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;439:8;:21;;-1:-1:-1;;;;;;439:21:0;450:10;439:21;;;;;-1:-1:-1;;;;;473:8:0;439;466:16;;;;;;;;;;:27;;-1:-1:-1;;466:27:0;;;;;682:134;706:14;:21;702:1;:25;682:134;;;742:9;757:51;;;;;;;;774:14;789:1;774:17;;;;;;;;;;;;;;;;;;;;;;;;;;;757:51;;804:1;757:51;;;;;;742:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:3;;;;:::i;:::-;;;;682:134;;;;388:432;70:2629;;14:1148:1;;140:2;183;171:9;162:7;158:23;154:32;151:2;;;204:6;196;189:22;151:2;242:9;236:16;271:18;312:2;304:6;301:14;298:2;;;333:6;325;318:22;298:2;376:6;365:9;361:22;351:32;;421:7;414:4;410:2;406:13;402:27;392:2;;448:6;440;433:22;392:2;482;476:9;504:2;500;497:10;494:2;;;510:18;;:::i;:::-;557:2;553;549:11;589:2;583:9;640:2;635;627:6;623:15;619:24;693:6;681:10;678:22;673:2;661:10;658:18;655:46;652:2;;;704:18;;:::i;:::-;740:2;733:22;790:18;;;824:15;;;;-1:-1:-1;859:11:1;;;889;;;885:20;;882:33;-1:-1:-1;879:2:1;;;933:6;925;918:22;879:2;960:6;951:15;;975:156;989:2;986:1;983:9;975:156;;;1046:10;;1034:23;;1007:1;1000:9;;;;;1077:12;;;;1109;;975:156;;;-1:-1:-1;1150:6:1;120:1042;-1:-1:-1;;;;;;;;120:1042:1:o;1167:293::-;;-1:-1:-1;;1227:17:1;;1224:2;;;1279:77;1274:3;1267:90;1380:4;1377:1;1370:15;1410:4;1405:3;1398:17;1224:2;-1:-1:-1;1452:1:1;1441:13;;1214:246::o;1465:184::-;1517:77;1514:1;1507:88;1614:4;1611:1;1604:15;1638:4;1635:1;1628:15;1497:152;70:2629:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5025:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "190:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "202:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "192:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "192:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "192:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "144:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:73:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "287:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "333:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "342:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "350:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "308:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "317:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "304:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:32:1"
															},
															"nodeType": "YulIf",
															"src": "297:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "368:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "399:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "378:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "368:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "253:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "264:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "276:6:1",
														"type": ""
													}
												],
												"src": "217:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "536:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "545:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "553:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "538:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "538:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "538:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "511:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "532:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:32:1"
															},
															"nodeType": "YulIf",
															"src": "500:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "571:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "594:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "581:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "571:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "456:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "467:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "479:6:1",
														"type": ""
													}
												],
												"src": "420:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:280:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "746:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "755:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "763:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "748:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "748:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "721:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "730:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "717:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:32:1"
															},
															"nodeType": "YulIf",
															"src": "710:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "781:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "807:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "794:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "785:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "865:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "874:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "882:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "867:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "867:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "867:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "839:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "850:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "857:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "846:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "846:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "836:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:35:1"
															},
															"nodeType": "YulIf",
															"src": "826:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "900:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "910:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "970:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "934:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "658:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "669:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "681:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "689:6:1",
														"type": ""
													}
												],
												"src": "615:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1086:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1096:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1108:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1119:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1096:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1138:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1153:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1161:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1055:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1066:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1077:4:1",
														"type": ""
													}
												],
												"src": "985:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1311:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1321:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1333:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1321:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1388:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1381:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1381:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1374:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1374:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1356:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1356:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1280:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1291:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1302:4:1",
														"type": ""
													}
												],
												"src": "1216:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1519:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1519:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1561:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1572:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1554:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1478:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1489:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1500:4:1",
														"type": ""
													}
												],
												"src": "1408:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1741:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1752:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1737:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1729:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1771:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1764:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1820:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1805:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1825:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1798:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1680:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1691:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1699:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1710:4:1",
														"type": ""
													}
												],
												"src": "1590:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2017:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2034:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2027:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2027:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2079:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2064:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2057:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2123:19:1",
																		"type": "",
																		"value": "Votes are closed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2096:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2152:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2164:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2152:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1994:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2008:4:1",
														"type": ""
													}
												],
												"src": "1843:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2363:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2380:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2373:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2425:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2430:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2403:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2453:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2464:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2449:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2469:34:1",
																		"type": "",
																		"value": "You have already a right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2442:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2524:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2535:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2540:3:1",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2513:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2553:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2553:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2340:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2354:4:1",
														"type": ""
													}
												],
												"src": "2189:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2782:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2793:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2775:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2816:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2832:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2805:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2871:26:1",
																		"type": "",
																		"value": "Votes are not yet closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2907:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2919:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2907:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2742:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2756:4:1",
														"type": ""
													}
												],
												"src": "2591:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3118:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3128:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3219:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3224:34:1",
																		"type": "",
																		"value": "You don't have the right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3197:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3197:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3279:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3290:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3275:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3295:3:1",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3268:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3308:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3320:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3331:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3308:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3095:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3109:4:1",
														"type": ""
													}
												],
												"src": "2944:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3537:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3530:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3582:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3567:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3560:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3610:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3621:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3606:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3626:34:1",
																		"type": "",
																		"value": "Only chairperson can execute thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3599:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3692:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3697:13:1",
																		"type": "",
																		"value": "s function."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3670:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3720:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3732:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3743:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3720:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3497:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3511:4:1",
														"type": ""
													}
												],
												"src": "3346:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3949:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3942:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3994:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3999:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3972:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4033:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4038:34:1",
																		"type": "",
																		"value": "You are not allowed to vote with"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4011:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4011:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4093:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4109:16:1",
																		"type": "",
																		"value": " this address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4082:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4135:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4147:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4135:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3909:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3923:4:1",
														"type": ""
													}
												],
												"src": "3758:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4347:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4364:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4375:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4357:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4414:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4437:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4448:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4433:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4453:26:1",
																		"type": "",
																		"value": "The voter already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4426:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4501:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4489:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4324:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4338:4:1",
														"type": ""
													}
												],
												"src": "4173:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4574:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4601:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4603:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4603:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4603:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4590:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4597:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4593:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4587:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:13:1"
															},
															"nodeType": "YulIf",
															"src": "4584:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4632:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4643:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4646:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4639:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4557:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4560:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4566:3:1",
														"type": ""
													}
												],
												"src": "4526:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4714:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4733:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4718:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4775:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4777:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4777:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4760:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4757:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:17:1"
															},
															"nodeType": "YulIf",
															"src": "4754:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4806:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4817:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4813:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4806:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4686:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4696:3:1",
														"type": ""
													}
												],
												"src": "4659:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4871:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4888:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4891:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4881:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4881:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4988:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4978:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5012:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4839:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value1, value1) }\n        value0 := value\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Votes are closed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You have already a right to vote\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Votes are not yet closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You don't have the right to vote\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Only chairperson can execute thi\")\n        mstore(add(headStart, 96), \"s function.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"You are not allowed to vote with\")\n        mstore(add(headStart, 96), \" this address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a5576000357c0100000000000000000000000000000000000000000000000000000000900480639e7b8d61116100785780639e7b8d6114610106578063b61bfe5b1461011b578063b81c645314610130578063e2ba53f014610143576100a5565b8063013cf08b146100aa5780632495c0ce146100d457806372133c96146100e957806387f7b975146100f1575b600080fd5b6100bd6100b8366004610616565b61014b565b6040516100cb92919061068f565b60405180910390f35b6100dc610179565b6040516100cb9190610686565b6100dc6101dd565b6100f96102bd565b6040516100cb9190610667565b6101196101143660046105f5565b6102cc565b005b6101236103ed565b6040516100cb919061067b565b61011961013e36600461062e565b61040e565b6100dc61058b565b6001818154811061015b57600080fd5b60009182526020909120600290910201805460019091015490915082565b600254600090600160a060020a031633146101b25760405160e560020a62461bcd0281526004016101a9906107c5565b60405180910390fd5b6101ba6101dd565b6002805474ff000000000000000000000000000000000000000019169055919050565b600080805b60015460ff821610156102b8578160018260ff16815481106102175760e060020a634e487b7102600052603260045260246000fd5b90600052602060002090600202016001015411156102a65760018160ff16815481106102565760e060020a634e487b7102600052603260045260246000fd5b906000526020600020906002020160000154925060018160ff16815481106102915760e060020a634e487b7102600052603260045260246000fd5b90600052602060002090600202016001015491505b806102b0816108ce565b9150506101e2565b505090565b600254600160a060020a031681565b600254600160a060020a031633146102f95760405160e560020a62461bcd0281526004016101a9906107c5565b60025474010000000000000000000000000000000000000000900460ff16151560011461033b5760405160e560020a62461bcd0281526004016101a99061069d565b600160a060020a038116600090815260208190526040902054819060ff16156103795760405160e560020a62461bcd0281526004016101a99061087f565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff16156103c05760405160e560020a62461bcd0281526004016101a9906106d4565b5050600160a060020a03166000908152602081905260409020805465ffffffff0000191662010000179055565b60025474010000000000000000000000000000000000000000900460ff1681565b60025474010000000000000000000000000000000000000000900460ff1615156001146104505760405160e560020a62461bcd0281526004016101a99061069d565b80600160a060020a038116331461047c5760405160e560020a62461bcd0281526004016101a990610822565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff166104c25760405160e560020a62461bcd0281526004016101a990610768565b600160a060020a038316600090815260208190526040902054839060ff16156105005760405160e560020a62461bcd0281526004016101a99061087f565b600160a060020a0384166000908152602081905260409020805460ff8716610100810261ff001960ff1990931660019081179390931617909255805490918291811061055f5760e060020a634e487b7102600052603260045260246000fd5b9060005260206000209060020201600101600082825461057f91906108b6565b90915550505050505050565b60025460009074010000000000000000000000000000000000000000900460ff16156105cc5760405160e560020a62461bcd0281526004016101a990610731565b6105d46101dd565b905090565b8035600160a060020a03811681146105f057600080fd5b919050565b600060208284031215610606578081fd5b61060f826105d9565b9392505050565b600060208284031215610627578081fd5b5035919050565b60008060408385031215610640578081fd5b823560ff81168114610650578182fd5b915061065e602084016105d9565b90509250929050565b600160a060020a0391909116815260200190565b901515815260200190565b90815260200190565b918252602082015260400190565b60208082526011908201527f566f7465732061726520636c6f7365642e000000000000000000000000000000604082015260600190565b60208082526021908201527f596f75206861766520616c7265616479206120726967687420746f20766f746560408201527f2e00000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526018908201527f566f74657320617265206e6f742079657420636c6f7365640000000000000000604082015260600190565b60208082526021908201527f596f7520646f6e277420686176652074686520726967687420746f20766f746560408201527f2e00000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4f6e6c79206368616972706572736f6e2063616e20657865637574652074686960408201527f732066756e6374696f6e2e000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f596f7520617265206e6f7420616c6c6f77656420746f20766f7465207769746860408201527f207468697320616464726573732e000000000000000000000000000000000000606082015260800190565b60208082526018908201527f54686520766f74657220616c726561647920766f7465642e0000000000000000604082015260600190565b600082198211156108c9576108c96108ee565b500190565b600060ff821660ff8114156108e5576108e56108ee565b60010192915050565b60e060020a634e487b7102600052601160045260246000fdfea26469706673582212200082f84ec05d638ae390b0a4c4680ca9d364d73a65af3075e4a6007fc058b47364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x9E7B8D61 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xB61BFE5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xB81C6453 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x143 JUMPI PUSH2 0xA5 JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x2495C0CE EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x72133C96 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x87F7B975 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP3 SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x1DD JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x667 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x119 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0xDC PUSH2 0x58B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1B2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x2B8 JUMPI DUP2 PUSH1 0x1 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x217 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x256 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP3 POP PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x291 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x2B0 DUP2 PUSH2 0x8CE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E2 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x6D4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x69D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND CALLER EQ PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP8 AND PUSH2 0x100 DUP2 MUL PUSH2 0xFF00 NOT PUSH1 0xFF NOT SWAP1 SWAP4 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP4 SWAP1 SWAP4 AND OR SWAP1 SWAP3 SSTORE DUP1 SLOAD SWAP1 SWAP2 DUP3 SWAP2 DUP2 LT PUSH2 0x55F JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9 SWAP1 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x606 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x60F DUP3 PUSH2 0x5D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x627 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x640 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x650 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP2 POP PUSH2 0x65E PUSH1 0x20 DUP5 ADD PUSH2 0x5D9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x566F7465732061726520636C6F7365642E000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206120726967687420746F20766F7465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x566F74657320617265206E6F742079657420636C6F7365640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652074686520726967687420746F20766F7465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206578656375746520746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E2E000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420616C6C6F77656420746F20766F74652077697468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207468697320616464726573732E000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C9 PUSH2 0x8EE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E5 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x4E487B71 MUL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP3 0xF8 0x4E 0xC0 0x5D PUSH4 0x8AE390B0 LOG4 0xC4 PUSH9 0xCA9D364D73A65AF30 PUSH22 0xE4A6007FC058B47364736F6C63430008000033000000 ",
							"sourceMap": "70:2629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2367:156;;;:::i;:::-;;;;;;;:::i;2027:336::-;;;:::i;326:23::-;;;:::i;:::-;;;;;;;:::i;1575:174::-;;;;;;:::i;:::-;;:::i;:::-;;354:29;;;:::i;:::-;;;;;;;:::i;1753:270::-;;;;;;:::i;:::-;;:::i;2527:170::-;;;:::i;294:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:27:0;:::o;2367:156::-;862:8;;2430:19;;-1:-1:-1;;;;;862:8:0;874:10;862:22;854:78;;;;-1:-1:-1;;;;;854:78:0;;;;;;;:::i;:::-;;;;;;;;;2473:20:::1;:18;:20::i;:::-;2499:10;:18:::0;;-1:-1:-1;;2499:18:0::1;::::0;;2459:34;2367:156;-1:-1:-1;2367:156:0:o;2027:336::-;2078:19;;;2144:215;2166:9;:16;2162:20;;;;2144:215;;;2226:20;2201:9;2211:1;2201:12;;;;;;;;-1:-1:-1;;;;;2201:12:0;;;;;;;;;;;;;;;;;;;:22;;;:45;2197:156;;;2272:9;2282:1;2272:12;;;;;;;;-1:-1:-1;;;;;2272:12:0;;;;;;;;;;;;;;;;;;;:17;;;2258:31;;2322:9;2332:1;2322:12;;;;;;;;-1:-1:-1;;;;;2322:12:0;;;;;;;;;;;;;;;;;;;:22;;;2299:45;;2197:156;2184:3;;;;:::i;:::-;;;;2144:215;;;;2027:336;;:::o;326:23::-;;;-1:-1:-1;;;;;326:23:0;;:::o;1575:174::-;862:8;;-1:-1:-1;;;;;862:8:0;874:10;862:22;854:78;;;;-1:-1:-1;;;;;854:78:0;;;;;;;:::i;:::-;984:10:::1;::::0;;;::::1;;;:18;;998:4;984:18;976:48;;;;-1:-1:-1::0;;;;;976:48:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1092:14:0;::::2;:6;:14:::0;;;::::2;::::0;;;;;;:20;1677:6;;1092:20:::2;;1091:21;1083:58;;;;-1:-1:-1::0;;;;;1083:58:0::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1210:14:0;::::3;:6;:14:::0;;;::::3;::::0;;;;;;:21;:14;;:21;;::::3;;;:26:::0;1202:72:::3;;;;-1:-1:-1::0;;;;;1202:72:0::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;;1719:14:0::4;:6;:14:::0;;;::::4;::::0;;;;;;:25;;-1:-1:-1;;1719:25:0::4;::::0;::::4;::::0;;1575:174::o;354:29::-;;;;;;;;;:::o;1753:270::-;984:10;;;;;;;:18;;998:4;984:18;976:48;;;;-1:-1:-1;;;;;976:48:0;;;;;;;:::i;:::-;1844:6;-1:-1:-1;;;;;1477:20:0;::::1;1487:10;1477:20;1462:97;;;;-1:-1:-1::0;;;;;1462:97:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1341:14:0;::::2;:6;:14:::0;;;::::2;::::0;;;;;;:21;:14;;:21;;::::2;;;1333:72;;;;-1:-1:-1::0;;;;;1333:72:0::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1092:14:0;::::3;:6;:14:::0;;;::::3;::::0;;;;;;:20;1892:6;;1092:20:::3;;1091:21;1083:58;;;;-1:-1:-1::0;;;;;1083:58:0::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1908:14:0;::::4;:6;:14:::0;;;::::4;::::0;;;;;;:27;;::::4;1941:33:::0;::::4;1908:27;1941:33:::0;::::4;-1:-1:-1::0;;;;1908:27:0;;::::4;1931:4;1908:27:::0;;::::4;1941:33:::0;;;::::4;;::::0;;;1981:22;;1931:4;;;;1981:22;::::4;;;-1:-1:-1::0;;;;;1981:22:0::4;;;;;;;;;;;;;;;;;;;:32;;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1753:270:0:o;2527:170::-;2609:10;;2570:19;;2609:10;;;;;2608:11;2600:48;;;;-1:-1:-1;;;;;2600:48:0;;;;;;;:::i;:::-;2672:20;:18;:20::i;:::-;2658:34;;2527:170;:::o;14:198:1:-;84:20;;-1:-1:-1;;;;;133:54:1;;123:65;;113:2;;202:1;199;192:12;113:2;65:147;;;:::o;217:198::-;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;:::-;368:41;287:128;-1:-1:-1;;;287:128:1:o;420:190::-;;532:2;520:9;511:7;507:23;503:32;500:2;;;553:6;545;538:22;500:2;-1:-1:-1;581:23:1;;490:120;-1:-1:-1;490:120:1:o;615:365::-;;;742:2;730:9;721:7;717:23;713:32;710:2;;;763:6;755;748:22;710:2;807:9;794:23;857:4;850:5;846:16;839:5;836:27;826:2;;882:6;874;867:22;826:2;910:5;-1:-1:-1;934:40:1;970:2;955:18;;934:40;:::i;:::-;924:50;;700:280;;;;;:::o;985:226::-;-1:-1:-1;;;;;1149:55:1;;;;1131:74;;1119:2;1104:18;;1086:125::o;1216:187::-;1381:14;;1374:22;1356:41;;1344:2;1329:18;;1311:92::o;1408:177::-;1554:25;;;1542:2;1527:18;;1509:76::o;1590:248::-;1764:25;;;1820:2;1805:18;;1798:34;1752:2;1737:18;;1719:119::o;1843:341::-;2045:2;2027:21;;;2084:2;2064:18;;;2057:30;2123:19;2118:2;2103:18;;2096:47;2175:2;2160:18;;2017:167::o;2189:397::-;2391:2;2373:21;;;2430:2;2410:18;;;2403:30;2469:34;2464:2;2449:18;;2442:62;2540:3;2535:2;2520:18;;2513:31;2576:3;2561:19;;2363:223::o;2591:348::-;2793:2;2775:21;;;2832:2;2812:18;;;2805:30;2871:26;2866:2;2851:18;;2844:54;2930:2;2915:18;;2765:174::o;2944:397::-;3146:2;3128:21;;;3185:2;3165:18;;;3158:30;3224:34;3219:2;3204:18;;3197:62;3295:3;3290:2;3275:18;;3268:31;3331:3;3316:19;;3118:223::o;3346:407::-;3548:2;3530:21;;;3587:2;3567:18;;;3560:30;3626:34;3621:2;3606:18;;3599:62;3697:13;3692:2;3677:18;;3670:41;3743:3;3728:19;;3520:233::o;3758:410::-;3960:2;3942:21;;;3999:2;3979:18;;;3972:30;4038:34;4033:2;4018:18;;4011:62;4109:16;4104:2;4089:18;;4082:44;4158:3;4143:19;;3932:236::o;4173:348::-;4375:2;4357:21;;;4414:2;4394:18;;;4387:30;4453:26;4448:2;4433:18;;4426:54;4512:2;4497:18;;4347:174::o;4526:128::-;;4597:1;4593:6;4590:1;4587:13;4584:2;;;4603:18;;:::i;:::-;-1:-1:-1;4639:9:1;;4574:80::o;4659:175::-;;4740:4;4733:5;4729:16;4769:4;4760:7;4757:17;4754:2;;;4777:18;;:::i;:::-;4826:1;4813:15;;4704:130;-1:-1:-1;;4704:130:1:o;4839:184::-;-1:-1:-1;;;;;4888:1:1;4881:88;4988:4;4985:1;4978:15;5012:4;5009:1;5002:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "473000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairman()": "656",
								"giveRightToVote(address)": "22048",
								"isOpenVote()": "478",
								"proposalWinnerName()": "infinite",
								"proposals(uint256)": "1052",
								"stopVote()": "infinite",
								"vote(uint8,address)": "42607",
								"winnerName()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 354,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 354,
									"end": 383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "10000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 383,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 439,
									"end": 447,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 439,
									"end": 460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 439,
									"end": 460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 450,
									"end": 460,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 473,
									"end": 481,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 439,
									"end": 447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFF0000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 466,
									"end": 493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "PUSH",
									"source": 0,
									"value": "10000"
								},
								{
									"begin": 466,
									"end": 493,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 706,
									"end": 720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 706,
									"end": 727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 702,
									"end": 703,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 702,
									"end": 727,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 742,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 788,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1162,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 153,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 204,
									"end": 210,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 189,
									"end": 211,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 153,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 242,
									"end": 251,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 236,
									"end": 252,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 271,
									"end": 289,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 312,
									"end": 314,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 304,
									"end": 310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 301,
									"end": 315,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 300,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 298,
									"end": 300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 300,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 333,
									"end": 339,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 325,
									"end": 331,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 318,
									"end": 340,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 300,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 300,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 376,
									"end": 382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 374,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 361,
									"end": 383,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 351,
									"end": 383,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 421,
									"end": 428,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 414,
									"end": 418,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 410,
									"end": 412,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 406,
									"end": 419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 429,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 392,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 392,
									"end": 394,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 448,
									"end": 454,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 440,
									"end": 446,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 392,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 392,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 484,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 476,
									"end": 485,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 504,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 500,
									"end": 502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 497,
									"end": 507,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 494,
									"end": 496,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 494,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 494,
									"end": 496,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 557,
									"end": 559,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 553,
									"end": 555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 549,
									"end": 560,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 589,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 592,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 642,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 635,
									"end": 637,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 633,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 638,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 619,
									"end": 643,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 693,
									"end": 699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 681,
									"end": 691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 678,
									"end": 700,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 673,
									"end": 675,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 661,
									"end": 671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 676,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 655,
									"end": 701,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 652,
									"end": 654,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 652,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 652,
									"end": 654,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 704,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 704,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 704,
									"end": 722,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 704,
									"end": 722,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 704,
									"end": 722,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 740,
									"end": 742,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 755,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 790,
									"end": 808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 790,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 790,
									"end": 808,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 824,
									"end": 839,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 824,
									"end": 839,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 824,
									"end": 839,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 839,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 859,
									"end": 870,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 859,
									"end": 870,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 859,
									"end": 870,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 889,
									"end": 900,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 889,
									"end": 900,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 889,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 905,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 885,
									"end": 905,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 882,
									"end": 915,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 879,
									"end": 881,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 879,
									"end": 881,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 879,
									"end": 881,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 933,
									"end": 939,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 925,
									"end": 931,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 918,
									"end": 940,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 879,
									"end": 881,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 879,
									"end": 881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 951,
									"end": 966,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 951,
									"end": 966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 989,
									"end": 991,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 986,
									"end": 987,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 983,
									"end": 992,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1056,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1056,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1057,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1057,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1008,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1089,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1089,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1089,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1109,
									"end": 1121,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1109,
									"end": 1121,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 975,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1150,
									"end": 1156,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 120,
									"end": 1162,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 120,
									"end": 1162,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1167,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1167,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1227,
									"end": 1244,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1244,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1226,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1224,
									"end": 1226,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1279,
									"end": 1356,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1274,
									"end": 1277,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1357,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1384,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1377,
									"end": 1378,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1370,
									"end": 1385,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1410,
									"end": 1414,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1405,
									"end": 1408,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1398,
									"end": 1415,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1226,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1224,
									"end": 1226,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1452,
									"end": 1453,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1214,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1465,
									"end": 1649,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1465,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1594,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1514,
									"end": 1515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1595,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1611,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1604,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1649,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1497,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200082f84ec05d638ae390b0a4c4680ca9d364d73a65af3075e4a6007fc058b47364736f6c63430008000033",
									".code": [
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "B61BFE5B"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "B81C6453"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "E2BA53F0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "2495C0CE"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "72133C96"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "87F7B975"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 862,
											"end": 870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 874,
											"end": 884,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 862,
											"end": 884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 854,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2201,
											"end": 2223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2289,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 326,
											"end": 349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 862,
											"end": 870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 874,
											"end": 884,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 862,
											"end": 884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 854,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1497,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 14,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 187,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 188,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 202,
											"end": 203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 192,
											"end": 204,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 65,
											"end": 212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 65,
											"end": 212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 65,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 65,
											"end": 212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 217,
											"end": 415,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 217,
											"end": 415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 217,
											"end": 415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 308,
											"end": 315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 304,
											"end": 327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 300,
											"end": 332,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 297,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 297,
											"end": 299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 297,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 378,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 378,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 378,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 378,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 409,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 287,
											"end": 415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 287,
											"end": 415,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 420,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 511,
											"end": 518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 535,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 500,
											"end": 502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 545,
											"end": 551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 500,
											"end": 502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 581,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 581,
											"end": 604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 490,
											"end": 610,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 980,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 615,
											"end": 980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 721,
											"end": 728,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 717,
											"end": 740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 713,
											"end": 745,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 710,
											"end": 712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 710,
											"end": 712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 755,
											"end": 761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 710,
											"end": 712,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 710,
											"end": 712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 794,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 850,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 846,
											"end": 862,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 863,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 867,
											"end": 889,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 970,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 955,
											"end": 973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 934,
											"end": 974,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 934,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 924,
											"end": 974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 700,
											"end": 980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 700,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 980,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 985,
											"end": 1211,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 985,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1216,
											"end": 1403,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1216,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1403,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1408,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1838,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1590,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1843,
											"end": 2184,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1843,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2027,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "566F7465732061726520636C6F7365642E000000000000000000000000000000"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2177,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2189,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2189,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "596F75206861766520616C7265616479206120726967687420746F20766F7465"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2535,
											"end": 2537,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2520,
											"end": 2538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2591,
											"end": 2939,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2591,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2834,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2897,
											"name": "PUSH",
											"source": 1,
											"value": "566F74657320617265206E6F742079657420636C6F7365640000000000000000"
										},
										{
											"begin": 2866,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2944,
											"end": 3341,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2944,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E277420686176652074686520726967687420746F20766F7465"
										},
										{
											"begin": 3219,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3290,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3275,
											"end": 3293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3341,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3346,
											"end": 3753,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3346,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3530,
											"end": 3551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3589,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206578656375746520746869"
										},
										{
											"begin": 3621,
											"end": 3623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "732066756E6374696F6E2E000000000000000000000000000000000000000000"
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3728,
											"end": 3747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3758,
											"end": 4168,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3758,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F7420616C6C6F77656420746F20766F74652077697468"
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "207468697320616464726573732E000000000000000000000000000000000000"
										},
										{
											"begin": 4104,
											"end": 4106,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4143,
											"end": 4162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4168,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4173,
											"end": 4521,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4173,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4521,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4526,
											"end": 4654,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4526,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4600,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4584,
											"end": 4586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4654,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4659,
											"end": 4834,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4659,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4744,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4733,
											"end": 4738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4773,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4760,
											"end": 4767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4774,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4754,
											"end": 4756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4813,
											"end": 4828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 4834,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 5023,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4839,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5009,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairman()": "87f7b975",
							"giveRightToVote(address)": "9e7b8d61",
							"isOpenVote()": "b61bfe5b",
							"proposalWinnerName()": "72133c96",
							"proposals(uint256)": "013cf08b",
							"stopVote()": "2495c0ce",
							"vote(uint8,address)": "b81c6453",
							"winnerName()": "e2ba53f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairman\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpenVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalWinnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_winnerName\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_winnerName\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_proposalId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_winnerName\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Ballot.sol\":\"Vote\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/3_Ballot.sol\":{\"keccak256\":\"0x0c2783d6e27b5d6afe6b756258a215b3e9899ce604600f4889f51dd9585194fb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7ec77189259b8d72037234230ee63b0e1b487cc7aacfa108b6d9b87d2e1d6f20\",\"dweb:/ipfs/QmPayH2JCfagsrvRJa5E56MpwzvKrdBWL9dRCEqeeA844i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "voters",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Voter)10_storage)"
							},
							{
								"astId": 24,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "proposals",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Proposal)15_storage)dyn_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "chairman",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "isOpenVote",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)15_storage)dyn_storage": {
								"base": "t_struct(Proposal)15_storage",
								"encoding": "dynamic_array",
								"label": "struct Vote.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Vote.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)10_storage"
							},
							"t_struct(Proposal)15_storage": {
								"encoding": "inplace",
								"label": "struct Vote.Proposal",
								"members": [
									{
										"astId": 12,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 14,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)10_storage": {
								"encoding": "inplace",
								"label": "struct Vote.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "voted",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 5,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "vote",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 7,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "weight",
										"offset": 2,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 9,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "delegate",
										"offset": 6,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"ast": {
					"absolutePath": "contracts/3_Ballot.sol",
					"exportedSymbols": {
						"Vote": [
							299
						]
					},
					"id": 300,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "Vote",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Vote.Voter",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "107:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "107:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "123:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 4,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "123:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "139:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 6,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "139:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "delegate",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "158:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "158:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 299,
									"src": "88:91:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Vote.Proposal",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "205:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 11,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "205:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "223:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "223:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 299,
									"src": "183:62:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "249:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
										"typeString": "mapping(address => struct Vote.Voter)"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "257:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "249:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
											"typeString": "mapping(address => struct Vote.Voter)"
										},
										"valueType": {
											"id": 18,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 17,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "268:5:0"
											},
											"referencedDeclaration": 10,
											"src": "268:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
												"typeString": "struct Vote.Voter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 24,
									"mutability": "mutable",
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "294:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
										"typeString": "struct Vote.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 15,
												"src": "294:8:0"
											},
											"referencedDeclaration": 15,
											"src": "294:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$15_storage_ptr",
												"typeString": "struct Vote.Proposal"
											}
										},
										"id": 23,
										"nodeType": "ArrayTypeName",
										"src": "294:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr",
											"typeString": "struct Vote.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87f7b975",
									"id": 26,
									"mutability": "mutable",
									"name": "chairman",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "326:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b61bfe5b",
									"id": 29,
									"mutability": "mutable",
									"name": "isOpenVote",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "354:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 27,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "354:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "379:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "433:387:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "chairman",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "439:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 36,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "450:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "450:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "439:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "439:21:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 40,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "466:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 42,
															"indexExpression": {
																"id": 41,
																"name": "chairman",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "473:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "466:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "466:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "466:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "466:27:0"
											},
											{
												"body": {
													"id": 69,
													"nodeType": "Block",
													"src": "734:82:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 62,
																					"name": "_proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "774:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 64,
																				"indexExpression": {
																					"id": 63,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 48,
																					"src": "789:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "774:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 65,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "804:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 61,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "757:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$15_storage_ptr_$",
																				"typeString": "type(struct Vote.Proposal storage pointer)"
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "757:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Vote.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Vote.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 58,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "742:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																			"typeString": "struct Vote.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "742:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$15_storage_$returns$__$",
																		"typeString": "function (struct Vote.Proposal storage ref)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "742:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 68,
															"nodeType": "ExpressionStatement",
															"src": "742:67:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 52,
															"name": "_proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "706:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "706:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "702:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 70,
												"initializationExpression": {
													"assignments": [
														48
													],
													"declarations": [
														{
															"constant": false,
															"id": 48,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 70,
															"src": "687:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 47,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "687:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 50,
													"initialValue": {
														"hexValue": "30",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "699:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "687:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "729:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "729:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "729:3:0"
												},
												"nodeType": "ForStatement",
												"src": "682:134:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_proposalNames",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "400:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 30,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 31,
													"nodeType": "ArrayTypeName",
													"src": "400:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:33:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:0:0"
									},
									"scope": 299,
									"src": "388:432:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "848:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 75,
																"name": "chairman",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "862:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 76,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "874:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "874:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "862:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206578656375746520746869732066756e6374696f6e2e",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3",
																"typeString": "literal_string \"Only chairperson can execute this function.\""
															},
															"value": "Only chairperson can execute this function."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3",
																"typeString": "literal_string \"Only chairperson can execute this function.\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "854:78:0"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "938:1:0"
											}
										]
									},
									"id": 84,
									"name": "onlyChairman",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:0"
									},
									"src": "824:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "970:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 87,
																"name": "isOpenVote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "984:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "998:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "984:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f7465732061726520636c6f7365642e",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1004:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc",
																"typeString": "literal_string \"Votes are closed.\""
															},
															"value": "Votes are closed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc",
																"typeString": "literal_string \"Votes are closed.\""
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "976:48:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "1030:1:0"
											}
										]
									},
									"id": 95,
									"name": "voteOpened",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"src": "948:88:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1077:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1091:21:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 100,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1092:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Vote.Voter storage ref)"
																		}
																	},
																	"id": 102,
																	"indexExpression": {
																		"id": 101,
																		"name": "_voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "1099:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1092:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Vote.Voter storage ref"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1092:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f7465642e",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															},
															"value": "The voter already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1083:58:0"
											},
											{
												"id": 108,
												"nodeType": "PlaceholderStatement",
												"src": "1147:1:0"
											}
										]
									},
									"id": 110,
									"name": "notYetVoted",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1061:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:16:0"
									},
									"src": "1040:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1196:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 115,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1210:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Vote.Voter storage ref)"
																		}
																	},
																	"id": 117,
																	"indexExpression": {
																		"id": 116,
																		"name": "_voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 112,
																		"src": "1217:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1210:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Vote.Voter storage ref"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1210:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520616c7265616479206120726967687420746f20766f74652e",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1238:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05",
																"typeString": "literal_string \"You have already a right to vote.\""
															},
															"value": "You have already a right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05",
																"typeString": "literal_string \"You have already a right to vote.\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1202:72:0"
											},
											{
												"id": 124,
												"nodeType": "PlaceholderStatement",
												"src": "1280:1:0"
											}
										]
									},
									"id": 126,
									"name": "noRightToVote",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:16:0"
									},
									"src": "1157:129:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1327:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 131,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1341:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Vote.Voter storage ref)"
																		}
																	},
																	"id": 133,
																	"indexExpression": {
																		"id": 132,
																		"name": "_voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "1348:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1341:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Vote.Voter storage ref"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1341:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1341:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e277420686176652074686520726967687420746f20766f74652e",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9",
																"typeString": "literal_string \"You don't have the right to vote.\""
															},
															"value": "You don't have the right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9",
																"typeString": "literal_string \"You don't have the right to vote.\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1333:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1333:72:0"
											},
											{
												"id": 140,
												"nodeType": "PlaceholderStatement",
												"src": "1411:1:0"
											}
										]
									},
									"id": 142,
									"name": "rightToVote",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1311:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:16:0"
									},
									"src": "1290:127:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1456:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "1477:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 148,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1487:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1487:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1477:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f77656420746f20766f74652077697468207468697320616464726573732e",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69",
																"typeString": "literal_string \"You are not allowed to vote with this address.\""
															},
															"value": "You are not allowed to vote with this address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69",
																"typeString": "literal_string \"You are not allowed to vote with this address.\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1462:97:0"
											},
											{
												"id": 154,
												"nodeType": "PlaceholderStatement",
												"src": "1565:1:0"
											}
										]
									},
									"id": 156,
									"name": "onlyVoter",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:16:0"
									},
									"src": "1421:150:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1713:36:0",
										"statements": [
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 171,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1719:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 173,
															"indexExpression": {
																"id": 172,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "1726:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1719:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1719:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1719:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1719:25:0"
											}
										]
									},
									"functionSelector": "9e7b8d61",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 161,
											"modifierName": {
												"id": 160,
												"name": "onlyChairman",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "1633:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1633:12:0"
										},
										{
											"id": 163,
											"modifierName": {
												"id": 162,
												"name": "voteOpened",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 95,
												"src": "1650:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1650:10:0"
										},
										{
											"arguments": [
												{
													"id": 165,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "1677:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 166,
											"modifierName": {
												"id": 164,
												"name": "notYetVoted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "1665:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1665:19:0"
										},
										{
											"arguments": [
												{
													"id": 168,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "1703:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 169,
											"modifierName": {
												"id": 167,
												"name": "noRightToVote",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "1689:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1689:21:0"
										}
									],
									"name": "giveRightToVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:16:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1713:0:0"
									},
									"scope": 299,
									"src": "1575:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1902:121:0",
										"statements": [
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 197,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 199,
															"indexExpression": {
																"id": 198,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1915:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1908:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1908:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1931:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1908:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1908:27:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1941:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1948:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1941:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1941:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "_proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "1963:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1941:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1941:33:0"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 211,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1981:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																	"typeString": "struct Vote.Proposal storage ref[] storage ref"
																}
															},
															"id": 213,
															"indexExpression": {
																"id": 212,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1991:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1981:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$15_storage",
																"typeString": "struct Vote.Proposal storage ref"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "1981:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2017:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1981:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1981:37:0"
											}
										]
									},
									"functionSelector": "b81c6453",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"modifierName": {
												"id": 185,
												"name": "voteOpened",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 95,
												"src": "1819:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1819:10:0"
										},
										{
											"arguments": [
												{
													"id": 188,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "1844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 189,
											"modifierName": {
												"id": 187,
												"name": "onlyVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 156,
												"src": "1834:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1834:17:0"
										},
										{
											"arguments": [
												{
													"id": 191,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "1868:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 192,
											"modifierName": {
												"id": 190,
												"name": "rightToVote",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1856:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1856:19:0"
										},
										{
											"arguments": [
												{
													"id": 194,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "1892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 195,
											"modifierName": {
												"id": 193,
												"name": "notYetVoted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "1880:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1880:19:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_proposalId",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1767:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:35:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:0:0"
									},
									"scope": 299,
									"src": "1753:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2099:264:0",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "_numberOfWinnerVotes",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "2105:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"hexValue": "30",
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2136:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:32:0"
											},
											{
												"body": {
													"id": 261,
													"nodeType": "Block",
													"src": "2189:170:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 239,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2201:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																				"typeString": "struct Vote.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 241,
																		"indexExpression": {
																			"id": 240,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "2211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2201:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_storage",
																			"typeString": "struct Vote.Proposal storage ref"
																		}
																	},
																	"id": 242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 14,
																	"src": "2201:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 243,
																	"name": "_numberOfWinnerVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2226:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2201:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 260,
															"nodeType": "IfStatement",
															"src": "2197:156:0",
															"trueBody": {
																"id": 259,
																"nodeType": "Block",
																"src": "2248:105:0",
																"statements": [
																	{
																		"expression": {
																			"id": 250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 245,
																				"name": "_winnerName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "2258:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 246,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 24,
																						"src": "2272:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																							"typeString": "struct Vote.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 248,
																					"indexExpression": {
																						"id": 247,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 229,
																						"src": "2282:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2272:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$15_storage",
																						"typeString": "struct Vote.Proposal storage ref"
																					}
																				},
																				"id": 249,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "name",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "2272:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2258:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 251,
																		"nodeType": "ExpressionStatement",
																		"src": "2258:31:0"
																	},
																	{
																		"expression": {
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 252,
																				"name": "_numberOfWinnerVotes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "2299:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 253,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 24,
																						"src": "2322:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																							"typeString": "struct Vote.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 255,
																					"indexExpression": {
																						"id": 254,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 229,
																						"src": "2332:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2322:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$15_storage",
																						"typeString": "struct Vote.Proposal storage ref"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 14,
																				"src": "2322:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2299:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 258,
																		"nodeType": "ExpressionStatement",
																		"src": "2299:45:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 232,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2162:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 233,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																"typeString": "struct Vote.Proposal storage ref[] storage ref"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2166:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2162:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 262,
												"initializationExpression": {
													"assignments": [
														229
													],
													"declarations": [
														{
															"constant": false,
															"id": 229,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 262,
															"src": "2149:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 228,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2149:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 231,
													"initialValue": {
														"hexValue": "30",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2149:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2184:3:0",
														"subExpression": {
															"id": 236,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 238,
													"nodeType": "ExpressionStatement",
													"src": "2184:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2144:215:0"
											}
										]
									},
									"functionSelector": "72133c96",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proposalWinnerName",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:2:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_winnerName",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2078:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:21:0"
									},
									"scope": 299,
									"src": "2027:336:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "2453:70:0",
										"statements": [
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 271,
														"name": "_winnerName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2459:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 272,
															"name": "proposalWinnerName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2473:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2473:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2459:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2459:34:0"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 276,
														"name": "isOpenVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2499:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2512:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2499:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2499:18:0"
											}
										]
									},
									"functionSelector": "2495c0ce",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 267,
											"modifierName": {
												"id": 266,
												"name": "onlyChairman",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "2404:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2404:12:0"
										}
									],
									"name": "stopVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_winnerName",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2430:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:21:0"
									},
									"scope": 299,
									"src": "2367:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2590:107:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2608:11:0",
															"subExpression": {
																"id": 287,
																"name": "isOpenVote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74657320617265206e6f742079657420636c6f736564",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2621:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c",
																"typeString": "literal_string \"Votes are not yet closed\""
															},
															"value": "Votes are not yet closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c",
																"typeString": "literal_string \"Votes are not yet closed\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2600:48:0"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "_winnerName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2658:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 293,
															"name": "proposalWinnerName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2672:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2672:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2658:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2658:34:0"
											}
										]
									},
									"functionSelector": "e2ba53f0",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winnerName",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2546:2:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_winnerName",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2570:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:21:0"
									},
									"scope": 299,
									"src": "2527:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 300,
							"src": "70:2629:0"
						}
					],
					"src": "37:2662:0"
				},
				"id": 0
			}
		}
	}
}