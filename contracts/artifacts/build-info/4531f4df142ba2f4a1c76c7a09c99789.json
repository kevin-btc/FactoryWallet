{
	"id": "4531f4df142ba2f4a1c76c7a09c99789",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Vote {\n  struct Voter {\n    bool voted;\n    uint8 vote;\n    uint32 weight;\n    address delegate;\n  }\n\n  struct Proposal {\n    bytes32 name;\n    uint256 voteCount;\n  }\n\n  mapping(address => Voter) private voters;\n\n  Proposal[] public proposals;\n\n  address public chairman;\n\n  bool public isOpenVote = true;\n\n  constructor(bytes32[] memory _proposalNames) {\n    chairman = msg.sender;\n    voters[chairman].weight = 1;\n\n    /** \n    [\"0x616c696365000000000000000000000000000000000000000000000000000000\",\"0x626f620000000000000000000000000000000000000000000000000000000000\"]\n    [\"alice\",\"bob\"]\n    **/\n\n    for (uint256 i = 0; i < _proposalNames.length; i++) {\n      proposals.push(Proposal({ name: _proposalNames[i], voteCount: 0 }));\n    }\n  }\n\n  modifier onlyChairman() {\n    require(chairman == msg.sender, \"Only chairperson can execute this function.\");\n    _;\n  }\n\n  modifier voteOpened() {\n    require(isOpenVote == true, \"Votes are closed.\");\n    _;\n  }\n\n  modifier notYetVoted(address _voter) {\n    require(!voters[_voter].voted, \"The voter already voted.\");\n    _;\n  }\n\n  modifier noRightToVote(address _voter) {\n    require(voters[_voter].weight == 0, \"You have already a right to vote.\");\n    _;\n  }\n\n  modifier rightToVote(address _voter) {\n    require(voters[_voter].weight != 0, \"You don't have the right to vote.\");\n    _;\n  }\n\n  modifier onlyVoter(address _voter) {\n    require(\n      _voter == msg.sender,\n      \"You are not allowed to vote with this address.\"\n    );\n    _;\n  }\n\n  function giveRightToVote(address _voter)\n    external\n    onlyChairman\n    voteOpened\n    notYetVoted(_voter)\n    noRightToVote(_voter)\n  {\n    voters[_voter].weight = 1;\n  }\n\n  function vote(uint8 _proposalId, address _voter)\n    external\n    voteOpened\n    onlyVoter(_voter)\n    rightToVote(_voter)\n    notYetVoted(_voter)\n  {\n    voters[_voter].voted = true;\n    voters[_voter].vote = _proposalId;\n\n    proposals[_proposalId].voteCount += 1;\n  }\n\n  function proposalWinnerName() public view returns (bytes32 _winnerName) {\n    uint256 _numberOfWinnerVotes = 0;\n\n    for (uint8 i = 0; i < proposals.length; i++) {\n      if (proposals[i].voteCount > _numberOfWinnerVotes) {\n        _winnerName = proposals[i].name;\n        _numberOfWinnerVotes = proposals[i].voteCount;\n      }\n    }\n  }\n\n  function stopVote()\n    external\n    onlyChairman\n    returns (bytes32 _winnerName)\n  {\n    _winnerName = proposalWinnerName();\n    isOpenVote = false;\n\n  }\n\n  function winnerName() public view returns (bytes32 _winnerName){\n        require(!isOpenVote, \"Votes are not yet closed\");\n        _winnerName = proposalWinnerName();\n  }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/3_Ballot.sol": {
				"Vote": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairman",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpenVote",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposalWinnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_winnerName",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVote",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_winnerName",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_proposalId",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "_winnerName",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Ballot.sol\":354:383  bool public isOpenVote = true */\n  0x02\n  dup1\n  sload\n  not(mul(0xff, exp(0x02, 0xa0)))\n  and\n  0x010000000000000000000000000000000000000000\n  or\n  swap1\n  sstore\n    /* \"contracts/3_Ballot.sol\":388:820  constructor(bytes32[] memory _proposalNames) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Ballot.sol\":439:447  chairman */\n  0x02\n    /* \"contracts/3_Ballot.sol\":439:460  chairman = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/3_Ballot.sol\":450:460  msg.sender */\n  caller\n    /* \"contracts/3_Ballot.sol\":439:460  chairman = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/3_Ballot.sol\":439:447  chairman */\n  0x00\n    /* \"contracts/3_Ballot.sol\":466:482  voters[chairman] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/3_Ballot.sol\":466:493  voters[chairman].weight = 1 */\n  dup1\n  sload\n  not(0xffffffff0000)\n  and\n  0x010000\n  or\n  swap1\n  sstore\n    /* \"contracts/3_Ballot.sol\":682:816  for (uint256 i = 0; i < _proposalNames.length; i++) {... */\ntag_6:\n    /* \"contracts/3_Ballot.sol\":706:720  _proposalNames */\n  dup2\n    /* \"contracts/3_Ballot.sol\":706:727  _proposalNames.length */\n  mload\n    /* \"contracts/3_Ballot.sol\":702:703  i */\n  dup2\n    /* \"contracts/3_Ballot.sol\":702:727  i < _proposalNames.length */\n  lt\n    /* \"contracts/3_Ballot.sol\":682:816  for (uint256 i = 0; i < _proposalNames.length; i++) {... */\n  iszero\n  tag_7\n  jumpi\n    /* \"contracts/3_Ballot.sol\":742:751  proposals */\n  0x01\n    /* \"contracts/3_Ballot.sol\":757:808  Proposal({ name: _proposalNames[i], voteCount: 0 }) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/3_Ballot.sol\":774:788  _proposalNames */\n  dup5\n    /* \"contracts/3_Ballot.sol\":789:790  i */\n  dup5\n    /* \"contracts/3_Ballot.sol\":774:791  _proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"contracts/3_Ballot.sol\":757:808  Proposal({ name: _proposalNames[i], voteCount: 0 }) */\n  dup3\n  mstore\n    /* \"contracts/3_Ballot.sol\":804:805  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":757:808  Proposal({ name: _proposalNames[i], voteCount: 0 }) */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"contracts/3_Ballot.sol\":742:809  proposals.push(Proposal({ name: _proposalNames[i], voteCount: 0 })) */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"contracts/3_Ballot.sol\":729:732  i++ */\n  dup1\n  tag_13\n  dup2\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"contracts/3_Ballot.sol\":682:816  for (uint256 i = 0; i < _proposalNames.length; i++) {... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"contracts/3_Ballot.sol\":388:820  constructor(bytes32[] memory _proposalNames) {... */\n  pop\n    /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:1131   */\ntag_3:\n    /* \"#utility.yul\":109:115   */\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:203   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":199:200   */\n  0x00\n    /* \"#utility.yul\":196:197   */\n  dup1\n    /* \"#utility.yul\":189:201   */\n  revert\n    /* \"#utility.yul\":151:203   */\ntag_18:\n    /* \"#utility.yul\":232:241   */\n  dup3\n    /* \"#utility.yul\":226:242   */\n  mload\n    /* \"#utility.yul\":261:279   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":302:304   */\n  dup1\n    /* \"#utility.yul\":294:300   */\n  dup3\n    /* \"#utility.yul\":291:305   */\n  gt\n    /* \"#utility.yul\":288:322   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":315:316   */\n  dup1\n    /* \"#utility.yul\":308:320   */\n  revert\n    /* \"#utility.yul\":288:322   */\ntag_19:\n    /* \"#utility.yul\":356:362   */\n  dup2\n    /* \"#utility.yul\":345:354   */\n  dup6\n    /* \"#utility.yul\":341:363   */\n  add\n    /* \"#utility.yul\":331:363   */\n  swap2\n  pop\n    /* \"#utility.yul\":401:408   */\n  dup6\n    /* \"#utility.yul\":394:398   */\n  0x1f\n    /* \"#utility.yul\":390:392   */\n  dup4\n    /* \"#utility.yul\":386:399   */\n  add\n    /* \"#utility.yul\":382:409   */\n  slt\n    /* \"#utility.yul\":372:427   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":423:424   */\n  0x00\n    /* \"#utility.yul\":420:421   */\n  dup1\n    /* \"#utility.yul\":413:425   */\n  revert\n    /* \"#utility.yul\":372:427   */\ntag_20:\n    /* \"#utility.yul\":452:454   */\n  dup2\n    /* \"#utility.yul\":446:455   */\n  mload\n    /* \"#utility.yul\":474:476   */\n  dup2\n    /* \"#utility.yul\":470:472   */\n  dup2\n    /* \"#utility.yul\":467:477   */\n  gt\n    /* \"#utility.yul\":464:500   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":480:498   */\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":527:529   */\n  dup4\n    /* \"#utility.yul\":523:525   */\n  dup2\n    /* \"#utility.yul\":519:530   */\n  mul\n    /* \"#utility.yul\":559:561   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  mload\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":618:625   */\n  not\n    /* \"#utility.yul\":613:615   */\n  0x3f\n    /* \"#utility.yul\":609:611   */\n  dup4\n    /* \"#utility.yul\":605:616   */\n  add\n    /* \"#utility.yul\":601:626   */\n  and\n    /* \"#utility.yul\":593:599   */\n  dup2\n    /* \"#utility.yul\":589:627   */\n  add\n    /* \"#utility.yul\":677:683   */\n  dup2\n    /* \"#utility.yul\":665:675   */\n  dup2\n    /* \"#utility.yul\":662:684   */\n  lt\n    /* \"#utility.yul\":657:659   */\n  dup6\n    /* \"#utility.yul\":645:655   */\n  dup3\n    /* \"#utility.yul\":642:660   */\n  gt\n    /* \"#utility.yul\":639:685   */\n  or\n    /* \"#utility.yul\":636:708   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":688:706   */\n  tag_25\n  tag_23\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":724:726   */\n  0x40\n    /* \"#utility.yul\":717:739   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":808:823   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":843:854   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":873:884   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":869:889   */\n  dup8\n  add\n    /* \"#utility.yul\":866:899   */\n  dup11\n  lt\n    /* \"#utility.yul\":863:916   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":912:913   */\n  0x00\n    /* \"#utility.yul\":909:910   */\n  dup1\n    /* \"#utility.yul\":902:914   */\n  revert\n    /* \"#utility.yul\":863:916   */\ntag_26:\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":925:935   */\n  swap6\n  pop\n    /* \"#utility.yul\":944:1100   */\ntag_27:\n    /* \"#utility.yul\":958:960   */\n  dup4\n    /* \"#utility.yul\":955:956   */\n  dup7\n    /* \"#utility.yul\":952:961   */\n  lt\n    /* \"#utility.yul\":944:1100   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n  mload\n    /* \"#utility.yul\":1003:1026   */\n  dup6\n  mstore\n    /* \"#utility.yul\":976:977   */\n  0x01\n    /* \"#utility.yul\":969:978   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1046:1058   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1078:1090   */\n  dup7\n  add\n    /* \"#utility.yul\":944:1100   */\n  jump(tag_27)\ntag_29:\n  pop\n    /* \"#utility.yul\":1119:1125   */\n  swap9\n    /* \"#utility.yul\":14:1131   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1136:1425   */\ntag_14:\n    /* \"#utility.yul\":1175:1178   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1196:1213   */\n  dup3\n  eq\n    /* \"#utility.yul\":1193:1390   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1246:1323   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1243:1244   */\n  0x00\n    /* \"#utility.yul\":1236:1324   */\n  mstore\n    /* \"#utility.yul\":1347:1351   */\n  0x11\n    /* \"#utility.yul\":1344:1345   */\n  0x04\n    /* \"#utility.yul\":1337:1352   */\n  mstore\n    /* \"#utility.yul\":1375:1379   */\n  0x24\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1365:1380   */\n  revert\n    /* \"#utility.yul\":1193:1390   */\ntag_31:\n  pop\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n  swap1\n    /* \"#utility.yul\":1136:1425   */\n  jump\t// out\n    /* \"#utility.yul\":1430:1614   */\ntag_11:\n    /* \"#utility.yul\":1482:1559   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1479:1480   */\n  0x00\n    /* \"#utility.yul\":1472:1560   */\n  mstore\n    /* \"#utility.yul\":1579:1583   */\n  0x32\n    /* \"#utility.yul\":1576:1577   */\n  0x04\n    /* \"#utility.yul\":1569:1584   */\n  mstore\n    /* \"#utility.yul\":1603:1607   */\n  0x24\n    /* \"#utility.yul\":1600:1601   */\n  0x00\n    /* \"#utility.yul\":1593:1608   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_23:\n    /* \"#utility.yul\":1671:1748   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1668:1669   */\n  0x00\n    /* \"#utility.yul\":1661:1749   */\n  mstore\n    /* \"#utility.yul\":1768:1772   */\n  0x41\n    /* \"#utility.yul\":1765:1766   */\n  0x04\n    /* \"#utility.yul\":1758:1773   */\n  mstore\n    /* \"#utility.yul\":1792:1796   */\n  0x24\n    /* \"#utility.yul\":1789:1790   */\n  0x00\n    /* \"#utility.yul\":1782:1797   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_16:\n    /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Ballot.sol\":70:2699  contract Vote {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x9e7b8d61\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb61bfe5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb81c6453\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2ba53f0\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2495c0ce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72133c96\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x87f7b975\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_Ballot.sol\":294:321  Proposal[] public proposals */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1718:1743   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1774:1776   */\n      0x20\n        /* \"#utility.yul\":1759:1777   */\n      dup4\n      add\n        /* \"#utility.yul\":1752:1786   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1691:1709   */\n      add\n        /* \"contracts/3_Ballot.sol\":294:321  Proposal[] public proposals */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1508:1533   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1496:1498   */\n      0x20\n        /* \"#utility.yul\":1481:1499   */\n      add\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n      tag_16\n        /* \"#utility.yul\":1362:1539   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2027:2363  function proposalWinnerName() public view returns (bytes32 _winnerName) {... */\n    tag_5:\n      tag_18\n      tag_23\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":326:349  address public chairman */\n    tag_6:\n      sload(0x02)\n      tag_25\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":1103:1158   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1085:1159   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1073:1075   */\n      0x20\n        /* \"#utility.yul\":1058:1076   */\n      add\n        /* \"contracts/3_Ballot.sol\":326:349  address public chairman */\n      tag_16\n        /* \"#utility.yul\":939:1165   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1575:1749  function giveRightToVote(address _voter)... */\n    tag_7:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/3_Ballot.sol\":354:383  bool public isOpenVote = true */\n    tag_8:\n      sload(0x02)\n      tag_33\n      swap1\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1335:1349   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1328:1350   */\n      iszero\n        /* \"#utility.yul\":1310:1351   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1283:1301   */\n      add\n        /* \"contracts/3_Ballot.sol\":354:383  bool public isOpenVote = true */\n      tag_16\n        /* \"#utility.yul\":1170:1357   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1753:2023  function vote(uint8 _proposalId, address _voter)... */\n    tag_9:\n      tag_29\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":2527:2697  function winnerName() public view returns (bytes32 _winnerName){... */\n    tag_10:\n      tag_18\n      tag_42\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":294:321  Proposal[] public proposals */\n    tag_15:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n    tag_19:\n        /* \"contracts/3_Ballot.sol\":862:870  chairman */\n      sload(0x02)\n        /* \"contracts/3_Ballot.sol\":2430:2449  bytes32 _winnerName */\n      0x00\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":862:870  chairman */\n      and\n        /* \"contracts/3_Ballot.sol\":874:884  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":862:884  chairman == msg.sender */\n      eq\n        /* \"contracts/3_Ballot.sol\":854:932  require(chairman == msg.sender, \"Only chairperson can execute this function.\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/3_Ballot.sol\":2473:2493  proposalWinnerName() */\n      tag_51\n        /* \"contracts/3_Ballot.sol\":2473:2491  proposalWinnerName */\n      tag_23\n        /* \"contracts/3_Ballot.sol\":2473:2493  proposalWinnerName() */\n      jump\t// in\n    tag_51:\n        /* \"contracts/3_Ballot.sol\":2499:2509  isOpenVote */\n      0x02\n        /* \"contracts/3_Ballot.sol\":2499:2517  isOpenVote = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":2459:2493  _winnerName = proposalWinnerName() */\n      swap2\n        /* \"contracts/3_Ballot.sol\":2367:2523  function stopVote()... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2027:2363  function proposalWinnerName() public view returns (bytes32 _winnerName) {... */\n    tag_23:\n        /* \"contracts/3_Ballot.sol\":2078:2097  bytes32 _winnerName */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/3_Ballot.sol\":2144:2359  for (uint8 i = 0; i < proposals.length; i++) {... */\n    tag_53:\n        /* \"contracts/3_Ballot.sol\":2166:2175  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2166:2182  proposals.length */\n      sload\n        /* \"contracts/3_Ballot.sol\":2162:2182  i < proposals.length */\n      0xff\n      dup3\n      and\n      lt\n        /* \"contracts/3_Ballot.sol\":2144:2359  for (uint8 i = 0; i < proposals.length; i++) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2226:2246  _numberOfWinnerVotes */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2201:2210  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2211:2212  i */\n      dup3\n        /* \"contracts/3_Ballot.sol\":2201:2213  proposals[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2201:2223  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2201:2246  proposals[i].voteCount > _numberOfWinnerVotes */\n      gt\n        /* \"contracts/3_Ballot.sol\":2197:2353  if (proposals[i].voteCount > _numberOfWinnerVotes) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2272:2281  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2282:2283  i */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2272:2284  proposals[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_62\n      tag_58\n      jump\t// in\n    tag_62:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2272:2289  proposals[i].name */\n      0x00\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2258:2289  _winnerName = proposals[i].name */\n      swap3\n      pop\n        /* \"contracts/3_Ballot.sol\":2322:2331  proposals */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2332:2333  i */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2322:2334  proposals[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_65\n      jumpi\n      tag_65\n      tag_58\n      jump\t// in\n    tag_65:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2322:2344  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2299:2344  _numberOfWinnerVotes = proposals[i].voteCount */\n      swap2\n      pop\n        /* \"contracts/3_Ballot.sol\":2197:2353  if (proposals[i].voteCount > _numberOfWinnerVotes) {... */\n    tag_60:\n        /* \"contracts/3_Ballot.sol\":2184:2187  i++ */\n      dup1\n      tag_67\n      dup2\n      tag_68\n      jump\t// in\n    tag_67:\n      swap2\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2144:2359  for (uint8 i = 0; i < proposals.length; i++) {... */\n      jump(tag_53)\n    tag_54:\n      pop\n        /* \"contracts/3_Ballot.sol\":2099:2363  {... */\n      pop\n        /* \"contracts/3_Ballot.sol\":2027:2363  function proposalWinnerName() public view returns (bytes32 _winnerName) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1575:1749  function giveRightToVote(address _voter)... */\n    tag_32:\n        /* \"contracts/3_Ballot.sol\":862:870  chairman */\n      and(sub(exp(0x02, 0xa0), 0x01), sload(0x02))\n        /* \"contracts/3_Ballot.sol\":874:884  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":862:884  chairman == msg.sender */\n      eq\n        /* \"contracts/3_Ballot.sol\":854:932  require(chairman == msg.sender, \"Only chairperson can execute this function.\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_70:\n        /* \"contracts/3_Ballot.sol\":984:994  isOpenVote */\n      sload(0x02)\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      iszero\n      iszero\n        /* \"contracts/3_Ballot.sol\":998:1002  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      eq\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1999:2001   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1981:2002   */\n      mstore\n        /* \"#utility.yul\":2038:2040   */\n      0x11\n        /* \"#utility.yul\":2018:2036   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2011:2041   */\n      mstore\n        /* \"#utility.yul\":2077:2096   */\n      0x566f7465732061726520636c6f7365642e000000000000000000000000000000\n        /* \"#utility.yul\":2057:2075   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2050:2097   */\n      mstore\n        /* \"#utility.yul\":2114:2132   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      tag_48\n        /* \"#utility.yul\":1797:2138   */\n      jump\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n    tag_73:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":1092:1098  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      sload\n        /* \"contracts/3_Ballot.sol\":1677:1683  _voter */\n      dup2\n      swap1\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1091:1112  !voters[_voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4329:4331   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4311:4332   */\n      mstore\n        /* \"#utility.yul\":4368:4370   */\n      0x18\n        /* \"#utility.yul\":4348:4366   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4341:4371   */\n      mstore\n        /* \"#utility.yul\":4407:4433   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":4387:4405   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4380:4434   */\n      mstore\n        /* \"#utility.yul\":4451:4469   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      tag_48\n        /* \"#utility.yul\":4127:4475   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n    tag_77:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1210:1224  voters[_voter] */\n      dup3\n      and\n        /* \"contracts/3_Ballot.sol\":1210:1216  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1210:1224  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1210:1231  voters[_voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1210:1224  voters[_voter] */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":1210:1231  voters[_voter].weight */\n      0x010000\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":1210:1236  voters[_voter].weight == 0 */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1202:1274  require(voters[_voter].weight == 0, \"You have already a right to vote.\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1202:1274  require(voters[_voter].weight == 0, \"You have already a right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2327:2348   */\n      mstore\n        /* \"#utility.yul\":2384:2386   */\n      0x21\n        /* \"#utility.yul\":2364:2382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2357:2387   */\n      mstore\n        /* \"#utility.yul\":2423:2457   */\n      0x596f75206861766520616c7265616479206120726967687420746f20766f7465\n        /* \"#utility.yul\":2403:2421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2396:2458   */\n      mstore\n        /* \"#utility.yul\":2494:2497   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2474:2492   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2467:2498   */\n      mstore\n        /* \"#utility.yul\":2515:2534   */\n      0x84\n      add\n        /* \"contracts/3_Ballot.sol\":1202:1274  require(voters[_voter].weight == 0, \"You have already a right to vote.\") */\n      tag_48\n        /* \"#utility.yul\":2143:2540   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1202:1274  require(voters[_voter].weight == 0, \"You have already a right to vote.\") */\n    tag_81:\n      pop\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1719:1733  voters[_voter] */\n      and\n        /* \"contracts/3_Ballot.sol\":1719:1725  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1719:1733  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1719:1744  voters[_voter].weight = 1 */\n      dup1\n      sload\n      not(0xffffffff0000)\n      and\n      0x010000\n      or\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":1575:1749  function giveRightToVote(address _voter)... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1753:2023  function vote(uint8 _proposalId, address _voter)... */\n    tag_40:\n        /* \"contracts/3_Ballot.sol\":984:994  isOpenVote */\n      sload(0x02)\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      iszero\n      iszero\n        /* \"contracts/3_Ballot.sol\":998:1002  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":984:1002  isOpenVote == true */\n      eq\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1999:2001   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1981:2002   */\n      mstore\n        /* \"#utility.yul\":2038:2040   */\n      0x11\n        /* \"#utility.yul\":2018:2036   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2011:2041   */\n      mstore\n        /* \"#utility.yul\":2077:2096   */\n      0x566f7465732061726520636c6f7365642e000000000000000000000000000000\n        /* \"#utility.yul\":2057:2075   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2050:2097   */\n      mstore\n        /* \"#utility.yul\":2114:2132   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n      tag_48\n        /* \"#utility.yul\":1797:2138   */\n      jump\n        /* \"contracts/3_Ballot.sol\":976:1024  require(isOpenVote == true, \"Votes are closed.\") */\n    tag_86:\n        /* \"contracts/3_Ballot.sol\":1844:1850  _voter */\n      dup1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1477:1497  _voter == msg.sender */\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":1487:1497  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":1477:1497  _voter == msg.sender */\n      eq\n        /* \"contracts/3_Ballot.sol\":1462:1559  require(... */\n      tag_89\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3914:3916   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1462:1559  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3896:3917   */\n      mstore\n        /* \"#utility.yul\":3953:3955   */\n      0x2e\n        /* \"#utility.yul\":3933:3951   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3926:3956   */\n      mstore\n        /* \"#utility.yul\":3992:4026   */\n      0x596f7520617265206e6f7420616c6c6f77656420746f20766f74652077697468\n        /* \"#utility.yul\":3972:3990   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3965:4027   */\n      mstore\n        /* \"#utility.yul\":4063:4079   */\n      0x207468697320616464726573732e000000000000000000000000000000000000\n        /* \"#utility.yul\":4043:4061   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4036:4080   */\n      mstore\n        /* \"#utility.yul\":4097:4116   */\n      0x84\n      add\n        /* \"contracts/3_Ballot.sol\":1462:1559  require(... */\n      tag_48\n        /* \"#utility.yul\":3712:4122   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1462:1559  require(... */\n    tag_89:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1341:1355  voters[_voter] */\n      dup3\n      and\n        /* \"contracts/3_Ballot.sol\":1341:1347  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1341:1355  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1341:1362  voters[_voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1341:1355  voters[_voter] */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":1341:1362  voters[_voter].weight */\n      0x010000\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":1333:1405  require(voters[_voter].weight != 0, \"You don't have the right to vote.\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3100:3102   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1333:1405  require(voters[_voter].weight != 0, \"You don't have the right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3103   */\n      mstore\n        /* \"#utility.yul\":3139:3141   */\n      0x21\n        /* \"#utility.yul\":3119:3137   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3112:3142   */\n      mstore\n        /* \"#utility.yul\":3178:3212   */\n      0x596f7520646f6e277420686176652074686520726967687420746f20766f7465\n        /* \"#utility.yul\":3158:3176   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3151:3213   */\n      mstore\n        /* \"#utility.yul\":3249:3252   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3229:3247   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3222:3253   */\n      mstore\n        /* \"#utility.yul\":3270:3289   */\n      0x84\n      add\n        /* \"contracts/3_Ballot.sol\":1333:1405  require(voters[_voter].weight != 0, \"You don't have the right to vote.\") */\n      tag_48\n        /* \"#utility.yul\":2898:3295   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1333:1405  require(voters[_voter].weight != 0, \"You don't have the right to vote.\") */\n    tag_93:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      dup4\n      and\n        /* \"contracts/3_Ballot.sol\":1092:1098  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1092:1106  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      sload\n        /* \"contracts/3_Ballot.sol\":1892:1898  _voter */\n      dup4\n      swap1\n        /* \"contracts/3_Ballot.sol\":1092:1112  voters[_voter].voted */\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1091:1112  !voters[_voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4329:4331   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4311:4332   */\n      mstore\n        /* \"#utility.yul\":4368:4370   */\n      0x18\n        /* \"#utility.yul\":4348:4366   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4341:4371   */\n      mstore\n        /* \"#utility.yul\":4407:4433   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":4387:4405   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4380:4434   */\n      mstore\n        /* \"#utility.yul\":4451:4469   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n      tag_48\n        /* \"#utility.yul\":4127:4475   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1083:1141  require(!voters[_voter].voted, \"The voter already voted.\") */\n    tag_97:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1908:1922  voters[_voter] */\n      dup5\n      and\n        /* \"contracts/3_Ballot.sol\":1908:1914  voters */\n      0x00\n        /* \"contracts/3_Ballot.sol\":1908:1922  voters[_voter] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1908:1935  voters[_voter].voted = true */\n      dup1\n      sload\n      0xff\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      dup8\n      and\n        /* \"contracts/3_Ballot.sol\":1908:1935  voters[_voter].voted = true */\n      0x0100\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      dup2\n      mul\n      not(0xffff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n        /* \"contracts/3_Ballot.sol\":1931:1935  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/3_Ballot.sol\":1981:2003  proposals[_proposalId] */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":1931:1935  true */\n      dup3\n      swap2\n        /* \"contracts/3_Ballot.sol\":1941:1974  voters[_voter].vote = _proposalId */\n      swap1\n        /* \"contracts/3_Ballot.sol\":1981:2003  proposals[_proposalId] */\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_58\n      jump\t// in\n    tag_101:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":1981:2013  proposals[_proposalId].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":1981:2018  proposals[_proposalId].voteCount += 1 */\n      dup3\n      dup3\n      sload\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":1753:2023  function vote(uint8 _proposalId, address _voter)... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2527:2697  function winnerName() public view returns (bytes32 _winnerName){... */\n    tag_42:\n        /* \"contracts/3_Ballot.sol\":2609:2619  isOpenVote */\n      sload(0x02)\n        /* \"contracts/3_Ballot.sol\":2570:2589  bytes32 _winnerName */\n      0x00\n      swap1\n        /* \"contracts/3_Ballot.sol\":2609:2619  isOpenVote */\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":2608:2619  !isOpenVote */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2600:2648  require(!isOpenVote, \"Votes are not yet closed\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2747:2749   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2600:2648  require(!isOpenVote, \"Votes are not yet closed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2729:2750   */\n      mstore\n        /* \"#utility.yul\":2786:2788   */\n      0x18\n        /* \"#utility.yul\":2766:2784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2759:2789   */\n      mstore\n        /* \"#utility.yul\":2825:2851   */\n      0x566f74657320617265206e6f742079657420636c6f7365640000000000000000\n        /* \"#utility.yul\":2805:2823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2798:2852   */\n      mstore\n        /* \"#utility.yul\":2869:2887   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2600:2648  require(!isOpenVote, \"Votes are not yet closed\") */\n      tag_48\n        /* \"#utility.yul\":2545:2893   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2600:2648  require(!isOpenVote, \"Votes are not yet closed\") */\n    tag_106:\n        /* \"contracts/3_Ballot.sol\":2672:2692  proposalWinnerName() */\n      tag_109\n        /* \"contracts/3_Ballot.sol\":2672:2690  proposalWinnerName */\n      tag_23\n        /* \"contracts/3_Ballot.sol\":2672:2692  proposalWinnerName() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/3_Ballot.sol\":2658:2692  _winnerName = proposalWinnerName() */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":2527:2697  function winnerName() public view returns (bytes32 _winnerName){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_111:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_113:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_31:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_115:\n        /* \"#utility.yul\":366:395   */\n      tag_116\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_111\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:586   */\n    tag_14:\n        /* \"#utility.yul\":465:471   */\n      0x00\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":506:515   */\n      dup3\n        /* \"#utility.yul\":497:504   */\n      dup5\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:538   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":486:538   */\n    tag_118:\n      pop\n        /* \"#utility.yul\":557:580   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":406:586   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":591:934   */\n    tag_39:\n        /* \"#utility.yul\":657:663   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup1\n        /* \"#utility.yul\":718:720   */\n      0x40\n        /* \"#utility.yul\":706:715   */\n      dup4\n        /* \"#utility.yul\":697:704   */\n      dup6\n        /* \"#utility.yul\":693:716   */\n      sub\n        /* \"#utility.yul\":689:721   */\n      slt\n        /* \"#utility.yul\":686:738   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":734:735   */\n      0x00\n        /* \"#utility.yul\":731:732   */\n      dup1\n        /* \"#utility.yul\":724:736   */\n      revert\n        /* \"#utility.yul\":686:738   */\n    tag_120:\n        /* \"#utility.yul\":773:782   */\n      dup3\n        /* \"#utility.yul\":760:783   */\n      calldataload\n        /* \"#utility.yul\":823:827   */\n      0xff\n        /* \"#utility.yul\":816:821   */\n      dup2\n        /* \"#utility.yul\":812:828   */\n      and\n        /* \"#utility.yul\":805:810   */\n      dup2\n        /* \"#utility.yul\":802:829   */\n      eq\n        /* \"#utility.yul\":792:847   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":843:844   */\n      0x00\n        /* \"#utility.yul\":840:841   */\n      dup1\n        /* \"#utility.yul\":833:845   */\n      revert\n        /* \"#utility.yul\":792:847   */\n    tag_121:\n        /* \"#utility.yul\":866:871   */\n      swap2\n      pop\n        /* \"#utility.yul\":890:928   */\n      tag_122\n        /* \"#utility.yul\":924:926   */\n      0x20\n        /* \"#utility.yul\":909:927   */\n      dup5\n      add\n        /* \"#utility.yul\":890:928   */\n      tag_111\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":880:928   */\n      swap1\n      pop\n        /* \"#utility.yul\":591:934   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3300:3707   */\n    tag_49:\n        /* \"#utility.yul\":3502:3504   */\n      0x20\n        /* \"#utility.yul\":3484:3505   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3541:3543   */\n      0x2b\n        /* \"#utility.yul\":3521:3539   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3514:3544   */\n      mstore\n        /* \"#utility.yul\":3580:3614   */\n      0x4f6e6c79206368616972706572736f6e2063616e206578656375746520746869\n        /* \"#utility.yul\":3575:3577   */\n      0x40\n        /* \"#utility.yul\":3560:3578   */\n      dup3\n      add\n        /* \"#utility.yul\":3553:3615   */\n      mstore\n        /* \"#utility.yul\":3651:3664   */\n      0x732066756e6374696f6e2e000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3646:3648   */\n      0x60\n        /* \"#utility.yul\":3631:3649   */\n      dup3\n      add\n        /* \"#utility.yul\":3624:3665   */\n      mstore\n        /* \"#utility.yul\":3697:3700   */\n      0x80\n        /* \"#utility.yul\":3682:3701   */\n      add\n      swap1\n        /* \"#utility.yul\":3300:3707   */\n      jump\t// out\n        /* \"#utility.yul\":4480:4608   */\n    tag_104:\n        /* \"#utility.yul\":4520:4523   */\n      0x00\n        /* \"#utility.yul\":4551:4552   */\n      dup3\n        /* \"#utility.yul\":4547:4553   */\n      not\n        /* \"#utility.yul\":4544:4545   */\n      dup3\n        /* \"#utility.yul\":4541:4554   */\n      gt\n        /* \"#utility.yul\":4538:4577   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":4557:4575   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      pop\n        /* \"#utility.yul\":4593:4602   */\n      add\n      swap1\n        /* \"#utility.yul\":4480:4608   */\n      jump\t// out\n        /* \"#utility.yul\":4613:4788   */\n    tag_68:\n        /* \"#utility.yul\":4650:4653   */\n      0x00\n        /* \"#utility.yul\":4694:4698   */\n      0xff\n        /* \"#utility.yul\":4687:4692   */\n      dup3\n        /* \"#utility.yul\":4683:4699   */\n      and\n        /* \"#utility.yul\":4723:4727   */\n      0xff\n        /* \"#utility.yul\":4714:4721   */\n      dup2\n        /* \"#utility.yul\":4711:4728   */\n      eq\n        /* \"#utility.yul\":4708:4751   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":4731:4749   */\n      tag_140\n      tag_137\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4780:4781   */\n      0x01\n        /* \"#utility.yul\":4767:4782   */\n      add\n      swap3\n        /* \"#utility.yul\":4613:4788   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4793:4977   */\n    tag_137:\n        /* \"#utility.yul\":4845:4922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4835:4923   */\n      mstore\n        /* \"#utility.yul\":4942:4946   */\n      0x11\n        /* \"#utility.yul\":4939:4940   */\n      0x04\n        /* \"#utility.yul\":4932:4947   */\n      mstore\n        /* \"#utility.yul\":4966:4970   */\n      0x24\n        /* \"#utility.yul\":4963:4964   */\n      0x00\n        /* \"#utility.yul\":4956:4971   */\n      revert\n        /* \"#utility.yul\":4982:5166   */\n    tag_58:\n        /* \"#utility.yul\":5034:5111   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5031:5032   */\n      0x00\n        /* \"#utility.yul\":5024:5112   */\n      mstore\n        /* \"#utility.yul\":5131:5135   */\n      0x32\n        /* \"#utility.yul\":5128:5129   */\n      0x04\n        /* \"#utility.yul\":5121:5136   */\n      mstore\n        /* \"#utility.yul\":5155:5159   */\n      0x24\n        /* \"#utility.yul\":5152:5153   */\n      0x00\n        /* \"#utility.yul\":5145:5160   */\n      revert\n\n    auxdata: 0xa26469706673582212207c0ee366ecb5a28cf27bc85ab79fcc0cdf2f25ddbb1d6565ba21a81b10bc560864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1805:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1011:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "212:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "232:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "226:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "251:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "261:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "255:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "294:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "302:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "291:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:14:1"
															},
															"nodeType": "YulIf",
															"src": "288:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "356:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "335:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "413:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "413:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "390:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "386:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:35:1"
															},
															"nodeType": "YulIf",
															"src": "372:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "436:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "452:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "440:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "470:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "467:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:10:1"
															},
															"nodeType": "YulIf",
															"src": "464:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "523:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "527:2:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:11:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "539:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "559:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "553:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "543:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "571:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "593:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "609:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "613:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "605:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "605:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "622:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "601:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "575:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "686:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "688:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "688:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "688:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "645:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "657:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "642:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "665:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "677:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "662:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "639:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:46:1"
															},
															"nodeType": "YulIf",
															"src": "636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "728:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "748:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "759:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "752:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "801:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "820:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "832:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "847:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "851:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "836:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "877:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "873:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "873:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "886:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "869:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "891:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "866:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:33:1"
															},
															"nodeType": "YulIf",
															"src": "863:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "925:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "934:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "929:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "989:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1010:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1021:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1015:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1003:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1003:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1039:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1055:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1046:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1039:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1071:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1087:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1078:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "955:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "958:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "952:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "962:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "964:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "973:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "976:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "969:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "969:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "964:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "948:3:1",
																"statements": []
															},
															"src": "944:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1109:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1119:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:242:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1246:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1236:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1236:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1236:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1365:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1199:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1210:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1196:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:17:1"
															},
															"nodeType": "YulIf",
															"src": "1193:197:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1410:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1136:289:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1593:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1651:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526002805460a060020a60ff0219167401000000000000000000000000000000000000000017905534801561003757600080fd5b50604051610bc0380380610bc083398101604081905261005691610106565b60028054600160a060020a031916339081179091556000908152602081905260408120805465ffffffff00001916620100001790555b81518110156100ff57600160405180604001604052808484815181106100b4576100b461020c565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100f7816101ca565b91505061008c565b505061026a565b6000602080838503121561011957600080fd5b825167ffffffffffffffff8082111561013157600080fd5b818501915085601f83011261014557600080fd5b8151818111156101575761015761023b565b838102604051601f19603f8301168101818110858211171561017b5761017b61023b565b604052828152858101935084860182860187018a101561019a57600080fd5b600095505b838610156101bd57805185526001959095019493860193860161019f565b5098975050505050505050565b6000600019821415610205577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610947806102796000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c0100000000000000000000000000000000000000000000000000000000900480639e7b8d61116100785780639e7b8d6114610120578063b61bfe5b14610135578063b81c64531461016a578063e2ba53f01461017d57600080fd5b8063013cf08b146100aa5780632495c0ce146100d757806372133c96146100ed57806387f7b975146100f5575b600080fd5b6100bd6100b83660046107ca565b610185565b604080519283526020830191909152015b60405180910390f35b6100df6101b3565b6040519081526020016100ce565b6100df610217565b60025461010890600160a060020a031681565b604051600160a060020a0390911681526020016100ce565b61013361012e3660046107a8565b6102c4565b005b60025461015a9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016100ce565b6101336101783660046107e3565b61049b565b6100df61070e565b6001818154811061019557600080fd5b60009182526020909120600290910201805460019091015490915082565b600254600090600160a060020a031633146101ec5760405160e560020a62461bcd0281526004016101e39061081e565b60405180910390fd5b6101f4610217565b6002805474ff000000000000000000000000000000000000000019169055919050565b600080805b60015460ff821610156102bf578160018260ff1681548110610240576102406108e2565b90600052602060002090600202016001015411156102ad5760018160ff168154811061026e5761026e6108e2565b906000526020600020906002020160000154925060018160ff1681548110610298576102986108e2565b90600052602060002090600202016001015491505b806102b781610893565b91505061021c565b505090565b600254600160a060020a031633146102f15760405160e560020a62461bcd0281526004016101e39061081e565b60025474010000000000000000000000000000000000000000900460ff1615156001146103635760405160e560020a62461bcd02815260206004820152601160248201527f566f7465732061726520636c6f7365642e00000000000000000000000000000060448201526064016101e3565b600160a060020a038116600090815260208190526040902054819060ff16156103d15760405160e560020a62461bcd02815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101e3565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff161561046e5760405160e560020a62461bcd02815260206004820152602160248201527f596f75206861766520616c7265616479206120726967687420746f20766f746560448201527f2e0000000000000000000000000000000000000000000000000000000000000060648201526084016101e3565b5050600160a060020a03166000908152602081905260409020805465ffffffff0000191662010000179055565b60025474010000000000000000000000000000000000000000900460ff16151560011461050d5760405160e560020a62461bcd02815260206004820152601160248201527f566f7465732061726520636c6f7365642e00000000000000000000000000000060448201526064016101e3565b80600160a060020a038116331461058f5760405160e560020a62461bcd02815260206004820152602e60248201527f596f7520617265206e6f7420616c6c6f77656420746f20766f7465207769746860448201527f207468697320616464726573732e00000000000000000000000000000000000060648201526084016101e3565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff1661062b5760405160e560020a62461bcd02815260206004820152602160248201527f596f7520646f6e277420686176652074686520726967687420746f20766f746560448201527f2e0000000000000000000000000000000000000000000000000000000000000060648201526084016101e3565b600160a060020a038316600090815260208190526040902054839060ff16156106995760405160e560020a62461bcd02815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101e3565b600160a060020a0384166000908152602081905260409020805460ff8716610100810261ffff19909216919091176001908117909255815482919081106106e2576106e26108e2565b90600052602060002090600202016001016000828254610702919061087b565b90915550505050505050565b60025460009074010000000000000000000000000000000000000000900460ff161561077f5760405160e560020a62461bcd02815260206004820152601860248201527f566f74657320617265206e6f742079657420636c6f736564000000000000000060448201526064016101e3565b610787610217565b905090565b8035600160a060020a03811681146107a357600080fd5b919050565b6000602082840312156107ba57600080fd5b6107c38261078c565b9392505050565b6000602082840312156107dc57600080fd5b5035919050565b600080604083850312156107f657600080fd5b823560ff8116811461080757600080fd5b91506108156020840161078c565b90509250929050565b6020808252602b908201527f4f6e6c79206368616972706572736f6e2063616e20657865637574652074686960408201527f732066756e6374696f6e2e000000000000000000000000000000000000000000606082015260800190565b6000821982111561088e5761088e6108b3565b500190565b600060ff821660ff8114156108aa576108aa6108b3565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207c0ee366ecb5a28cf27bc85ab79fcc0cdf2f25ddbb1d6565ba21a81b10bc560864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBC0 CODESIZE SUB DUP1 PUSH2 0xBC0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x56 SWAP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFF JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB4 JUMPI PUSH2 0xB4 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xF7 DUP2 PUSH2 0x1CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8C JUMP JUMPDEST POP POP PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x157 JUMPI PUSH2 0x157 PUSH2 0x23B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x17B JUMPI PUSH2 0x17B PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1BD JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x19F JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x205 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x947 DUP1 PUSH2 0x279 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x9E7B8D61 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xB61BFE5B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xB81C6453 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x2495C0CE EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x72133C96 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x87F7B975 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xDF PUSH2 0x217 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x108 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15A SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x133 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x70E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x2BF JUMPI DUP2 PUSH1 0x1 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x240 JUMPI PUSH2 0x240 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x26E JUMPI PUSH2 0x26E PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP3 POP PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x2B7 DUP2 PUSH2 0x893 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21C JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465732061726520636C6F7365642E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206120726967687420746F20766F7465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465732061726520636C6F7365642E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND CALLER EQ PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420616C6C6F77656420746F20766F74652077697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468697320616464726573732E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652074686520726967687420746F20766F7465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP8 AND PUSH2 0x100 DUP2 MUL PUSH2 0xFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP3 SWAP2 SWAP1 DUP2 LT PUSH2 0x6E2 JUMPI PUSH2 0x6E2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657320617265206E6F742079657420636C6F7365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x787 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C3 DUP3 PUSH2 0x78C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x815 PUSH1 0x20 DUP5 ADD PUSH2 0x78C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206578656375746520746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E2E000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88E PUSH2 0x8B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x8AA JUMPI PUSH2 0x8AA PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xEE366ECB5A28CF27BC85AB79FCC0CDF2F25DDBB1D6565BA21A81B10BC JUMP ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:2629:0:-:0;;;354:29;;;-1:-1:-1;;;;;;354:29:0;;;;;388:432;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;439:8;:21;;-1:-1:-1;;;;;;439:21:0;450:10;439:21;;;;;;:8;466:16;;;;;;;;;;:27;;-1:-1:-1;;466:27:0;;;;;682:134;706:14;:21;702:1;:25;682:134;;;742:9;757:51;;;;;;;;774:14;789:1;774:17;;;;;;;;:::i;:::-;;;;;;;;;;;;757:51;;804:1;757:51;;;;;;742:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:3;;;;:::i;:::-;;;;682:134;;;;388:432;70:2629;;14:1117:1;109:6;140:2;183;171:9;162:7;158:23;154:32;151:52;;;199:1;196;189:12;151:52;232:9;226:16;261:18;302:2;294:6;291:14;288:34;;;318:1;315;308:12;288:34;356:6;345:9;341:22;331:32;;401:7;394:4;390:2;386:13;382:27;372:55;;423:1;420;413:12;372:55;452:2;446:9;474:2;470;467:10;464:36;;;480:18;;:::i;:::-;527:2;523;519:11;559:2;553:9;622:2;618:7;613:2;609;605:11;601:25;593:6;589:38;677:6;665:10;662:22;657:2;645:10;642:18;639:46;636:72;;;688:18;;:::i;:::-;724:2;717:22;774:18;;;808:15;;;;-1:-1:-1;843:11:1;;;873;;;869:20;;866:33;-1:-1:-1;863:53:1;;;912:1;909;902:12;863:53;934:1;925:10;;944:156;958:2;955:1;952:9;944:156;;;1015:10;;1003:23;;976:1;969:9;;;;;1046:12;;;;1078;;944:156;;;-1:-1:-1;1119:6:1;14:1117;-1:-1:-1;;;;;;;;14:1117:1:o;1136:289::-;1175:3;-1:-1:-1;;1196:17:1;;1193:197;;;1246:77;1243:1;1236:88;1347:4;1344:1;1337:15;1375:4;1372:1;1365:15;1193:197;-1:-1:-1;1417:1:1;1406:13;;1136:289::o;1430:184::-;1482:77;1479:1;1472:88;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:184;1671:77;1668:1;1661:88;1768:4;1765:1;1758:15;1792:4;1789:1;1782:15;1619:184;70:2629:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chairman_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@giveRightToVote_179": {
									"entryPoint": 708,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOpenVote_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proposalWinnerName_264": {
									"entryPoint": 535,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proposals_24": {
									"entryPoint": 389,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopVote_281": {
									"entryPoint": 435,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@vote_219": {
									"entryPoint": 1179,
									"id": 219,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@winnerName_298": {
									"entryPoint": 1806,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8t_address": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 2195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5168:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:1"
															},
															"nodeType": "YulIf",
															"src": "111:93:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:1"
															},
															"nodeType": "YulIf",
															"src": "295:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:1",
														"type": ""
													}
												],
												"src": "215:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:1"
															},
															"nodeType": "YulIf",
															"src": "486:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "547:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "557:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"src": "406:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "676:258:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "722:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "731:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "724:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "724:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "697:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "706:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "693:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:32:1"
															},
															"nodeType": "YulIf",
															"src": "686:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "747:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "773:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "760:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "751:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "831:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "843:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "833:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "833:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "833:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "805:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "816:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "823:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "812:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "802:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "802:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:35:1"
															},
															"nodeType": "YulIf",
															"src": "792:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "856:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "866:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "880:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "924:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "890:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "634:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "645:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "657:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "665:6:1",
														"type": ""
													}
												],
												"src": "591:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1050:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1062:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1073:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1050:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1092:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1103:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1085:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1009:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1031:4:1",
														"type": ""
													}
												],
												"src": "939:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1287:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1317:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1342:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1335:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1335:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1328:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1310:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1234:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1245:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1170:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1463:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1515:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1526:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1508:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1443:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1454:4:1",
														"type": ""
													}
												],
												"src": "1362:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1673:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1683:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1695:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1706:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1683:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1725:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1736:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1718:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1774:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1759:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1779:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1634:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1645:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1653:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1664:4:1",
														"type": ""
													}
												],
												"src": "1544:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1971:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1988:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1981:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2033:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2072:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2057:18:1"
																	},
																	{
																		"hexValue": "566f7465732061726520636c6f7365642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2077:19:1",
																		"type": "",
																		"value": "Votes are closed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2050:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2106:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1948:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1962:4:1",
														"type": ""
													}
												],
												"src": "1797:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2327:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2368:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2379:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2364:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2418:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:18:1"
																	},
																	{
																		"hexValue": "596f75206861766520616c7265616479206120726967687420746f20766f7465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2423:34:1",
																		"type": "",
																		"value": "You have already a right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2478:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2489:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2474:18:1"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2494:3:1",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2467:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2507:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2519:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2530:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2507:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2294:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2308:4:1",
														"type": ""
													}
												],
												"src": "2143:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2719:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2736:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2729:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2729:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2770:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2781:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2766:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2766:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2786:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2759:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2809:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2805:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2805:18:1"
																	},
																	{
																		"hexValue": "566f74657320617265206e6f742079657420636c6f736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2825:26:1",
																		"type": "",
																		"value": "Votes are not yet closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2861:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2873:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2884:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2861:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2696:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2710:4:1",
														"type": ""
													}
												],
												"src": "2545:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3072:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3089:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3100:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3134:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3139:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3112:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e277420686176652074686520726967687420746f20766f7465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3178:34:1",
																		"type": "",
																		"value": "You don't have the right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3151:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3233:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:18:1"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3249:3:1",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3222:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3262:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3274:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3262:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3049:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3063:4:1",
														"type": ""
													}
												],
												"src": "2898:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3474:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3491:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3502:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3525:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3536:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3521:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3541:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3514:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3564:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3575:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3560:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206368616972706572736f6e2063616e206578656375746520746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3580:34:1",
																		"type": "",
																		"value": "Only chairperson can execute thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3553:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3635:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3646:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3631:18:1"
																	},
																	{
																		"hexValue": "732066756e6374696f6e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3651:13:1",
																		"type": "",
																		"value": "s function."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3624:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3674:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3686:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3674:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3451:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3465:4:1",
														"type": ""
													}
												],
												"src": "3300:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3886:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3903:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3896:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3926:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:1"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420616c6c6f77656420746f20766f74652077697468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3992:34:1",
																		"type": "",
																		"value": "You are not allowed to vote with"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4047:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4058:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4043:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4043:18:1"
																	},
																	{
																		"hexValue": "207468697320616464726573732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4063:16:1",
																		"type": "",
																		"value": " this address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4089:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4101:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4112:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4089:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3863:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3877:4:1",
														"type": ""
													}
												],
												"src": "3712:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4301:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4318:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4352:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4363:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4368:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4341:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4391:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4402:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4387:18:1"
																	},
																	{
																		"hexValue": "54686520766f74657220616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4407:26:1",
																		"type": "",
																		"value": "The voter already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4443:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4455:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4443:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4278:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4292:4:1",
														"type": ""
													}
												],
												"src": "4127:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4528:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4555:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4557:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4557:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4557:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4544:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4551:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4547:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4541:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:13:1"
															},
															"nodeType": "YulIf",
															"src": "4538:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4586:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4597:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4600:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4586:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4511:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4514:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4520:3:1",
														"type": ""
													}
												],
												"src": "4480:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4658:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4668:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4687:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4672:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4729:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4731:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4731:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4731:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4714:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4711:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:17:1"
															},
															"nodeType": "YulIf",
															"src": "4708:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4771:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4780:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4767:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4767:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4760:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4640:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4650:3:1",
														"type": ""
													}
												],
												"src": "4613:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4825:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4939:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4932:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4963:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4966:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4956:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4793:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5014:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5031:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5034:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5024:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5128:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5131:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5121:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5121:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5152:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5145:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4982:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Votes are closed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You have already a right to vote\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Votes are not yet closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You don't have the right to vote\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Only chairperson can execute thi\")\n        mstore(add(headStart, 96), \"s function.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"You are not allowed to vote with\")\n        mstore(add(headStart, 96), \" this address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a5576000357c0100000000000000000000000000000000000000000000000000000000900480639e7b8d61116100785780639e7b8d6114610120578063b61bfe5b14610135578063b81c64531461016a578063e2ba53f01461017d57600080fd5b8063013cf08b146100aa5780632495c0ce146100d757806372133c96146100ed57806387f7b975146100f5575b600080fd5b6100bd6100b83660046107ca565b610185565b604080519283526020830191909152015b60405180910390f35b6100df6101b3565b6040519081526020016100ce565b6100df610217565b60025461010890600160a060020a031681565b604051600160a060020a0390911681526020016100ce565b61013361012e3660046107a8565b6102c4565b005b60025461015a9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016100ce565b6101336101783660046107e3565b61049b565b6100df61070e565b6001818154811061019557600080fd5b60009182526020909120600290910201805460019091015490915082565b600254600090600160a060020a031633146101ec5760405160e560020a62461bcd0281526004016101e39061081e565b60405180910390fd5b6101f4610217565b6002805474ff000000000000000000000000000000000000000019169055919050565b600080805b60015460ff821610156102bf578160018260ff1681548110610240576102406108e2565b90600052602060002090600202016001015411156102ad5760018160ff168154811061026e5761026e6108e2565b906000526020600020906002020160000154925060018160ff1681548110610298576102986108e2565b90600052602060002090600202016001015491505b806102b781610893565b91505061021c565b505090565b600254600160a060020a031633146102f15760405160e560020a62461bcd0281526004016101e39061081e565b60025474010000000000000000000000000000000000000000900460ff1615156001146103635760405160e560020a62461bcd02815260206004820152601160248201527f566f7465732061726520636c6f7365642e00000000000000000000000000000060448201526064016101e3565b600160a060020a038116600090815260208190526040902054819060ff16156103d15760405160e560020a62461bcd02815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101e3565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff161561046e5760405160e560020a62461bcd02815260206004820152602160248201527f596f75206861766520616c7265616479206120726967687420746f20766f746560448201527f2e0000000000000000000000000000000000000000000000000000000000000060648201526084016101e3565b5050600160a060020a03166000908152602081905260409020805465ffffffff0000191662010000179055565b60025474010000000000000000000000000000000000000000900460ff16151560011461050d5760405160e560020a62461bcd02815260206004820152601160248201527f566f7465732061726520636c6f7365642e00000000000000000000000000000060448201526064016101e3565b80600160a060020a038116331461058f5760405160e560020a62461bcd02815260206004820152602e60248201527f596f7520617265206e6f7420616c6c6f77656420746f20766f7465207769746860448201527f207468697320616464726573732e00000000000000000000000000000000000060648201526084016101e3565b600160a060020a038216600090815260208190526040902054829062010000900463ffffffff1661062b5760405160e560020a62461bcd02815260206004820152602160248201527f596f7520646f6e277420686176652074686520726967687420746f20766f746560448201527f2e0000000000000000000000000000000000000000000000000000000000000060648201526084016101e3565b600160a060020a038316600090815260208190526040902054839060ff16156106995760405160e560020a62461bcd02815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e000000000000000060448201526064016101e3565b600160a060020a0384166000908152602081905260409020805460ff8716610100810261ffff19909216919091176001908117909255815482919081106106e2576106e26108e2565b90600052602060002090600202016001016000828254610702919061087b565b90915550505050505050565b60025460009074010000000000000000000000000000000000000000900460ff161561077f5760405160e560020a62461bcd02815260206004820152601860248201527f566f74657320617265206e6f742079657420636c6f736564000000000000000060448201526064016101e3565b610787610217565b905090565b8035600160a060020a03811681146107a357600080fd5b919050565b6000602082840312156107ba57600080fd5b6107c38261078c565b9392505050565b6000602082840312156107dc57600080fd5b5035919050565b600080604083850312156107f657600080fd5b823560ff8116811461080757600080fd5b91506108156020840161078c565b90509250929050565b6020808252602b908201527f4f6e6c79206368616972706572736f6e2063616e20657865637574652074686960408201527f732066756e6374696f6e2e000000000000000000000000000000000000000000606082015260800190565b6000821982111561088e5761088e6108b3565b500190565b600060ff821660ff8114156108aa576108aa6108b3565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207c0ee366ecb5a28cf27bc85ab79fcc0cdf2f25ddbb1d6565ba21a81b10bc560864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x9E7B8D61 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xB61BFE5B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xB81C6453 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x2495C0CE EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x72133C96 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x87F7B975 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xDF PUSH2 0x217 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x108 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15A SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x133 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x70E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x2BF JUMPI DUP2 PUSH1 0x1 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x240 JUMPI PUSH2 0x240 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x26E JUMPI PUSH2 0x26E PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP3 POP PUSH1 0x1 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0x2B7 DUP2 PUSH2 0x893 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21C JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465732061726520636C6F7365642E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206120726967687420746F20766F7465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465732061726520636C6F7365642E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND CALLER EQ PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420616C6C6F77656420746F20766F74652077697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468697320616464726573732E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652074686520726967687420746F20766F7465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP8 AND PUSH2 0x100 DUP2 MUL PUSH2 0xFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD DUP3 SWAP2 SWAP1 DUP2 LT PUSH2 0x6E2 JUMPI PUSH2 0x6E2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657320617265206E6F742079657420636C6F7365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x787 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C3 DUP3 PUSH2 0x78C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x815 PUSH1 0x20 DUP5 ADD PUSH2 0x78C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206578656375746520746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E2E000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88E PUSH2 0x8B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x8AA JUMPI PUSH2 0x8AA PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xEE366ECB5A28CF27BC85AB79FCC0CDF2F25DDBB1D6565BA21A81B10BC JUMP ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:2629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:27;;;;;;:::i;:::-;;:::i;:::-;;;;1718:25:1;;;1774:2;1759:18;;1752:34;;;;1691:18;294:27:0;;;;;;;;2367:156;;;:::i;:::-;;;1508:25:1;;;1496:2;1481:18;2367:156:0;1362:177:1;2027:336:0;;;:::i;326:23::-;;;;;-1:-1:-1;;;;;326:23:0;;;;;;-1:-1:-1;;;;;1103:55:1;;;1085:74;;1073:2;1058:18;326:23:0;939:226:1;1575:174:0;;;;;;:::i;:::-;;:::i;:::-;;354:29;;;;;;;;;;;;;;;1335:14:1;;1328:22;1310:41;;1298:2;1283:18;354:29:0;1170:187:1;1753:270:0;;;;;;:::i;:::-;;:::i;2527:170::-;;;:::i;294:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:27:0;:::o;2367:156::-;862:8;;2430:19;;-1:-1:-1;;;;;862:8:0;874:10;862:22;854:78;;;;-1:-1:-1;;;;;854:78:0;;;;;;;:::i;:::-;;;;;;;;;2473:20:::1;:18;:20::i;:::-;2499:10;:18:::0;;-1:-1:-1;;2499:18:0::1;::::0;;2459:34;2367:156;-1:-1:-1;2367:156:0:o;2027:336::-;2078:19;;;2144:215;2166:9;:16;2162:20;;;;2144:215;;;2226:20;2201:9;2211:1;2201:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:45;2197:156;;;2272:9;2282:1;2272:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;2258:31;;2322:9;2332:1;2322:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;2299:45;;2197:156;2184:3;;;;:::i;:::-;;;;2144:215;;;;2099:264;2027:336;:::o;1575:174::-;862:8;;-1:-1:-1;;;;;862:8:0;874:10;862:22;854:78;;;;-1:-1:-1;;;;;854:78:0;;;;;;;:::i;:::-;984:10:::1;::::0;;;::::1;;;:18;;998:4;984:18;976:48;;;::::0;-1:-1:-1;;;;;976:48:0;;1999:2:1;976:48:0::1;::::0;::::1;1981:21:1::0;2038:2;2018:18;;;2011:30;2077:19;2057:18;;;2050:47;2114:18;;976:48:0::1;1797:341:1::0;976:48:0::1;-1:-1:-1::0;;;;;1092:14:0;::::2;:6;:14:::0;;;::::2;::::0;;;;;;:20;1677:6;;1092:20:::2;;1091:21;1083:58;;;::::0;-1:-1:-1;;;;;1083:58:0;;4329:2:1;1083:58:0::2;::::0;::::2;4311:21:1::0;4368:2;4348:18;;;4341:30;4407:26;4387:18;;;4380:54;4451:18;;1083:58:0::2;4127:348:1::0;1083:58:0::2;-1:-1:-1::0;;;;;1210:14:0;::::3;:6;:14:::0;;;::::3;::::0;;;;;;:21;:14;;:21;;::::3;;;:26:::0;1202:72:::3;;;::::0;-1:-1:-1;;;;;1202:72:0;;2345:2:1;1202:72:0::3;::::0;::::3;2327:21:1::0;2384:2;2364:18;;;2357:30;2423:34;2403:18;;;2396:62;2494:3;2474:18;;;2467:31;2515:19;;1202:72:0::3;2143:397:1::0;1202:72:0::3;-1:-1:-1::0;;;;;;;1719:14:0::4;:6;:14:::0;;;::::4;::::0;;;;;;:25;;-1:-1:-1;;1719:25:0::4;::::0;::::4;::::0;;1575:174::o;1753:270::-;984:10;;;;;;;:18;;998:4;984:18;976:48;;;;-1:-1:-1;;;;;976:48:0;;1999:2:1;976:48:0;;;1981:21:1;2038:2;2018:18;;;2011:30;2077:19;2057:18;;;2050:47;2114:18;;976:48:0;1797:341:1;976:48:0;1844:6;-1:-1:-1;;;;;1477:20:0;::::1;1487:10;1477:20;1462:97;;;::::0;-1:-1:-1;;;;;1462:97:0;;3914:2:1;1462:97:0::1;::::0;::::1;3896:21:1::0;3953:2;3933:18;;;3926:30;3992:34;3972:18;;;3965:62;4063:16;4043:18;;;4036:44;4097:19;;1462:97:0::1;3712:410:1::0;1462:97:0::1;-1:-1:-1::0;;;;;1341:14:0;::::2;:6;:14:::0;;;::::2;::::0;;;;;;:21;:14;;:21;;::::2;;;1333:72;;;::::0;-1:-1:-1;;;;;1333:72:0;;3100:2:1;1333:72:0::2;::::0;::::2;3082:21:1::0;3139:2;3119:18;;;3112:30;3178:34;3158:18;;;3151:62;3249:3;3229:18;;;3222:31;3270:19;;1333:72:0::2;2898:397:1::0;1333:72:0::2;-1:-1:-1::0;;;;;1092:14:0;::::3;:6;:14:::0;;;::::3;::::0;;;;;;:20;1892:6;;1092:20:::3;;1091:21;1083:58;;;::::0;-1:-1:-1;;;;;1083:58:0;;4329:2:1;1083:58:0::3;::::0;::::3;4311:21:1::0;4368:2;4348:18;;;4341:30;4407:26;4387:18;;;4380:54;4451:18;;1083:58:0::3;4127:348:1::0;1083:58:0::3;-1:-1:-1::0;;;;;1908:14:0;::::4;:6;:14:::0;;;::::4;::::0;;;;;;:27;;::::4;1941:33:::0;::::4;1908:27;1941:33:::0;::::4;-1:-1:-1::0;;1941:33:0;;;;;;;1931:4:::4;1941:33:::0;;;;;;1981:22;;1931:4;;1941:33;1981:22;::::4;;;;;:::i;:::-;;;;;;;;;;;:32;;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1753:270:0:o;2527:170::-;2609:10;;2570:19;;2609:10;;;;;2608:11;2600:48;;;;-1:-1:-1;;;;;2600:48:0;;2747:2:1;2600:48:0;;;2729:21:1;2786:2;2766:18;;;2759:30;2825:26;2805:18;;;2798:54;2869:18;;2600:48:0;2545:348:1;2600:48:0;2672:20;:18;:20::i;:::-;2658:34;;2527:170;:::o;14:196:1:-;82:20;;-1:-1:-1;;;;;131:54:1;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:1:o;406:180::-;465:6;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;-1:-1:-1;557:23:1;;406:180;-1:-1:-1;406:180:1:o;591:343::-;657:6;665;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;773:9;760:23;823:4;816:5;812:16;805:5;802:27;792:55;;843:1;840;833:12;792:55;866:5;-1:-1:-1;890:38:1;924:2;909:18;;890:38;:::i;:::-;880:48;;591:343;;;;;:::o;3300:407::-;3502:2;3484:21;;;3541:2;3521:18;;;3514:30;3580:34;3575:2;3560:18;;3553:62;3651:13;3646:2;3631:18;;3624:41;3697:3;3682:19;;3300:407::o;4480:128::-;4520:3;4551:1;4547:6;4544:1;4541:13;4538:39;;;4557:18;;:::i;:::-;-1:-1:-1;4593:9:1;;4480:128::o;4613:175::-;4650:3;4694:4;4687:5;4683:16;4723:4;4714:7;4711:17;4708:43;;;4731:18;;:::i;:::-;4780:1;4767:15;;4613:175;-1:-1:-1;;4613:175:1:o;4793:184::-;4845:77;4842:1;4835:88;4942:4;4939:1;4932:15;4966:4;4963:1;4956:15;4982:184;5034:77;5031:1;5024:88;5131:4;5128:1;5121:15;5155:4;5152:1;5145:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "475000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairman()": "623",
								"giveRightToVote(address)": "22048",
								"isOpenVote()": "448",
								"proposalWinnerName()": "infinite",
								"proposals(uint256)": "1026",
								"stopVote()": "infinite",
								"vote(uint8,address)": "42595",
								"winnerName()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 354,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 354,
									"end": 383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "10000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 383,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 383,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 439,
									"end": 447,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 439,
									"end": 460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 439,
									"end": 460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 450,
									"end": 460,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 460,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 482,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFF0000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 466,
									"end": 493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "PUSH",
									"source": 0,
									"value": "10000"
								},
								{
									"begin": 466,
									"end": 493,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 706,
									"end": 720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 706,
									"end": 727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 702,
									"end": 703,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 702,
									"end": 727,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 742,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 788,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 757,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 742,
									"end": 809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 729,
									"end": 732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 729,
									"end": 732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 682,
									"end": 816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 682,
									"end": 816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 109,
									"end": 115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 199,
									"end": 200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 189,
									"end": 201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 232,
									"end": 241,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 226,
									"end": 242,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 302,
									"end": 304,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 320,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 356,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 345,
									"end": 354,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 341,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 408,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 394,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 390,
									"end": 392,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 409,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 425,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 452,
									"end": 454,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 446,
									"end": 455,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 477,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 464,
									"end": 500,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 527,
									"end": 529,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 530,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 559,
									"end": 561,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 618,
									"end": 625,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 613,
									"end": 615,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 609,
									"end": 611,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 605,
									"end": 616,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 601,
									"end": 626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 589,
									"end": 627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 677,
									"end": 683,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 665,
									"end": 675,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 662,
									"end": 684,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 657,
									"end": 659,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 645,
									"end": 655,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 642,
									"end": 660,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 639,
									"end": 685,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 636,
									"end": 708,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 724,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 739,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 866,
									"end": 899,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 912,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 910,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 902,
									"end": 914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 925,
									"end": 935,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 925,
									"end": 935,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 958,
									"end": 960,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 955,
									"end": 956,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 952,
									"end": 961,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 976,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1119,
									"end": 1125,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1243,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1324,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1337,
									"end": 1352,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1379,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1380,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1559,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1560,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1576,
									"end": 1577,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1584,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1608,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1748,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1772,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1758,
									"end": 1773,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1792,
									"end": 1796,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1789,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1782,
									"end": 1797,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 2699,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c0ee366ecb5a28cf27bc85ab79fcc0cdf2f25ddbb1d6565ba21a81b10bc560864736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "B61BFE5B"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "B81C6453"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "E2BA53F0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "2495C0CE"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "72133C96"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "87F7B975"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 2699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1743,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1362,
											"end": 1539,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 326,
											"end": 349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1058,
											"end": 1076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 939,
											"end": 1165,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1350,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 354,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1170,
											"end": 1357,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 294,
											"end": 321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 294,
											"end": 321,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 862,
											"end": 870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 874,
											"end": 884,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 862,
											"end": 884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 854,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2523,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2201,
											"end": 2223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2289,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2197,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2363,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 862,
											"end": 870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 874,
											"end": 884,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 862,
											"end": 884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 854,
											"end": 932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 854,
											"end": 932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "566F7465732061726520636C6F7365642E000000000000000000000000000000"
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1797,
											"end": 2138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4433,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4127,
											"end": 4475,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2457,
											"name": "PUSH",
											"source": 1,
											"value": "596F75206861766520616C7265616479206120726967687420746F20766F7465"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2143,
											"end": 2540,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1202,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "566F7465732061726520636C6F7365642E000000000000000000000000000000"
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1797,
											"end": 2138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 976,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1497,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 3933,
											"end": 3951,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3933,
											"end": 3951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F7420616C6C6F77656420746F20766F74652077697468"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "207468697320616464726573732E000000000000000000000000000000000000"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3712,
											"end": 4122,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1462,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3119,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3119,
											"end": 3137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3212,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E277420686176652074686520726967687420746F20766F7465"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3252,
											"name": "PUSH",
											"source": 1,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3289,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3270,
											"end": 3289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2898,
											"end": 3295,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1333,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4433,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4127,
											"end": 4475,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1083,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 2023,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 1,
											"value": "566F74657320617265206E6F742079657420636C6F7365640000000000000000"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2869,
											"end": 2887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2545,
											"end": 2893,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2600,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 406,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 465,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 486,
											"end": 538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 486,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 486,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 406,
											"end": 586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 406,
											"end": 586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 591,
											"end": 934,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 591,
											"end": 934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 657,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 704,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 693,
											"end": 716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 689,
											"end": 721,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 686,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 734,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 736,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 738,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 760,
											"end": 783,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 823,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 816,
											"end": 821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 828,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 802,
											"end": 829,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 792,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 792,
											"end": 847,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 833,
											"end": 845,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 792,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 792,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 890,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 924,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 909,
											"end": 927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 890,
											"end": 928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 928,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 890,
											"end": 928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 934,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 934,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 591,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 934,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3300,
											"end": 3707,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3300,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206578656375746520746869"
										},
										{
											"begin": 3575,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "732066756E6374696F6E2E000000000000000000000000000000000000000000"
										},
										{
											"begin": 3646,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3631,
											"end": 3649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3682,
											"end": 3701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3707,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4480,
											"end": 4608,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4480,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4554,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4577,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4538,
											"end": 4577,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4480,
											"end": 4608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4613,
											"end": 4788,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4613,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4687,
											"end": 4692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4727,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4708,
											"end": 4751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4767,
											"end": 4782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4782,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4793,
											"end": 4977,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4793,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4922,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4946,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 4947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4963,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5166,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4982,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5031,
											"end": 5032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5135,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5160,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairman()": "87f7b975",
							"giveRightToVote(address)": "9e7b8d61",
							"isOpenVote()": "b61bfe5b",
							"proposalWinnerName()": "72133c96",
							"proposals(uint256)": "013cf08b",
							"stopVote()": "2495c0ce",
							"vote(uint8,address)": "b81c6453",
							"winnerName()": "e2ba53f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairman\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpenVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalWinnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_winnerName\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_winnerName\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_proposalId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_winnerName\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Ballot.sol\":\"Vote\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/3_Ballot.sol\":{\"keccak256\":\"0x0c2783d6e27b5d6afe6b756258a215b3e9899ce604600f4889f51dd9585194fb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7ec77189259b8d72037234230ee63b0e1b487cc7aacfa108b6d9b87d2e1d6f20\",\"dweb:/ipfs/QmPayH2JCfagsrvRJa5E56MpwzvKrdBWL9dRCEqeeA844i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "voters",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Voter)10_storage)"
							},
							{
								"astId": 24,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "proposals",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Proposal)15_storage)dyn_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "chairman",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": "contracts/3_Ballot.sol:Vote",
								"label": "isOpenVote",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)15_storage)dyn_storage": {
								"base": "t_struct(Proposal)15_storage",
								"encoding": "dynamic_array",
								"label": "struct Vote.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Vote.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)10_storage"
							},
							"t_struct(Proposal)15_storage": {
								"encoding": "inplace",
								"label": "struct Vote.Proposal",
								"members": [
									{
										"astId": 12,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 14,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)10_storage": {
								"encoding": "inplace",
								"label": "struct Vote.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "voted",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 5,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "vote",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 7,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "weight",
										"offset": 2,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 9,
										"contract": "contracts/3_Ballot.sol:Vote",
										"label": "delegate",
										"offset": 6,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"ast": {
					"absolutePath": "contracts/3_Ballot.sol",
					"exportedSymbols": {
						"Vote": [
							299
						]
					},
					"id": 300,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "Vote",
							"nameLocation": "79:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Vote.Voter",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "112:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "107:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "107:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "129:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "123:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 4,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "123:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "146:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "139:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 6,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "139:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "166:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "158:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "158:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "95:5:0",
									"nodeType": "StructDefinition",
									"scope": 299,
									"src": "88:91:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Vote.Proposal",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "213:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "205:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 11,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "205:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "231:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "223:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "223:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "190:8:0",
									"nodeType": "StructDefinition",
									"scope": 299,
									"src": "183:62:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "283:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "249:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
										"typeString": "mapping(address => struct Vote.Voter)"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "257:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "249:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
											"typeString": "mapping(address => struct Vote.Voter)"
										},
										"valueType": {
											"id": 18,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 17,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "268:5:0"
											},
											"referencedDeclaration": 10,
											"src": "268:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
												"typeString": "struct Vote.Voter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 24,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "312:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "294:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
										"typeString": "struct Vote.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 15,
												"src": "294:8:0"
											},
											"referencedDeclaration": 15,
											"src": "294:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$15_storage_ptr",
												"typeString": "struct Vote.Proposal"
											}
										},
										"id": 23,
										"nodeType": "ArrayTypeName",
										"src": "294:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr",
											"typeString": "struct Vote.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87f7b975",
									"id": 26,
									"mutability": "mutable",
									"name": "chairman",
									"nameLocation": "341:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "326:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b61bfe5b",
									"id": 29,
									"mutability": "mutable",
									"name": "isOpenVote",
									"nameLocation": "366:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "354:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 27,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "354:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "379:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "433:387:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "chairman",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "439:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 36,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "450:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "450:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "439:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "439:21:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 40,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "466:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 42,
															"indexExpression": {
																"id": 41,
																"name": "chairman",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "473:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "466:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "466:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "466:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "466:27:0"
											},
											{
												"body": {
													"id": 69,
													"nodeType": "Block",
													"src": "734:82:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 62,
																					"name": "_proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "774:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 64,
																				"indexExpression": {
																					"id": 63,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 48,
																					"src": "789:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "774:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 65,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "804:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 61,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "757:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$15_storage_ptr_$",
																				"typeString": "type(struct Vote.Proposal storage pointer)"
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "757:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Vote.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Vote.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 58,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "742:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																			"typeString": "struct Vote.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "742:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$15_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Vote.Proposal storage ref[] storage pointer,struct Vote.Proposal storage ref)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "742:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 68,
															"nodeType": "ExpressionStatement",
															"src": "742:67:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 52,
															"name": "_proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "706:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "706:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "702:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "[\"0x616c696365000000000000000000000000000000000000000000000000000000\",\"0x626f620000000000000000000000000000000000000000000000000000000000\"]\n[\"alice\",\"bob\"]*",
												"id": 70,
												"initializationExpression": {
													"assignments": [
														48
													],
													"declarations": [
														{
															"constant": false,
															"id": 48,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "695:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 70,
															"src": "687:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 47,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "687:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 50,
													"initialValue": {
														"hexValue": "30",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "699:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "687:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "729:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "729:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "729:3:0"
												},
												"nodeType": "ForStatement",
												"src": "682:134:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_proposalNames",
												"nameLocation": "417:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "400:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 30,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 31,
													"nodeType": "ArrayTypeName",
													"src": "400:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:33:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:0:0"
									},
									"scope": 299,
									"src": "388:432:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "848:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 75,
																"name": "chairman",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "862:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 76,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "874:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "874:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "862:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206578656375746520746869732066756e6374696f6e2e",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3",
																"typeString": "literal_string \"Only chairperson can execute this function.\""
															},
															"value": "Only chairperson can execute this function."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97b9cf177375f50afa7fbfe60b64beda629486ab8fe81975790d035134da37f3",
																"typeString": "literal_string \"Only chairperson can execute this function.\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "854:78:0"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "938:1:0"
											}
										]
									},
									"id": 84,
									"name": "onlyChairman",
									"nameLocation": "833:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:0"
									},
									"src": "824:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "970:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 87,
																"name": "isOpenVote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "984:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "998:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "984:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f7465732061726520636c6f7365642e",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1004:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc",
																"typeString": "literal_string \"Votes are closed.\""
															},
															"value": "Votes are closed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_061b787db7e7e7a3733c589ac849595d1cb3f9a0b5e18ef5c6299281062604cc",
																"typeString": "literal_string \"Votes are closed.\""
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "976:48:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "1030:1:0"
											}
										]
									},
									"id": 95,
									"name": "voteOpened",
									"nameLocation": "957:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"src": "948:88:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1077:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1091:21:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 100,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1092:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Vote.Voter storage ref)"
																		}
																	},
																	"id": 102,
																	"indexExpression": {
																		"id": 101,
																		"name": "_voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "1099:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1092:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Vote.Voter storage ref"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1092:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f7465642e",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															},
															"value": "The voter already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1083:58:0"
											},
											{
												"id": 108,
												"nodeType": "PlaceholderStatement",
												"src": "1147:1:0"
											}
										]
									},
									"id": 110,
									"name": "notYetVoted",
									"nameLocation": "1049:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1061:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:16:0"
									},
									"src": "1040:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1196:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 115,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1210:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Vote.Voter storage ref)"
																		}
																	},
																	"id": 117,
																	"indexExpression": {
																		"id": 116,
																		"name": "_voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 112,
																		"src": "1217:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1210:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Vote.Voter storage ref"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1210:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520616c7265616479206120726967687420746f20766f74652e",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1238:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05",
																"typeString": "literal_string \"You have already a right to vote.\""
															},
															"value": "You have already a right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37adbc8c41e4d10d3b860290f0ad7dd14f66f2d3418163e3080fda393e638b05",
																"typeString": "literal_string \"You have already a right to vote.\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1202:72:0"
											},
											{
												"id": 124,
												"nodeType": "PlaceholderStatement",
												"src": "1280:1:0"
											}
										]
									},
									"id": 126,
									"name": "noRightToVote",
									"nameLocation": "1166:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1188:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:16:0"
									},
									"src": "1157:129:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1327:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 131,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1341:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Vote.Voter storage ref)"
																		}
																	},
																	"id": 133,
																	"indexExpression": {
																		"id": 132,
																		"name": "_voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "1348:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1341:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Vote.Voter storage ref"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1341:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1341:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e277420686176652074686520726967687420746f20766f74652e",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9",
																"typeString": "literal_string \"You don't have the right to vote.\""
															},
															"value": "You don't have the right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80c94ec20a26e62011f349f655920b3b02deeb43acb500ee979d2f09bda6fbb9",
																"typeString": "literal_string \"You don't have the right to vote.\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1333:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1333:72:0"
											},
											{
												"id": 140,
												"nodeType": "PlaceholderStatement",
												"src": "1411:1:0"
											}
										]
									},
									"id": 142,
									"name": "rightToVote",
									"nameLocation": "1299:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1319:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1311:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:16:0"
									},
									"src": "1290:127:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1456:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "1477:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 148,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1487:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1487:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1477:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f77656420746f20766f74652077697468207468697320616464726573732e",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69",
																"typeString": "literal_string \"You are not allowed to vote with this address.\""
															},
															"value": "You are not allowed to vote with this address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7053a14186300ae7553f86cc91ac14a7f53deb3369a527acfbc1b914de5bc69",
																"typeString": "literal_string \"You are not allowed to vote with this address.\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1462:97:0"
											},
											{
												"id": 154,
												"nodeType": "PlaceholderStatement",
												"src": "1565:1:0"
											}
										]
									},
									"id": 156,
									"name": "onlyVoter",
									"nameLocation": "1430:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1448:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:16:0"
									},
									"src": "1421:150:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1713:36:0",
										"statements": [
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 171,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1719:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 173,
															"indexExpression": {
																"id": 172,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "1726:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1719:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1719:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1719:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1719:25:0"
											}
										]
									},
									"functionSelector": "9e7b8d61",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 160,
												"name": "onlyChairman",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "1633:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1633:12:0"
										},
										{
											"id": 163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 162,
												"name": "voteOpened",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 95,
												"src": "1650:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1650:10:0"
										},
										{
											"arguments": [
												{
													"id": 165,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "1677:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 164,
												"name": "notYetVoted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "1665:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1665:19:0"
										},
										{
											"arguments": [
												{
													"id": 168,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "1703:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "noRightToVote",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "1689:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1689:21:0"
										}
									],
									"name": "giveRightToVote",
									"nameLocation": "1584:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:16:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1713:0:0"
									},
									"scope": 299,
									"src": "1575:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1902:121:0",
										"statements": [
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 197,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 199,
															"indexExpression": {
																"id": 198,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1915:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1908:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1908:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1931:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1908:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1908:27:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1941:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Vote.Voter storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "_voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1948:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1941:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Vote.Voter storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1941:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "_proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "1963:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1941:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1941:33:0"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 211,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1981:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																	"typeString": "struct Vote.Proposal storage ref[] storage ref"
																}
															},
															"id": 213,
															"indexExpression": {
																"id": 212,
																"name": "_proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1991:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1981:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$15_storage",
																"typeString": "struct Vote.Proposal storage ref"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "1981:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2017:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1981:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1981:37:0"
											}
										]
									},
									"functionSelector": "b81c6453",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 185,
												"name": "voteOpened",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 95,
												"src": "1819:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1819:10:0"
										},
										{
											"arguments": [
												{
													"id": 188,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "1844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 156,
												"src": "1834:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1834:17:0"
										},
										{
											"arguments": [
												{
													"id": 191,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "1868:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "rightToVote",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1856:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1856:19:0"
										},
										{
											"arguments": [
												{
													"id": 194,
													"name": "_voter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "1892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 193,
												"name": "notYetVoted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "1880:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1880:19:0"
										}
									],
									"name": "vote",
									"nameLocation": "1762:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_proposalId",
												"nameLocation": "1773:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1767:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:35:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:0:0"
									},
									"scope": 299,
									"src": "1753:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2099:264:0",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "_numberOfWinnerVotes",
														"nameLocation": "2113:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "2105:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"hexValue": "30",
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2136:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:32:0"
											},
											{
												"body": {
													"id": 261,
													"nodeType": "Block",
													"src": "2189:170:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 239,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2201:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																				"typeString": "struct Vote.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 241,
																		"indexExpression": {
																			"id": 240,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "2211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2201:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_storage",
																			"typeString": "struct Vote.Proposal storage ref"
																		}
																	},
																	"id": 242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 14,
																	"src": "2201:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 243,
																	"name": "_numberOfWinnerVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2226:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2201:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 260,
															"nodeType": "IfStatement",
															"src": "2197:156:0",
															"trueBody": {
																"id": 259,
																"nodeType": "Block",
																"src": "2248:105:0",
																"statements": [
																	{
																		"expression": {
																			"id": 250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 245,
																				"name": "_winnerName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "2258:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 246,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 24,
																						"src": "2272:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																							"typeString": "struct Vote.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 248,
																					"indexExpression": {
																						"id": 247,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 229,
																						"src": "2282:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2272:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$15_storage",
																						"typeString": "struct Vote.Proposal storage ref"
																					}
																				},
																				"id": 249,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "name",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "2272:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2258:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 251,
																		"nodeType": "ExpressionStatement",
																		"src": "2258:31:0"
																	},
																	{
																		"expression": {
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 252,
																				"name": "_numberOfWinnerVotes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "2299:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 253,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 24,
																						"src": "2322:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																							"typeString": "struct Vote.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 255,
																					"indexExpression": {
																						"id": 254,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 229,
																						"src": "2332:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2322:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$15_storage",
																						"typeString": "struct Vote.Proposal storage ref"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 14,
																				"src": "2322:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2299:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 258,
																		"nodeType": "ExpressionStatement",
																		"src": "2299:45:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 232,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2162:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 233,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																"typeString": "struct Vote.Proposal storage ref[] storage ref"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2166:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2162:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 262,
												"initializationExpression": {
													"assignments": [
														229
													],
													"declarations": [
														{
															"constant": false,
															"id": 229,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2155:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 262,
															"src": "2149:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 228,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2149:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 231,
													"initialValue": {
														"hexValue": "30",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2149:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2184:3:0",
														"subExpression": {
															"id": 236,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 238,
													"nodeType": "ExpressionStatement",
													"src": "2184:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2144:215:0"
											}
										]
									},
									"functionSelector": "72133c96",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proposalWinnerName",
									"nameLocation": "2036:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:2:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_winnerName",
												"nameLocation": "2086:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2078:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:21:0"
									},
									"scope": 299,
									"src": "2027:336:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "2453:70:0",
										"statements": [
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 271,
														"name": "_winnerName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2459:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 272,
															"name": "proposalWinnerName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2473:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2473:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2459:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2459:34:0"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 276,
														"name": "isOpenVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2499:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2512:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2499:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2499:18:0"
											}
										]
									},
									"functionSelector": "2495c0ce",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 266,
												"name": "onlyChairman",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "2404:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2404:12:0"
										}
									],
									"name": "stopVote",
									"nameLocation": "2376:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_winnerName",
												"nameLocation": "2438:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2430:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:21:0"
									},
									"scope": 299,
									"src": "2367:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2590:107:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2608:11:0",
															"subExpression": {
																"id": 287,
																"name": "isOpenVote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74657320617265206e6f742079657420636c6f736564",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2621:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c",
																"typeString": "literal_string \"Votes are not yet closed\""
															},
															"value": "Votes are not yet closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c4ca0e8c7d139896a5476b7d0677e8bfb4d9a2caced101f3b34697e05d2921c",
																"typeString": "literal_string \"Votes are not yet closed\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2600:48:0"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "_winnerName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2658:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 293,
															"name": "proposalWinnerName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2672:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2672:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2658:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2658:34:0"
											}
										]
									},
									"functionSelector": "e2ba53f0",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winnerName",
									"nameLocation": "2536:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2546:2:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_winnerName",
												"nameLocation": "2578:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2570:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:21:0"
									},
									"scope": 299,
									"src": "2527:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 300,
							"src": "70:2629:0",
							"usedErrors": []
						}
					],
					"src": "37:2662:0"
				},
				"id": 0
			}
		}
	}
}